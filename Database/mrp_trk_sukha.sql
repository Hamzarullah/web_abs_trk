/*
SQLyog Ultimate v12.5.1 (64 bit)
MySQL - 5.1.44-community : Database - mrp_trk
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*Table structure for table `_coa` */

DROP TABLE IF EXISTS `_coa`;

CREATE TABLE `_coa` (
  `SortNo` double DEFAULT NULL,
  `Group` varchar(255) DEFAULT NULL,
  `OldCOA` varchar(255) DEFAULT NULL,
  `Length` double DEFAULT NULL,
  `Type` varchar(255) DEFAULT NULL,
  `NewCOA` varchar(255) NOT NULL,
  `NameProper` varchar(255) DEFAULT NULL,
  `NameNormal` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`NewCOA`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `_coa` */

/*Table structure for table `_mst_customer` */

DROP TABLE IF EXISTS `_mst_customer`;

CREATE TABLE `_mst_customer` (
  `Code` varchar(255) DEFAULT NULL,
  `Name` varchar(255) DEFAULT NULL,
  `Address` varchar(255) DEFAULT NULL,
  `CityCode` varchar(255) DEFAULT NULL,
  `ZipCode` double DEFAULT NULL,
  `Phone1` varchar(255) DEFAULT NULL,
  `Phone2` varchar(255) DEFAULT NULL,
  `Fax` varchar(255) DEFAULT NULL,
  `EmailAddress` varchar(255) DEFAULT NULL,
  `CustomerCategoryCode` varchar(255) DEFAULT NULL,
  `PaymentTermCode` varchar(255) DEFAULT NULL,
  `ARAccountCode` varchar(255) DEFAULT NULL,
  `DefaultContactPersonCode` varchar(255) DEFAULT NULL,
  `DefaultShipToCode` varchar(255) DEFAULT NULL,
  `DefaultBillToCode` varchar(255) DEFAULT NULL,
  `TaxCode` varchar(255) DEFAULT NULL,
  `NPWP` varchar(255) DEFAULT NULL,
  `NPWPName` varchar(255) DEFAULT NULL,
  `NPWPAddress` varchar(255) DEFAULT NULL,
  `NPWPCityCode` varchar(255) DEFAULT NULL,
  `NPWPZipCode` varchar(255) DEFAULT NULL,
  `CustomerStatus` double DEFAULT NULL,
  `EndUserStatus` double DEFAULT NULL,
  `ActiveStatus` double DEFAULT NULL,
  `CreatedBy` varchar(255) DEFAULT NULL,
  `CreatedDate` varchar(255) DEFAULT NULL,
  `UpdatedBy` varchar(255) DEFAULT NULL,
  `UpdatedDate` varchar(255) DEFAULT NULL,
  `InActiveBy` varchar(255) DEFAULT NULL,
  `InActiveDate` varchar(255) DEFAULT NULL,
  `Remark` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `_mst_customer` */

/*Table structure for table `_mst_customer_address` */

DROP TABLE IF EXISTS `_mst_customer_address`;

CREATE TABLE `_mst_customer_address` (
  `Code` varchar(255) DEFAULT NULL,
  `CustomerCode` varchar(255) DEFAULT NULL,
  `Name` varchar(255) DEFAULT NULL,
  `Address` varchar(255) DEFAULT NULL,
  `CityCode` varchar(255) DEFAULT NULL,
  `ZipCode` double DEFAULT NULL,
  `Phone1` varchar(255) DEFAULT NULL,
  `Phone2` varchar(255) DEFAULT NULL,
  `Fax` varchar(255) DEFAULT NULL,
  `EmailAddress` varchar(255) DEFAULT NULL,
  `ContactPerson` varchar(255) DEFAULT NULL,
  `ShipToStatus` varchar(255) DEFAULT NULL,
  `BillToStatus` varchar(255) DEFAULT NULL,
  `ActiveStatus` varchar(255) DEFAULT NULL,
  `CreatedBy` varchar(255) DEFAULT NULL,
  `CreatedDate` varchar(255) DEFAULT NULL,
  `UpdatedBy` varchar(255) DEFAULT NULL,
  `UpdatedDate` varchar(255) DEFAULT NULL,
  `InActiveBy` varchar(255) DEFAULT NULL,
  `InActiveDate` varchar(255) DEFAULT NULL,
  `Remark` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `_mst_customer_address` */

/*Table structure for table `_rpt_acc` */

DROP TABLE IF EXISTS `_rpt_acc`;

CREATE TABLE `_rpt_acc` (
  `No` varchar(255) NOT NULL,
  `Code` varchar(255) DEFAULT NULL,
  `Classes` varchar(255) DEFAULT NULL,
  `ParentCode` varchar(255) DEFAULT NULL,
  `Text` varchar(255) DEFAULT NULL,
  `link` varchar(255) DEFAULT NULL,
  `sortno` decimal(18,0) DEFAULT NULL,
  PRIMARY KEY (`No`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `_rpt_acc` */

/*Table structure for table `_rpt_fin` */

DROP TABLE IF EXISTS `_rpt_fin`;

CREATE TABLE `_rpt_fin` (
  `No` varchar(255) NOT NULL,
  `Code` varchar(255) DEFAULT NULL,
  `Classes` varchar(255) DEFAULT NULL,
  `ParentCode` varchar(255) DEFAULT NULL,
  `text` varchar(255) DEFAULT NULL,
  `link` varchar(255) DEFAULT NULL,
  `sortno` decimal(18,0) DEFAULT NULL,
  PRIMARY KEY (`No`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `_rpt_fin` */

/*Table structure for table `_rpt_ivt` */

DROP TABLE IF EXISTS `_rpt_ivt`;

CREATE TABLE `_rpt_ivt` (
  `No` varchar(255) NOT NULL,
  `Code` varchar(255) DEFAULT NULL,
  `classes` varchar(255) DEFAULT NULL,
  `parentcode` varchar(255) DEFAULT NULL,
  `text` varchar(255) DEFAULT NULL,
  `link` varchar(255) DEFAULT NULL,
  `sortno` decimal(18,0) DEFAULT NULL,
  PRIMARY KEY (`No`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `_rpt_ivt` */

/*Table structure for table `_rpt_pur` */

DROP TABLE IF EXISTS `_rpt_pur`;

CREATE TABLE `_rpt_pur` (
  `No` varchar(255) NOT NULL,
  `Description` varchar(255) DEFAULT NULL,
  `classes` varchar(255) DEFAULT NULL,
  `parentcode` varchar(255) DEFAULT NULL,
  `text` varchar(255) DEFAULT NULL,
  `link` varchar(255) DEFAULT NULL,
  `sortno` decimal(18,0) DEFAULT NULL,
  PRIMARY KEY (`No`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `_rpt_pur` */

/*Table structure for table `_rpt_sal` */

DROP TABLE IF EXISTS `_rpt_sal`;

CREATE TABLE `_rpt_sal` (
  `No` varchar(255) DEFAULT NULL,
  `Code` varchar(255) DEFAULT NULL,
  `classes` varchar(255) DEFAULT NULL,
  `parentcode` varchar(255) DEFAULT NULL,
  `text` varchar(255) DEFAULT NULL,
  `link` varchar(255) DEFAULT NULL,
  `sortno` decimal(18,0) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `_rpt_sal` */

/*Table structure for table `_valve_component` */

DROP TABLE IF EXISTS `_valve_component`;

CREATE TABLE `_valve_component` (
  `SortNo` double DEFAULT NULL,
  `ValveTypeCode` varchar(255) DEFAULT NULL,
  `ValveTypeComponentName` varchar(255) DEFAULT NULL,
  `Sortno1` double DEFAULT NULL,
  `ValveTypeComponentCode` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `_valve_component` */

/*Table structure for table `acc_journal` */

DROP TABLE IF EXISTS `acc_journal`;

CREATE TABLE `acc_journal` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `JournalVoucherCode` varchar(250) DEFAULT NULL,
  `AutomaticJournalType` varchar(255) DEFAULT NULL,
  `DeleteStatus` tinyint(1) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `JournalType` varchar(255) DEFAULT NULL,
  `ParentVoucherNo` varchar(255) DEFAULT NULL,
  `PostingStatus` tinyint(1) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `Remark` varchar(255) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `acc_journal` */

/*Table structure for table `acc_journal_detail` */

DROP TABLE IF EXISTS `acc_journal_detail`;

CREATE TABLE `acc_journal_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `Credit` decimal(18,4) DEFAULT NULL,
  `Debit` decimal(18,4) DEFAULT NULL,
  `Remark` varchar(255) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `acc_journal_detail` */

/*Table structure for table `ast_asset_disposal` */

DROP TABLE IF EXISTS `ast_asset_disposal`;

CREATE TABLE `ast_asset_disposal` (
  `code` varchar(250) NOT NULL DEFAULT '',
  `Branchcode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `refno` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ast_asset_disposal` */

/*Table structure for table `ast_asset_disposal_detail` */

DROP TABLE IF EXISTS `ast_asset_disposal_detail`;

CREATE TABLE `ast_asset_disposal_detail` (
  `code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `AssetCode` varchar(250) DEFAULT NULL,
  `remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ast_asset_disposal_detail` */

/*Table structure for table `ast_asset_position_transfer` */

DROP TABLE IF EXISTS `ast_asset_position_transfer`;

CREATE TABLE `ast_asset_position_transfer` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `NewAssetPositionCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ast_asset_position_transfer` */

/*Table structure for table `ast_asset_position_transfer_detail` */

DROP TABLE IF EXISTS `ast_asset_position_transfer_detail`;

CREATE TABLE `ast_asset_position_transfer_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `AssetCode` varchar(250) DEFAULT NULL,
  `HeaderCode` varchar(250) DEFAULT NULL,
  `LastAssetPositionCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ast_asset_position_transfer_detail` */

/*Table structure for table `ast_asset_registration` */

DROP TABLE IF EXISTS `ast_asset_registration`;

CREATE TABLE `ast_asset_registration` (
  `code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `AcquiredDate` datetime DEFAULT NULL,
  `AssetCategoryCode` varchar(250) DEFAULT NULL,
  `departmentcode` varchar(250) DEFAULT NULL,
  `depreciationmethod` varchar(250) DEFAULT NULL,
  `economiclifetimeyear` decimal(2,0) DEFAULT NULL,
  `economiclifetimemonth` decimal(3,0) DEFAULT NULL,
  `currencycode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `price` decimal(18,4) DEFAULT NULL,
  `salvagevalue` decimal(18,4) DEFAULT NULL,
  `AllocatedCost` decimal(18,4) DEFAULT NULL,
  `serialno` varchar(250) DEFAULT NULL,
  `AssetPositionCode` varchar(250) DEFAULT NULL,
  `FifteenthStatus` tinyint(1) DEFAULT NULL,
  `refNo` varchar(250) DEFAULT NULL,
  `remark` text,
  `ApprovedStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `positioncode` varchar(250) DEFAULT '',
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ast_asset_registration` */

/*Table structure for table `ast_asset_registration_depreciation_detail` */

DROP TABLE IF EXISTS `ast_asset_registration_depreciation_detail`;

CREATE TABLE `ast_asset_registration_depreciation_detail` (
  `code` varchar(250) NOT NULL DEFAULT '',
  `headercode` varchar(250) DEFAULT NULL,
  `periodyear` decimal(4,0) DEFAULT NULL,
  `periodmonth` decimal(2,0) DEFAULT NULL,
  `depreciationamount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ast_asset_registration_depreciation_detail` */

/*Table structure for table `ast_depreciation_posting` */

DROP TABLE IF EXISTS `ast_depreciation_posting`;

CREATE TABLE `ast_depreciation_posting` (
  `code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `branchcode` varchar(250) DEFAULT NULL,
  `periodmonth` decimal(2,0) DEFAULT NULL,
  `periodyear` decimal(4,0) DEFAULT NULL,
  `currencycode` varchar(250) DEFAULT NULL,
  `refno` varchar(250) DEFAULT NULL,
  `remark` text,
  `closingdate` datetime DEFAULT NULL,
  `closingstatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ast_depreciation_posting` */

/*Table structure for table `ast_depreciation_posting_detail` */

DROP TABLE IF EXISTS `ast_depreciation_posting_detail`;

CREATE TABLE `ast_depreciation_posting_detail` (
  `code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `AssetCode` varchar(250) DEFAULT NULL,
  `DepreciationAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ast_depreciation_posting_detail` */

/*Table structure for table `eng_internal_memo` */

DROP TABLE IF EXISTS `eng_internal_memo`;

CREATE TABLE `eng_internal_memo` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `ProjectCode` varchar(250) DEFAULT NULL,
  `Subject` varchar(250) DEFAULT NULL,
  `IM_To` varchar(250) DEFAULT NULL,
  `Attention` varchar(250) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `SalesPersonCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `eng_internal_memo` */

/*Table structure for table `eng_internal_memo_detail` */

DROP TABLE IF EXISTS `eng_internal_memo_detail`;

CREATE TABLE `eng_internal_memo_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `InternalMemoSortNo` decimal(18,4) DEFAULT NULL,
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `Description` varchar(250) DEFAULT NULL,
  `ValveTag` varchar(250) DEFAULT NULL,
  `ValveDataSheet` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `eng_internal_memo_detail` */

/*Table structure for table `eng_material_template` */

DROP TABLE IF EXISTS `eng_material_template`;

CREATE TABLE `eng_material_template` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `eng_material_template` */

/*Table structure for table `eng_material_template_detail` */

DROP TABLE IF EXISTS `eng_material_template_detail`;

CREATE TABLE `eng_material_template_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SortNo` decimal(18,4) DEFAULT NULL,
  `PartNo` varchar(250) DEFAULT NULL,
  `PartCode` varchar(250) DEFAULT NULL,
  `DrawingCode` varchar(250) DEFAULT NULL,
  `Dimension` varchar(250) DEFAULT NULL,
  `Material` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Requirement` varchar(250) DEFAULT NULL,
  `ProcessedStatus` enum('MACHINING','NON_MACHINING') DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `X` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `eng_material_template_detail` */

/*Table structure for table `fin_bank_payment` */

DROP TABLE IF EXISTS `fin_bank_payment`;

CREATE TABLE `fin_bank_payment` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionType` enum('Regular','Deposit') DEFAULT NULL,
  `PaymentTo` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `BankAccountCode` varchar(250) DEFAULT NULL,
  `PaymentType` varchar(250) DEFAULT NULL,
  `GiroPaymentNo` varchar(250) DEFAULT NULL,
  `TransferPaymentNo` varchar(250) DEFAULT NULL,
  `TransferPaymentDate` datetime DEFAULT NULL,
  `TransferBankName` varchar(250) DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_bank_payment` */

insert  into `fin_bank_payment`(`Code`,`TransactionDate`,`BranchCode`,`TransactionType`,`PaymentTo`,`CurrencyCode`,`ExchangeRate`,`BankAccountCode`,`PaymentType`,`GiroPaymentNo`,`TransferPaymentNo`,`TransferPaymentDate`,`TransferBankName`,`TotalTransactionAmount`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/12320020001','2020-02-24 17:31:48','B001','Regular','-','IDR',1.0000,'DADAH','Other','','-','2020-02-24 17:31:48','-',9.0000,'-','-','ADMIN','2020-02-24 17:32:15','','1900-01-01 00:00:00');
insert  into `fin_bank_payment`(`Code`,`TransactionDate`,`BranchCode`,`TransactionType`,`PaymentTo`,`CurrencyCode`,`ExchangeRate`,`BankAccountCode`,`PaymentType`,`GiroPaymentNo`,`TransferPaymentNo`,`TransferPaymentDate`,`TransferBankName`,`TotalTransactionAmount`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/12320030001','2020-03-02 23:49:23','B001','Regular','123','IDR',1.0000,'ULL','Other','','123','2020-03-02 23:49:23','123',2000.0000,'12','3123','ADMIN','2020-03-02 23:49:43','','1900-01-01 00:00:00');
insert  into `fin_bank_payment`(`Code`,`TransactionDate`,`BranchCode`,`TransactionType`,`PaymentTo`,`CurrencyCode`,`ExchangeRate`,`BankAccountCode`,`PaymentType`,`GiroPaymentNo`,`TransferPaymentNo`,`TransferPaymentDate`,`TransferBankName`,`TotalTransactionAmount`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/123CDP20020001','2020-02-24 17:32:37','B001','Deposit','-','IDR',1.0000,'ULL','Other','','-','2020-02-24 17:32:37','-',10.0000,'-','-','ADMIN','2020-02-24 17:33:11','','1900-01-01 00:00:00');

/*Table structure for table `fin_bank_payment_deposit` */

DROP TABLE IF EXISTS `fin_bank_payment_deposit`;

CREATE TABLE `fin_bank_payment_deposit` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `PaymentRequestCode` varchar(250) DEFAULT NULL,
  `BankPaymentCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_bank_payment_deposit` */

/*Table structure for table `fin_bank_payment_detail` */

DROP TABLE IF EXISTS `fin_bank_payment_detail`;

CREATE TABLE `fin_bank_payment_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `PaymentRequestCode` varchar(250) DEFAULT NULL,
  `DocumentNo` varchar(250) DEFAULT NULL,
  `DocumentType` varchar(250) DEFAULT NULL,
  `DocumentBranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `TransactionStatus` varchar(250) DEFAULT NULL,
  `Credit` decimal(18,4) DEFAULT NULL,
  `CreditIDR` decimal(18,4) DEFAULT NULL,
  `Debit` decimal(18,4) DEFAULT NULL,
  `DebitIDR` decimal(18,4) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_bank_payment_detail` */

insert  into `fin_bank_payment_detail`(`Code`,`HeaderCode`,`BranchCode`,`PaymentRequestCode`,`DocumentNo`,`DocumentType`,`DocumentBranchCode`,`CurrencyCode`,`ExchangeRate`,`TransactionStatus`,`Credit`,`CreditIDR`,`Debit`,`DebitIDR`,`ChartOfAccountCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/12320020001-001','B001/12320020001','B001','B001/PYM-RQ/PRQ200200003',' ',' ',' ','IDR',1.0000,'Other',0.0000,0.0000,9.0000,9.0000,'01-01-001-0002-MMS','','ADMIN','2020-02-24 17:32:15','ADMIN','2020-02-24 17:32:15');
insert  into `fin_bank_payment_detail`(`Code`,`HeaderCode`,`BranchCode`,`PaymentRequestCode`,`DocumentNo`,`DocumentType`,`DocumentBranchCode`,`CurrencyCode`,`ExchangeRate`,`TransactionStatus`,`Credit`,`CreditIDR`,`Debit`,`DebitIDR`,`ChartOfAccountCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/12320030001-001','B001/12320030001','B001','B001/PYM-RQ/PRQ200300002','B001/CDN/20030001','CDN','B001','IDR',1.0000,'Transaction',0.0000,0.0000,2000.0000,2000.0000,'01-01-001-0001-TRK','','ADMIN','2020-03-02 23:49:43','ADMIN','2020-03-02 23:49:43');
insert  into `fin_bank_payment_detail`(`Code`,`HeaderCode`,`BranchCode`,`PaymentRequestCode`,`DocumentNo`,`DocumentType`,`DocumentBranchCode`,`CurrencyCode`,`ExchangeRate`,`TransactionStatus`,`Credit`,`CreditIDR`,`Debit`,`DebitIDR`,`ChartOfAccountCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/123CDP20020001-001','B001/123CDP20020001','B001','B001/PYM-RQ/PRQ200200004',' ',' ',' ','IDR',1.0000,'Other',0.0000,0.0000,10.0000,10.0000,'01-01-001-0005-MMS','','ADMIN','2020-02-24 17:33:11','ADMIN','2020-02-24 17:33:11');

/*Table structure for table `fin_bank_payment_payment_request` */

DROP TABLE IF EXISTS `fin_bank_payment_payment_request`;

CREATE TABLE `fin_bank_payment_payment_request` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BankPaymentCode` varchar(250) DEFAULT NULL,
  `PaymentRequestCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_bank_payment_payment_request` */

insert  into `fin_bank_payment_payment_request`(`Code`,`BankPaymentCode`,`PaymentRequestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/12320020001/B001/PYM-RQ/PRQ200200001','B001/12320020001','B001/PYM-RQ/PRQ200200001','ADMIN','2020-02-24 14:07:52','','1900-01-01 00:00:00');
insert  into `fin_bank_payment_payment_request`(`Code`,`BankPaymentCode`,`PaymentRequestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/12320020001/B001/PYM-RQ/PRQ200200003','B001/12320020001','B001/PYM-RQ/PRQ200200003','ADMIN','2020-02-24 17:32:15','','1900-01-01 00:00:00');
insert  into `fin_bank_payment_payment_request`(`Code`,`BankPaymentCode`,`PaymentRequestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/12320020002/B001/PYM-RQ/PRQ200200002','B001/12320020002','B001/PYM-RQ/PRQ200200002','ADMIN','2020-02-24 14:47:36','','1900-01-01 00:00:00');
insert  into `fin_bank_payment_payment_request`(`Code`,`BankPaymentCode`,`PaymentRequestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/12320030001/B001/PYM-RQ/PRQ200300002','B001/12320030001','B001/PYM-RQ/PRQ200300002','ADMIN','2020-03-02 23:49:43','','1900-01-01 00:00:00');
insert  into `fin_bank_payment_payment_request`(`Code`,`BankPaymentCode`,`PaymentRequestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/123CDP20020001/B001/PYM-RQ/PRQ200200004','B001/123CDP20020001','B001/PYM-RQ/PRQ200200004','ADMIN','2020-02-24 17:33:11','','1900-01-01 00:00:00');

/*Table structure for table `fin_bank_received` */

DROP TABLE IF EXISTS `fin_bank_received`;

CREATE TABLE `fin_bank_received` (
  `code` varchar(250) NOT NULL DEFAULT '',
  `Transactiondate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `Currencycode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `BankAccountCode` varchar(250) DEFAULT NULL,
  `TransactionType` enum('Regular','Deposit') DEFAULT NULL,
  `ReceivedFrom` varchar(250) DEFAULT NULL,
  `ReceivedType` enum('Transfer','Giro','Other') DEFAULT NULL,
  `GiroReceivedCode` varchar(250) DEFAULT NULL,
  `TransferReceivedNo` varchar(250) DEFAULT NULL,
  `TransferReceivedDate` datetime DEFAULT NULL,
  `TransferBankName` varchar(250) DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_bank_received` */

/*Table structure for table `fin_bank_received_deposit` */

DROP TABLE IF EXISTS `fin_bank_received_deposit`;

CREATE TABLE `fin_bank_received_deposit` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BankReceivedCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_bank_received_deposit` */

/*Table structure for table `fin_bank_received_detail` */

DROP TABLE IF EXISTS `fin_bank_received_detail`;

CREATE TABLE `fin_bank_received_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `DocumentBranchCode` varchar(250) DEFAULT NULL,
  `DocumentType` varchar(250) DEFAULT NULL,
  `DocumentNo` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `TransactionStatus` enum('Transaction','Other') DEFAULT NULL,
  `Debit` decimal(18,4) DEFAULT NULL,
  `DebitIDR` decimal(18,4) DEFAULT NULL,
  `Credit` decimal(18,4) DEFAULT NULL,
  `CreditIDR` decimal(18,4) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_bank_received_detail` */

/*Table structure for table `fin_bank_received_downpayment` */

DROP TABLE IF EXISTS `fin_bank_received_downpayment`;

CREATE TABLE `fin_bank_received_downpayment` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BankReceivedCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_bank_received_downpayment` */

/*Table structure for table `fin_bank_received_forex_gain_loss` */

DROP TABLE IF EXISTS `fin_bank_received_forex_gain_loss`;

CREATE TABLE `fin_bank_received_forex_gain_loss` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_bank_received_forex_gain_loss` */

/*Table structure for table `fin_cash_payment` */

DROP TABLE IF EXISTS `fin_cash_payment`;

CREATE TABLE `fin_cash_payment` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CashAccountCode` varchar(250) DEFAULT NULL,
  `TransactionType` enum('Regular','Deposit') DEFAULT NULL,
  `PaymentTo` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_payment` */

insert  into `fin_cash_payment`(`Code`,`TransactionDate`,`BranchCode`,`CashAccountCode`,`TransactionType`,`PaymentTo`,`CurrencyCode`,`ExchangeRate`,`TotalTransactionAmount`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/20030001','2020-03-02 23:40:00','B001','CASH001','Regular','123','IDR',1.0000,1000.0000,'123','123','ADMIN','2020-03-02 23:40:18','','1900-01-01 00:00:00');

/*Table structure for table `fin_cash_payment_deposit` */

DROP TABLE IF EXISTS `fin_cash_payment_deposit`;

CREATE TABLE `fin_cash_payment_deposit` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `PaymentRequestCode` varchar(250) DEFAULT NULL,
  `CashPaymentCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_payment_deposit` */

/*Table structure for table `fin_cash_payment_detail` */

DROP TABLE IF EXISTS `fin_cash_payment_detail`;

CREATE TABLE `fin_cash_payment_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `PaymentRequestCode` varchar(250) DEFAULT NULL,
  `DocumentNo` varchar(250) DEFAULT NULL,
  `DocumentBranchCode` varchar(250) DEFAULT NULL,
  `DocumentDate` datetime DEFAULT NULL,
  `DocumentType` varchar(250) DEFAULT NULL,
  `TransactionStatus` enum('Transaction','Other') DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `Credit` decimal(18,4) DEFAULT NULL,
  `CreditIDR` decimal(18,4) DEFAULT NULL,
  `Debit` decimal(18,4) DEFAULT NULL,
  `DebitIDR` decimal(18,4) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_payment_detail` */

insert  into `fin_cash_payment_detail`(`Code`,`HeaderCode`,`PaymentRequestCode`,`DocumentNo`,`DocumentBranchCode`,`DocumentDate`,`DocumentType`,`TransactionStatus`,`CurrencyCode`,`ExchangeRate`,`Credit`,`CreditIDR`,`Debit`,`DebitIDR`,`ChartOfAccountCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/20030001-001','B001/20030001','B001/PYM-RQ/PRQ200300001','B001/CDN/20030001','B001','1900-01-01 00:00:00','CDN','Transaction','IDR',1.0000,0.0000,0.0000,1000.0000,1000.0000,'01-01-001-0001-TRK','','ADMIN','2020-03-02 23:40:18','ADMIN','2020-03-02 23:40:18');

/*Table structure for table `fin_cash_payment_downpayment` */

DROP TABLE IF EXISTS `fin_cash_payment_downpayment`;

CREATE TABLE `fin_cash_payment_downpayment` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `PaymentRequestCode` varchar(250) DEFAULT NULL,
  `CashPaymentCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_payment_downpayment` */

/*Table structure for table `fin_cash_payment_forex_gain_loss` */

DROP TABLE IF EXISTS `fin_cash_payment_forex_gain_loss`;

CREATE TABLE `fin_cash_payment_forex_gain_loss` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_payment_forex_gain_loss` */

/*Table structure for table `fin_cash_payment_jn_payment_request` */

DROP TABLE IF EXISTS `fin_cash_payment_jn_payment_request`;

CREATE TABLE `fin_cash_payment_jn_payment_request` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `PaymentRequestCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_payment_jn_payment_request` */

/*Table structure for table `fin_cash_payment_payment_request` */

DROP TABLE IF EXISTS `fin_cash_payment_payment_request`;

CREATE TABLE `fin_cash_payment_payment_request` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CashPaymentCode` varchar(250) DEFAULT NULL,
  `PaymentRequestCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_payment_payment_request` */

insert  into `fin_cash_payment_payment_request`(`Code`,`CashPaymentCode`,`PaymentRequestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/20030001/B001/PYM-RQ/PRQ200300001','B001/20030001','B001/PYM-RQ/PRQ200300001','ADMIN','2020-03-02 23:40:18','','1900-01-01 00:00:00');

/*Table structure for table `fin_cash_received` */

DROP TABLE IF EXISTS `fin_cash_received`;

CREATE TABLE `fin_cash_received` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `CashAccountCode` varchar(250) DEFAULT NULL,
  `TransactionType` enum('Regular','Deposit') DEFAULT NULL,
  `ReceivedFrom` varchar(250) DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `Updatedby` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_received` */

/*Table structure for table `fin_cash_received_deposit` */

DROP TABLE IF EXISTS `fin_cash_received_deposit`;

CREATE TABLE `fin_cash_received_deposit` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CashReceivedCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_received_deposit` */

/*Table structure for table `fin_cash_received_detail` */

DROP TABLE IF EXISTS `fin_cash_received_detail`;

CREATE TABLE `fin_cash_received_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `DocumentBranchCode` varchar(250) DEFAULT NULL,
  `DocumentType` varchar(250) DEFAULT NULL,
  `DocumentNo` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `TransactionStatus` enum('Transaction','Other') DEFAULT NULL,
  `Debit` decimal(18,4) DEFAULT NULL,
  `DebitIDR` decimal(18,4) DEFAULT NULL,
  `Credit` decimal(18,4) DEFAULT NULL,
  `CreditIDR` decimal(18,4) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_received_detail` */

/*Table structure for table `fin_cash_received_forex_gain_loss` */

DROP TABLE IF EXISTS `fin_cash_received_forex_gain_loss`;

CREATE TABLE `fin_cash_received_forex_gain_loss` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT '',
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_cash_received_forex_gain_loss` */

/*Table structure for table `fin_customer_credit_note` */

DROP TABLE IF EXISTS `fin_customer_credit_note`;

CREATE TABLE `fin_customer_credit_note` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `DueDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `TaxInvoiceNo` varchar(250) DEFAULT NULL,
  `TaxInvoiceDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` double(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `DiscountAccountCode` varchar(250) DEFAULT NULL,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `VATAmount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_credit_note` */

/*Table structure for table `fin_customer_credit_note_detail` */

DROP TABLE IF EXISTS `fin_customer_credit_note_detail`;

CREATE TABLE `fin_customer_credit_note_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `UnitOfMeasureCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_credit_note_detail` */

/*Table structure for table `fin_customer_debit_note` */

DROP TABLE IF EXISTS `fin_customer_debit_note`;

CREATE TABLE `fin_customer_debit_note` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `DueDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `InvoiceNo` varchar(250) DEFAULT NULL,
  `InvoiceDate` datetime DEFAULT NULL,
  `TaxInvoiceID` varchar(250) DEFAULT NULL,
  `TaxInvoiceAcronym` varchar(250) DEFAULT NULL,
  `TaxInvoiceNo` varchar(250) DEFAULT NULL,
  `TaxInvoiceDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` double(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `DiscountAccountCode` varchar(250) DEFAULT NULL,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `VATAmount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `createddate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_debit_note` */

insert  into `fin_customer_debit_note`(`Code`,`TransactionDate`,`DueDate`,`BranchCode`,`CurrencyCode`,`ExchangeRate`,`CustomerCode`,`PaymentTermCode`,`InvoiceNo`,`InvoiceDate`,`TaxInvoiceID`,`TaxInvoiceAcronym`,`TaxInvoiceNo`,`TaxInvoiceDate`,`RefNo`,`Remark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`DiscountAccountCode`,`VATPercent`,`VATAmount`,`GrandTotalAmount`,`PaidAmount`,`SettlementDate`,`SettlementDocumentNo`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CDN/20030001','2020-03-02 14:34:36','2020-03-12 00:00:00','B001','IDR',1.0000,'CUS001','10D',NULL,NULL,NULL,NULL,'','1900-01-01 00:00:00','-','-',100000.0000,0.0000,0.0000,'01-01-001-0001-TRK',0.0000,0.0000,100000.0000,0.0000,'1900-01-01 00:00:00','','ADMIN','2020-03-02 14:38:00','','1900-01-01 00:00:00');

/*Table structure for table `fin_customer_debit_note_detail` */

DROP TABLE IF EXISTS `fin_customer_debit_note_detail`;

CREATE TABLE `fin_customer_debit_note_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `UnitOfMeasureCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_debit_note_detail` */

insert  into `fin_customer_debit_note_detail`(`Code`,`HeaderCode`,`BranchCode`,`ChartOfAccountCode`,`Remark`,`Quantity`,`Price`,`TotalAmount`,`UnitOfMeasureCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CDN/20030001-001','B001/CDN/20030001','B001','01-01-002-0001-TRK','213',100.0000,1000.0000,100000.0000,'BTG','ADMIN','2020-03-02 14:38:00','ADMIN','2020-03-02 14:38:00');

/*Table structure for table `fin_customer_down_payment` */

DROP TABLE IF EXISTS `fin_customer_down_payment`;

CREATE TABLE `fin_customer_down_payment` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `CDPNote` varchar(250) DEFAULT NULL,
  `TINNo` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `VATAmount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `BankAccountCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_down_payment` */

/*Table structure for table `fin_customer_down_payment_paid` */

DROP TABLE IF EXISTS `fin_customer_down_payment_paid`;

CREATE TABLE `fin_customer_down_payment_paid` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_down_payment_paid` */

/*Table structure for table `fin_customer_down_payment_used` */

DROP TABLE IF EXISTS `fin_customer_down_payment_used`;

CREATE TABLE `fin_customer_down_payment_used` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `UsedAmount` decimal(18,4) DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_down_payment_used` */

/*Table structure for table `fin_customer_invoice` */

DROP TABLE IF EXISTS `fin_customer_invoice`;

CREATE TABLE `fin_customer_invoice` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Branchcode` varchar(250) DEFAULT NULL,
  `Transactiondate` datetime DEFAULT NULL,
  `SalesPersonCode` varchar(250) DEFAULT NULL,
  `SalesOrderCode` varchar(250) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `Currencycode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `ItemDivisionCode` varchar(250) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `BillToCode` varchar(250) DEFAULT NULL,
  `ShipToCode` varchar(250) DEFAULT NULL,
  `ContraBonDate` datetime DEFAULT NULL,
  `DueDate` datetime DEFAULT NULL,
  `ProjectCode` varchar(250) DEFAULT NULL,
  `Refno` varchar(100) DEFAULT NULL,
  `Remark` text,
  `TaxInvoiceID` varchar(250) DEFAULT NULL,
  `TaxInvoiceAcronym` varchar(250) DEFAULT NULL,
  `TaxInvoiceNo` varchar(250) DEFAULT NULL,
  `TaxInvoiceDate` datetime DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `SalesChartOfAccountCode` varchar(250) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `DownPaymentAmount` decimal(18,4) DEFAULT NULL,
  `SalesReturnAmount` decimal(18,4) DEFAULT NULL,
  `TaxBaseAmount` decimal(18,4) DEFAULT NULL,
  `Vatpercent` decimal(18,4) DEFAULT NULL,
  `Vatamount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `ConfirmationStatus` enum('PENDING','CONFIRMED') DEFAULT NULL,
  `ConfirmationDate` datetime DEFAULT NULL,
  `ConfirmationBy` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_invoice` */

/*Table structure for table `fin_customer_invoice_forex_gain_loss` */

DROP TABLE IF EXISTS `fin_customer_invoice_forex_gain_loss`;

CREATE TABLE `fin_customer_invoice_forex_gain_loss` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_invoice_forex_gain_loss` */

/*Table structure for table `fin_customer_invoice_item_detail` */

DROP TABLE IF EXISTS `fin_customer_invoice_item_detail`;

CREATE TABLE `fin_customer_invoice_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `DeliveryNoteCode` varchar(250) DEFAULT NULL,
  `itemproductheadcode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `ItemAlias` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_invoice_item_detail` */

/*Table structure for table `fin_customer_invoice_jn_customer_down_payment` */

DROP TABLE IF EXISTS `fin_customer_invoice_jn_customer_down_payment`;

CREATE TABLE `fin_customer_invoice_jn_customer_down_payment` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Headercode` varchar(250) DEFAULT NULL,
  `CustomerDownPaymentCode` varchar(250) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_invoice_jn_customer_down_payment` */

/*Table structure for table `fin_customer_invoice_jn_delivery_note` */

DROP TABLE IF EXISTS `fin_customer_invoice_jn_delivery_note`;

CREATE TABLE `fin_customer_invoice_jn_delivery_note` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Headercode` varchar(250) DEFAULT NULL,
  `DeliveryNoteCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_invoice_jn_delivery_note` */

/*Table structure for table `fin_customer_invoice_jn_srt_by_delivery_note` */

DROP TABLE IF EXISTS `fin_customer_invoice_jn_srt_by_delivery_note`;

CREATE TABLE `fin_customer_invoice_jn_srt_by_delivery_note` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Headercode` varchar(250) DEFAULT NULL,
  `SalesReturnByDeliveryNoteDetailCode` varchar(250) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_customer_invoice_jn_srt_by_delivery_note` */

/*Table structure for table `fin_general_journal` */

DROP TABLE IF EXISTS `fin_general_journal`;

CREATE TABLE `fin_general_journal` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Transactiondate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `Currencycode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `ParentTransactionType` varchar(3) DEFAULT NULL,
  `ParentVoucherNo` varchar(250) DEFAULT NULL,
  `Createdby` varchar(250) DEFAULT NULL,
  `Createddate` datetime DEFAULT NULL,
  `Updatedby` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_general_journal` */

/*Table structure for table `fin_general_journal_detail` */

DROP TABLE IF EXISTS `fin_general_journal_detail`;

CREATE TABLE `fin_general_journal_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `DocumentBranchCode` varchar(250) DEFAULT NULL,
  `DocumentType` varchar(250) DEFAULT NULL,
  `DocumentNo` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `TransactionStatus` enum('Transaction','Other') DEFAULT NULL,
  `Debit` decimal(18,4) DEFAULT NULL,
  `DebitIDR` decimal(18,4) DEFAULT NULL,
  `Credit` decimal(18,4) DEFAULT NULL,
  `CreditIDR` decimal(18,4) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_general_journal_detail` */

/*Table structure for table `fin_general_journal_forex_gain_loss` */

DROP TABLE IF EXISTS `fin_general_journal_forex_gain_loss`;

CREATE TABLE `fin_general_journal_forex_gain_loss` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_general_journal_forex_gain_loss` */

/*Table structure for table `fin_giro_payment` */

DROP TABLE IF EXISTS `fin_giro_payment`;

CREATE TABLE `fin_giro_payment` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `DueDate` datetime DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `BankCode` varchar(250) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `GiroNo` varchar(250) DEFAULT NULL,
  `PaymentTo` varchar(250) DEFAULT NULL,
  `GiroStatus` enum('Pending','Cleared','Rejected') DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `RejectedReasonCode` varchar(250) DEFAULT NULL,
  `rejectedRemark` varchar(250) DEFAULT NULL,
  `RejectedDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `RejectedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_giro_payment` */

insert  into `fin_giro_payment`(`Code`,`TransactionDate`,`BranchCode`,`DueDate`,`CurrencyCode`,`BankCode`,`Amount`,`GiroNo`,`PaymentTo`,`GiroStatus`,`RefNo`,`Remark`,`RejectedReasonCode`,`rejectedRemark`,`RejectedDate`,`CreatedBy`,`RejectedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRP20020001','2020-02-24 11:51:04','B001','2020-02-24 11:51:04','IDR','BCA',10000000.0000,'001','-','Rejected','-','-','MENARILAH','','2020-02-24 13:20:16','ADMIN','ADMIN','2020-02-24 11:51:20','','1900-01-01 00:00:00');
insert  into `fin_giro_payment`(`Code`,`TransactionDate`,`BranchCode`,`DueDate`,`CurrencyCode`,`BankCode`,`Amount`,`GiroNo`,`PaymentTo`,`GiroStatus`,`RefNo`,`Remark`,`RejectedReasonCode`,`rejectedRemark`,`RejectedDate`,`CreatedBy`,`RejectedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRP20020002','2020-02-24 13:20:33','B001','2020-02-24 13:20:33','IDR','MDR',200000000.0000,'-','vendor','Rejected','-','-','MENARILAH','-','2020-02-24 13:21:24','ADMIN','ADMIN','2020-02-24 13:20:53','','1900-01-01 00:00:00');
insert  into `fin_giro_payment`(`Code`,`TransactionDate`,`BranchCode`,`DueDate`,`CurrencyCode`,`BankCode`,`Amount`,`GiroNo`,`PaymentTo`,`GiroStatus`,`RefNo`,`Remark`,`RejectedReasonCode`,`rejectedRemark`,`RejectedDate`,`CreatedBy`,`RejectedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRP20030001','2020-03-02 22:13:45','B001','2020-03-02 22:13:45','IDR','BCA',1000.0000,'123','-','Pending','-','-',NULL,'','2020-03-02 22:13:55','ADMIN','','2020-03-02 22:13:55','','1900-01-01 00:00:00');

/*Table structure for table `fin_giro_received` */

DROP TABLE IF EXISTS `fin_giro_received`;

CREATE TABLE `fin_giro_received` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ReceivedFrom` varchar(250) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `GiroNo` varchar(250) DEFAULT NULL,
  `GiroStatus` enum('Pending','Cleared','Rejected') DEFAULT NULL,
  `RejectedReasonCode` varchar(250) DEFAULT NULL,
  `RejectedRemark` varchar(250) DEFAULT NULL,
  `RejectedDate` datetime DEFAULT NULL,
  `RejectedBy` varchar(250) DEFAULT NULL,
  `BankCode` varchar(250) DEFAULT NULL,
  `DueDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_giro_received` */

/*Table structure for table `fin_kwitansi` */

DROP TABLE IF EXISTS `fin_kwitansi`;

CREATE TABLE `fin_kwitansi` (
  `code` varchar(250) NOT NULL DEFAULT '',
  `Transactiondate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `DueDate` datetime DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `SalesmanCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `CustomerPONo` varchar(250) DEFAULT NULL,
  `SONo` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_kwitansi` */

/*Table structure for table `fin_kwitansi_jn_customer_invoice` */

DROP TABLE IF EXISTS `fin_kwitansi_jn_customer_invoice`;

CREATE TABLE `fin_kwitansi_jn_customer_invoice` (
  `code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `InvoiceCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_kwitansi_jn_customer_invoice` */

/*Table structure for table `fin_payment_request` */

DROP TABLE IF EXISTS `fin_payment_request`;

CREATE TABLE `fin_payment_request` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `PaymentTo` varchar(250) DEFAULT NULL,
  `ScheduleDate` datetime DEFAULT NULL,
  `TransactionType` enum('REGULAR','DEPOSIT') DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `ApprovalStatus` enum('PENDING','APPROVED','REJECTED') DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_payment_request` */

insert  into `fin_payment_request`(`Code`,`TransactionDate`,`BranchCode`,`PaymentTo`,`ScheduleDate`,`TransactionType`,`CurrencyCode`,`TotalTransactionAmount`,`ApprovalStatus`,`ApprovalDate`,`CreatedBy`,`RefNo`,`Remark`,`ApprovalBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PYM-RQ/PRQ200300001','2020-03-02 23:03:18','B001','123','1990-01-01 00:00:00','REGULAR','IDR',1000.0000,'APPROVED','2020-03-02 23:03:18','ADMIN','-','-','ADMIN','2020-03-02 22:49:05','','1900-01-01 00:00:00');
insert  into `fin_payment_request`(`Code`,`TransactionDate`,`BranchCode`,`PaymentTo`,`ScheduleDate`,`TransactionType`,`CurrencyCode`,`TotalTransactionAmount`,`ApprovalStatus`,`ApprovalDate`,`CreatedBy`,`RefNo`,`Remark`,`ApprovalBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PYM-RQ/PRQ200300002','2020-03-02 23:46:14','B001','123','1990-01-01 00:00:00','REGULAR','IDR',2000.0000,'APPROVED','2020-03-02 23:46:14','ADMIN','-','-','ADMIN','2020-03-02 23:45:59','','1900-01-01 00:00:00');

/*Table structure for table `fin_payment_request_detail` */

DROP TABLE IF EXISTS `fin_payment_request_detail`;

CREATE TABLE `fin_payment_request_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `DocumentNo` varchar(250) DEFAULT NULL,
  `DocumentBranchCode` varchar(250) DEFAULT NULL,
  `DocumentDate` datetime DEFAULT NULL,
  `DocumentType` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `TransactionStatus` enum('Transaction','Other') DEFAULT NULL,
  `DepartmentCode` varchar(250) DEFAULT NULL,
  `Credit` decimal(18,4) DEFAULT NULL,
  `Debit` decimal(18,4) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_payment_request_detail` */

insert  into `fin_payment_request_detail`(`Code`,`HeaderCode`,`DocumentNo`,`DocumentBranchCode`,`DocumentDate`,`DocumentType`,`CurrencyCode`,`ExchangeRate`,`ChartOfAccountCode`,`TransactionStatus`,`DepartmentCode`,`Credit`,`Debit`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PYM-RQ/PRQ200300001-001','B001/PYM-RQ/PRQ200300001','B001/CDN/20030001','B001','1900-01-01 00:00:00','CDN','IDR',1.0000,'01-01-001-0001-TRK','Transaction','',0.0000,1000.0000,'','ADMIN','2020-03-02 22:49:05','ADMIN','2020-03-02 22:49:05');
insert  into `fin_payment_request_detail`(`Code`,`HeaderCode`,`DocumentNo`,`DocumentBranchCode`,`DocumentDate`,`DocumentType`,`CurrencyCode`,`ExchangeRate`,`ChartOfAccountCode`,`TransactionStatus`,`DepartmentCode`,`Credit`,`Debit`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PYM-RQ/PRQ200300002-001','B001/PYM-RQ/PRQ200300002','B001/CDN/20030001','B001','1900-01-01 00:00:00','CDN','IDR',1.0000,'01-01-001-0001-TRK','Transaction',NULL,0.0000,2000.0000,'','ADMIN','2020-03-02 23:45:59','ADMIN','2020-03-02 23:45:59');

/*Table structure for table `fin_vendor_credit_note` */

DROP TABLE IF EXISTS `fin_vendor_credit_note`;

CREATE TABLE `fin_vendor_credit_note` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `DueDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `InvoiceNo` varchar(250) DEFAULT NULL,
  `InvoiceDate` datetime DEFAULT NULL,
  `TaxInvoiceNo` varchar(250) DEFAULT NULL,
  `TaxInvoiceDate` datetime DEFAULT NULL,
  `VendorInvoiceNo` varchar(250) DEFAULT NULL,
  `VendorInvoiceDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` double(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `DiscountAccountCode` varchar(250) DEFAULT NULL,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `VATAmount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `createddate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_credit_note` */

/*Table structure for table `fin_vendor_credit_note_detail` */

DROP TABLE IF EXISTS `fin_vendor_credit_note_detail`;

CREATE TABLE `fin_vendor_credit_note_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `UnitOfMeasureCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_credit_note_detail` */

/*Table structure for table `fin_vendor_debit_note` */

DROP TABLE IF EXISTS `fin_vendor_debit_note`;

CREATE TABLE `fin_vendor_debit_note` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `DueDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `TaxInvoiceNo` varchar(250) DEFAULT NULL,
  `TaxInvoiceDate` datetime DEFAULT NULL,
  `VendorInvoiceNo` varchar(250) DEFAULT NULL,
  `VendorInvoiceDate` datetime DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` double(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `DiscountAccountCode` varchar(250) DEFAULT NULL,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `VATAmount` decimal(18,4) DEFAULT NULL,
  `Grandtotalamount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `createddate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_debit_note` */

insert  into `fin_vendor_debit_note`(`Code`,`TransactionDate`,`DueDate`,`BranchCode`,`CurrencyCode`,`ExchangeRate`,`VendorCode`,`PaymentTermCode`,`TaxInvoiceNo`,`TaxInvoiceDate`,`VendorInvoiceNo`,`VendorInvoiceDate`,`RefNo`,`Remark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`DiscountAccountCode`,`VATPercent`,`VATAmount`,`Grandtotalamount`,`PaidAmount`,`SettlementDate`,`SettlementDocumentNo`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('B001/VDN/20020001','2020-02-24 13:34:17','2020-02-24 00:00:00','B001','IDR',1.0000,'VEND','-','123','2020-02-24 00:00:00','321','2020-02-24 00:00:00','123','123',2000000.0000,2.0000,40000.0000,'01-01-001-0002-MMS',10.0000,196000.0000,2156000.0000,0.0000,'1900-01-01 00:00:00','','ADMIN','2020-02-24 13:35:16','','1900-01-01 00:00:00');

/*Table structure for table `fin_vendor_debit_note_detail` */

DROP TABLE IF EXISTS `fin_vendor_debit_note_detail`;

CREATE TABLE `fin_vendor_debit_note_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `UnitOfMeasureCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_debit_note_detail` */

insert  into `fin_vendor_debit_note_detail`(`Code`,`HeaderCode`,`BranchCode`,`Remark`,`ChartOfAccountCode`,`Quantity`,`Price`,`TotalAmount`,`UnitOfMeasureCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/VDN/20020001-001','B001/VDN/20020001','B001','-','01-01-001-0002-MMS',1000.0000,2000.0000,2000000.0000,'BTG','ADMIN','2020-02-24 13:35:16','','1900-01-01 00:00:00');

/*Table structure for table `fin_vendor_down_payment` */

DROP TABLE IF EXISTS `fin_vendor_down_payment`;

CREATE TABLE `fin_vendor_down_payment` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `TINNo` varchar(250) DEFAULT NULL,
  `RefNo` varchar(100) DEFAULT NULL,
  `Remark` text,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `VATAmount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_down_payment` */

insert  into `fin_vendor_down_payment`(`Code`,`BranchCode`,`TransactionDate`,`CurrencyCode`,`ExchangeRate`,`VendorCode`,`TINNo`,`RefNo`,`Remark`,`PaymentTermCode`,`TotalTransactionAmount`,`VATPercent`,`VATAmount`,`GrandTotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/VDP/200200001','B001','2020-02-24 13:32:45','IDR',1.0000,'VEND','-','-','-','-',1000000.0000,10.0000,100000.0000,1100000.0000,'ADMIN','2020-02-24 13:34:09','','1900-01-01 00:00:00');

/*Table structure for table `fin_vendor_down_payment_paid` */

DROP TABLE IF EXISTS `fin_vendor_down_payment_paid`;

CREATE TABLE `fin_vendor_down_payment_paid` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_down_payment_paid` */

insert  into `fin_vendor_down_payment_paid`(`Code`,`GrandTotalAmount`,`PaidAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`SettlementDate`,`SettlementDocumentNo`) values ('B001/VDP/200200001',1100000.0000,0.0000,'ADMIN','2020-02-24 00:00:00','ADMIN','2020-02-24 00:00:00',NULL,NULL);

/*Table structure for table `fin_vendor_down_payment_used` */

DROP TABLE IF EXISTS `fin_vendor_down_payment_used`;

CREATE TABLE `fin_vendor_down_payment_used` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `UsedAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_down_payment_used` */

insert  into `fin_vendor_down_payment_used`(`Code`,`TotalTransactionAmount`,`UsedAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/VDP/200200001',1000000.0000,0.0000,'ADMIN','2020-02-24 00:00:00','ADMIN','2020-02-24 00:00:00');

/*Table structure for table `fin_vendor_invoice` */

DROP TABLE IF EXISTS `fin_vendor_invoice`;

CREATE TABLE `fin_vendor_invoice` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Branchcode` varchar(250) DEFAULT NULL,
  `Transactiondate` datetime DEFAULT NULL,
  `PurchaseOrderCode` varchar(250) DEFAULT NULL,
  `Currencycode` varchar(250) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `ContraBonDate` datetime DEFAULT NULL,
  `DueDate` datetime DEFAULT NULL,
  `Refno` varchar(100) DEFAULT NULL,
  `Remark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `DownPaymentAmount` decimal(18,4) DEFAULT NULL,
  `Vatpercent` decimal(18,4) DEFAULT NULL,
  `Vatamount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `TaxBaseSubTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `VendorInvoiceDate` datetime DEFAULT NULL,
  `VendorInvoiceNo` varchar(250) DEFAULT NULL,
  `VendorTaxInvoiceDate` datetime DEFAULT NULL,
  `VendorTaxInvoiceNo` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`),
  KEY `Branchcode` (`Branchcode`),
  KEY `Currencycode` (`Currencycode`),
  KEY `PaymentTermCode` (`PaymentTermCode`),
  KEY `VendorCode` (`VendorCode`),
  CONSTRAINT `fin_vendor_invoice_ibfk_1` FOREIGN KEY (`Branchcode`) REFERENCES `mst_branch` (`Code`),
  CONSTRAINT `fin_vendor_invoice_ibfk_2` FOREIGN KEY (`Currencycode`) REFERENCES `mst_currency` (`Code`),
  CONSTRAINT `fin_vendor_invoice_ibfk_3` FOREIGN KEY (`VendorCode`) REFERENCES `mst_vendor` (`Code`),
  CONSTRAINT `fin_vendor_invoice_ibfk_4` FOREIGN KEY (`PaymentTermCode`) REFERENCES `mst_payment_term` (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_invoice` */

/*Table structure for table `fin_vendor_invoice_forex_gain_loss` */

DROP TABLE IF EXISTS `fin_vendor_invoice_forex_gain_loss`;

CREATE TABLE `fin_vendor_invoice_forex_gain_loss` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`),
  KEY `CurrencyCode` (`CurrencyCode`),
  CONSTRAINT `fin_vendor_invoice_forex_gain_loss_ibfk_1` FOREIGN KEY (`CurrencyCode`) REFERENCES `mst_currency` (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_invoice_forex_gain_loss` */

/*Table structure for table `fin_vendor_invoice_item_detail` */

DROP TABLE IF EXISTS `fin_vendor_invoice_item_detail`;

CREATE TABLE `fin_vendor_invoice_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Headercode` varchar(250) DEFAULT NULL,
  `GoodsReceivedNoteDetailCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`),
  KEY `ItemCode` (`ItemCode`),
  CONSTRAINT `fin_vendor_invoice_item_detail_ibfk_1` FOREIGN KEY (`ItemCode`) REFERENCES `mst_item` (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_invoice_item_detail` */

/*Table structure for table `fin_vendor_invoice_jn_goods_received_note` */

DROP TABLE IF EXISTS `fin_vendor_invoice_jn_goods_received_note`;

CREATE TABLE `fin_vendor_invoice_jn_goods_received_note` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Headercode` varchar(250) DEFAULT NULL,
  `GoodsReceivedNoteCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_invoice_jn_goods_received_note` */

/*Table structure for table `fin_vendor_invoice_jn_vendor_down_payment` */

DROP TABLE IF EXISTS `fin_vendor_invoice_jn_vendor_down_payment`;

CREATE TABLE `fin_vendor_invoice_jn_vendor_down_payment` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Headercode` varchar(250) DEFAULT NULL,
  `VendorDownPaymentCode` varchar(250) DEFAULT NULL,
  `Amount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `fin_vendor_invoice_jn_vendor_down_payment` */

/*Table structure for table `ivt_adjustment_in` */

DROP TABLE IF EXISTS `ivt_adjustment_in`;

CREATE TABLE `ivt_adjustment_in` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `Transactiondate` datetime DEFAULT NULL,
  `Currencycode` varchar(250) DEFAULT NULL,
  `Exchangerate` decimal(18,4) DEFAULT NULL,
  `Warehousecode` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `ApprovalStatus` enum('PENDING','APPROVED','REJECTED') DEFAULT NULL,
  `ApprovalReasonCode` varchar(250) DEFAULT NULL,
  `ApprovalRemark` varchar(250) DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_adjustment_in` */

insert  into `ivt_adjustment_in`(`Code`,`BranchCode`,`Transactiondate`,`Currencycode`,`Exchangerate`,`Warehousecode`,`GrandTotalAmount`,`ApprovalStatus`,`ApprovalReasonCode`,`ApprovalRemark`,`ApprovalDate`,`ApprovalBy`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/ADJ-IN/20020001','B001','2020-02-03 13:37:24','IDR',1.0000,'WR002',400000.0000,'APPROVED','MENARILAH','-','2020-02-03 15:07:41',NULL,'-','-','ADMIN','2020-02-03 13:37:24','','1900-01-01 00:00:00');
insert  into `ivt_adjustment_in`(`Code`,`BranchCode`,`Transactiondate`,`Currencycode`,`Exchangerate`,`Warehousecode`,`GrandTotalAmount`,`ApprovalStatus`,`ApprovalReasonCode`,`ApprovalRemark`,`ApprovalDate`,`ApprovalBy`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B002/ADJ-IN/20020001','B002','2020-02-03 16:48:14','USD',15000.0000,'WR001',2000000.0000,'APPROVED','MENARILAH','-','2020-02-03 16:48:56','ADMIN','-','-','ADMIN','2020-02-03 16:48:14','','1900-01-01 00:00:00');
insert  into `ivt_adjustment_in`(`Code`,`BranchCode`,`Transactiondate`,`Currencycode`,`Exchangerate`,`Warehousecode`,`GrandTotalAmount`,`ApprovalStatus`,`ApprovalReasonCode`,`ApprovalRemark`,`ApprovalDate`,`ApprovalBy`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B003/ADJ-IN/20020001','B003','2020-02-03 16:57:03','USD',13758.5000,'WR001',6000000.0000,'APPROVED','MENARILAH','-','2020-02-03 16:58:11','ADMIN','-','-','ADMIN','2020-02-03 16:57:03','','1900-01-01 00:00:00');

/*Table structure for table `ivt_adjustment_in_item_detail` */

DROP TABLE IF EXISTS `ivt_adjustment_in_item_detail`;

CREATE TABLE `ivt_adjustment_in_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Headercode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Totalamount` decimal(18,4) DEFAULT NULL,
  `ReasonCode` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_adjustment_in_item_detail` */

insert  into `ivt_adjustment_in_item_detail`(`Code`,`Headercode`,`ItemMaterialCode`,`Price`,`Quantity`,`Totalamount`,`ReasonCode`,`RackCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/ADJ-IN/20020001-001','B001/ADJ-IN/20020001','BANG',2000.0000,200.0000,400000.0000,'MENARILAH','WR002_DCI_001','-',NULL,'2020-02-03 15:07:46',NULL,'2020-02-03 15:07:46');
insert  into `ivt_adjustment_in_item_detail`(`Code`,`Headercode`,`ItemMaterialCode`,`Price`,`Quantity`,`Totalamount`,`ReasonCode`,`RackCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B002/ADJ-IN/20020001-001','B002/ADJ-IN/20020001','12-123-0000001',200.0000,10000.0000,2000000.0000,'MENARILAH','WR001_DLN_001','hah','ADMIN','2020-02-03 16:48:56','ADMIN','2020-02-03 16:48:56');
insert  into `ivt_adjustment_in_item_detail`(`Code`,`Headercode`,`ItemMaterialCode`,`Price`,`Quantity`,`Totalamount`,`ReasonCode`,`RackCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B003/ADJ-IN/20020001-001','B003/ADJ-IN/20020001','12-123-0000001',200.0000,30000.0000,6000000.0000,'MENARILAH','HARUS_DCI_001','-','ADMIN','2020-02-03 16:58:11','ADMIN','2020-02-03 16:58:11');

/*Table structure for table `ivt_adjustment_in_serial_no_detail` */

DROP TABLE IF EXISTS `ivt_adjustment_in_serial_no_detail`;

CREATE TABLE `ivt_adjustment_in_serial_no_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `SerialNo` varchar(250) DEFAULT NULL,
  `SerialNoDetailCode` varchar(250) DEFAULT NULL,
  `HeatNo` varchar(250) DEFAULT NULL,
  `BatchNo` varchar(250) DEFAULT NULL,
  `Capacity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `Remark` text,
  `RackCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_adjustment_in_serial_no_detail` */

/*Table structure for table `ivt_adjustment_out` */

DROP TABLE IF EXISTS `ivt_adjustment_out`;

CREATE TABLE `ivt_adjustment_out` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `Transactiondate` datetime DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `ApprovalStatus` enum('PENDING','APPROVED','REJECTED') DEFAULT NULL,
  `ApprovalReasonCode` varchar(250) DEFAULT NULL,
  `ApprovalRemark` varchar(250) DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `Refno` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_adjustment_out` */

insert  into `ivt_adjustment_out`(`Code`,`BranchCode`,`Transactiondate`,`CurrencyCode`,`ExchangeRate`,`WarehouseCode`,`GrandTotalAmount`,`ApprovalStatus`,`ApprovalReasonCode`,`ApprovalRemark`,`ApprovalDate`,`ApprovalBy`,`Refno`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/ADJOUT20020001','B001','2020-02-03 15:37:02','IDR',1.0000,'WR002',0.0000,'APPROVED','MENARILAH','--','2020-02-03 15:59:59','ADMIN','-','-','ADMIN','2020-02-03 15:37:56','','2000-01-01 00:00:00');

/*Table structure for table `ivt_adjustment_out_cogs_detail` */

DROP TABLE IF EXISTS `ivt_adjustment_out_cogs_detail`;

CREATE TABLE `ivt_adjustment_out_cogs_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `StockCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_adjustment_out_cogs_detail` */

/*Table structure for table `ivt_adjustment_out_item_detail` */

DROP TABLE IF EXISTS `ivt_adjustment_out_item_detail`;

CREATE TABLE `ivt_adjustment_out_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Headercode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ReasonCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_adjustment_out_item_detail` */

insert  into `ivt_adjustment_out_item_detail`(`Code`,`Headercode`,`WarehouseCode`,`ItemCode`,`Quantity`,`COGSIDR`,`TotalAmount`,`RackCode`,`ReasonCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/ADJOUT20020001-00001','B001/ADJOUT20020001','WR002','BANG',200.0000,0.0000,0.0000,'WR002_DCI_001','MENARILAH','-','ADMIN','2020-02-03 00:00:00','ADMIN','2020-02-03 00:00:00');

/*Table structure for table `ivt_adjustment_out_serial_no_detail` */

DROP TABLE IF EXISTS `ivt_adjustment_out_serial_no_detail`;

CREATE TABLE `ivt_adjustment_out_serial_no_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `HeatNo` varchar(250) DEFAULT NULL,
  `BatchNo` varchar(250) DEFAULT NULL,
  `SerialNo` varchar(250) DEFAULT NULL,
  `SerialNoDetailCode` varchar(250) DEFAULT NULL,
  `InTransactionCode` varchar(250) DEFAULT NULL,
  `ReasonCode` varchar(250) DEFAULT NULL,
  `Capacity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_adjustment_out_serial_no_detail` */

/*Table structure for table `ivt_assembly_job_order` */

DROP TABLE IF EXISTS `ivt_assembly_job_order`;

CREATE TABLE `ivt_assembly_job_order` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `FinishGoodsCode` varchar(250) DEFAULT NULL,
  `BillOfMaterialCode` varchar(250) DEFAULT NULL,
  `FinishGoodsQuantity` decimal(18,4) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_assembly_job_order` */

insert  into `ivt_assembly_job_order`(`Code`,`BranchCode`,`TransactionDate`,`WarehouseCode`,`FinishGoodsCode`,`BillOfMaterialCode`,`FinishGoodsQuantity`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/ASM-JOB/20020001','B001','2020-02-06 10:31:20','WR001','12-123-0000001','CORONA',10.0000,'-','-','ADMIN','2020-02-06 10:31:20','','1900-01-01 00:00:00');

/*Table structure for table `ivt_assembly_job_order_item_detail` */

DROP TABLE IF EXISTS `ivt_assembly_job_order_item_detail`;

CREATE TABLE `ivt_assembly_job_order_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_assembly_job_order_item_detail` */

insert  into `ivt_assembly_job_order_item_detail`(`Code`,`HeaderCode`,`ItemCode`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/ASM-JOB/20020001-001','B001/ASM-JOB/20020001','12-123-0000001',10000.0000,'ADMIN','2020-02-06 10:31:20','ADMIN','2020-02-06 10:31:20');

/*Table structure for table `ivt_assembly_realization` */

DROP TABLE IF EXISTS `ivt_assembly_realization`;

CREATE TABLE `ivt_assembly_realization` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `AssemblyJobOrderCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `RealizationQuantity` decimal(18,4) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_assembly_realization` */

insert  into `ivt_assembly_realization`(`Code`,`BranchCode`,`TransactionDate`,`AssemblyJobOrderCode`,`WarehouseCode`,`RealizationQuantity`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/ASM-WO/20020001','B001','2020-02-06 15:00:29','B001/ASM-JOB/20020001','WR002',0.0000,'-','-','ADMIN','2020-02-06 15:00:29','','1900-01-01 00:00:00');

/*Table structure for table `ivt_assembly_realization_cogs` */

DROP TABLE IF EXISTS `ivt_assembly_realization_cogs`;

CREATE TABLE `ivt_assembly_realization_cogs` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `InTransactionNo` varchar(250) DEFAULT NULL,
  `InDocumentType` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_assembly_realization_cogs` */

/*Table structure for table `ivt_assembly_realization_item_detail` */

DROP TABLE IF EXISTS `ivt_assembly_realization_item_detail`;

CREATE TABLE `ivt_assembly_realization_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_assembly_realization_item_detail` */

insert  into `ivt_assembly_realization_item_detail`(`Code`,`HeaderCode`,`ItemCode`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/ASM-WO/20020001-001','B001/ASM-WO/20020001','12-123-0000001',0.0000,'ADMIN','2020-02-06 15:00:29','ADMIN','2020-02-06 15:00:29');

/*Table structure for table `ivt_assembly_work_order` */

DROP TABLE IF EXISTS `ivt_assembly_work_order`;

CREATE TABLE `ivt_assembly_work_order` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `AssemblyJobOrderCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `FinishGoodsQuantity` decimal(18,4) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_assembly_work_order` */

/*Table structure for table `ivt_assembly_work_order_cogs` */

DROP TABLE IF EXISTS `ivt_assembly_work_order_cogs`;

CREATE TABLE `ivt_assembly_work_order_cogs` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `InTransactionNo` varchar(250) DEFAULT NULL,
  `InDocumentType` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_assembly_work_order_cogs` */

/*Table structure for table `ivt_assembly_work_order_item_detail` */

DROP TABLE IF EXISTS `ivt_assembly_work_order_item_detail`;

CREATE TABLE `ivt_assembly_work_order_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_assembly_work_order_item_detail` */

/*Table structure for table `ivt_delivery_note_so` */

DROP TABLE IF EXISTS `ivt_delivery_note_so`;

CREATE TABLE `ivt_delivery_note_so` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Transactiondate` datetime DEFAULT NULL,
  `SalesOrderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `ShipToCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_delivery_note_so` */

/*Table structure for table `ivt_delivery_note_so_cogs` */

DROP TABLE IF EXISTS `ivt_delivery_note_so_cogs`;

CREATE TABLE `ivt_delivery_note_so_cogs` (
  `Code` varchar(100) NOT NULL DEFAULT '',
  `HeaderCode` varchar(50) NOT NULL,
  `BranchCode` varchar(50) NOT NULL DEFAULT '',
  `WarehouseCode` varchar(50) NOT NULL DEFAULT '',
  `ItemCode` varchar(100) NOT NULL DEFAULT '',
  `Quantity` decimal(18,4) NOT NULL DEFAULT '0.0000',
  `COGSIDR` decimal(18,4) NOT NULL DEFAULT '0.0000',
  `ItemDate` datetime NOT NULL DEFAULT '1900-01-01 00:00:00',
  `CreatedBy` varchar(50) NOT NULL DEFAULT '',
  `CreatedDate` datetime NOT NULL DEFAULT '1900-01-01 00:00:00',
  `UpdatedBy` varchar(50) DEFAULT '',
  `UpdatedDate` datetime DEFAULT '1900-01-01 00:00:00',
  PRIMARY KEY (`Code`),
  KEY `BranchCode` (`BranchCode`),
  KEY `HeaderCode` (`HeaderCode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_delivery_note_so_cogs` */

/*Table structure for table `ivt_delivery_note_so_jn_picking_list_so` */

DROP TABLE IF EXISTS `ivt_delivery_note_so_jn_picking_list_so`;

CREATE TABLE `ivt_delivery_note_so_jn_picking_list_so` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `PickingListSOCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_delivery_note_so_jn_picking_list_so` */

/*Table structure for table `ivt_delivery_note_so_trade_item_detail` */

DROP TABLE IF EXISTS `ivt_delivery_note_so_trade_item_detail`;

CREATE TABLE `ivt_delivery_note_so_trade_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `PickingListSOCode` varchar(250) DEFAULT NULL,
  `ItemAlias` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_delivery_note_so_trade_item_detail` */

/*Table structure for table `ivt_goods_received_note` */

DROP TABLE IF EXISTS `ivt_goods_received_note`;

CREATE TABLE `ivt_goods_received_note` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `PurchaseOrderCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `ReceivedBy` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `ExpeditionCode` varchar(250) DEFAULT NULL,
  `VendorDeliveryNoteNo` varchar(250) DEFAULT NULL,
  `PoliceNo` varchar(250) DEFAULT NULL,
  `ContainerNo` varchar(250) DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `VATAmount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `ConfirmationStatus` enum('PENDING','CONFIRMED') DEFAULT NULL,
  `ConfirmationBy` varchar(250) DEFAULT NULL,
  `ConfirmationDate` datetime DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_goods_received_note` */

insert  into `ivt_goods_received_note`(`Code`,`BranchCode`,`TransactionDate`,`PurchaseOrderCode`,`CurrencyCode`,`ExchangeRate`,`VendorCode`,`ReceivedBy`,`WarehouseCode`,`ExpeditionCode`,`VendorDeliveryNoteNo`,`PoliceNo`,`ContainerNo`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`VATPercent`,`VATAmount`,`GrandTotalAmount`,`RefNo`,`Remark`,`ConfirmationStatus`,`ConfirmationBy`,`ConfirmationDate`,`CreatedDate`,`CreatedBy`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/200900001','B001','2020-10-01 00:00:00','B001/POD/20090002','IDR',1.0000,'VDR00001','','A001','JKB','dana','01','02',0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,'-','-','CONFIRMED','ADMIN','2020-10-06 16:05:34','2020-09-29 11:34:45','ADMIN','','1900-01-01 00:00:00');
insert  into `ivt_goods_received_note`(`Code`,`BranchCode`,`TransactionDate`,`PurchaseOrderCode`,`CurrencyCode`,`ExchangeRate`,`VendorCode`,`ReceivedBy`,`WarehouseCode`,`ExpeditionCode`,`VendorDeliveryNoteNo`,`PoliceNo`,`ContainerNo`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`VATPercent`,`VATAmount`,`GrandTotalAmount`,`RefNo`,`Remark`,`ConfirmationStatus`,`ConfirmationBy`,`ConfirmationDate`,`CreatedDate`,`CreatedBy`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/201000001','B001','2020-10-02 17:08:50','B001/POD/20090001','IDR',1.0000,'VDR00001','','WR002','JKB','it isnt something we fought for','never wanted this kind of pain','turn myself so cold and hurtless',0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,'-','-','PENDING','','1900-01-01 00:00:00','2020-10-02 17:10:02','ADMIN','','1900-01-01 00:00:00');

/*Table structure for table `ivt_goods_received_note_item_detail` */

DROP TABLE IF EXISTS `ivt_goods_received_note_item_detail`;

CREATE TABLE `ivt_goods_received_note_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `PurchaseRequestCode` varchar(250) DEFAULT NULL,
  `PurchaseOrderDetailCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `ItemAlias` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `HeatNo` varchar(250) DEFAULT NULL,
  `BatchNo` varchar(250) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `NettPrice` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `Remark` text,
  `RackCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_goods_received_note_item_detail` */

insert  into `ivt_goods_received_note_item_detail`(`Code`,`HeaderCode`,`PurchaseRequestCode`,`PurchaseOrderDetailCode`,`ItemMaterialCode`,`ItemAlias`,`Quantity`,`Price`,`HeatNo`,`BatchNo`,`DocumentDetailCode`,`DiscountPercent`,`DiscountAmount`,`NettPrice`,`TotalAmount`,`Remark`,`RackCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/200900001-001','B001/GRN/200900001','B001/PRQ-NIMR/20090001','B001/POD/20090002-001','BANG','duh',1.0000,1000.0000,'beautiful','people',NULL,0.0000,0.0000,0.0000,0.0000,'','A001_DCI_001','ADMIN','2020-10-06 16:05:34','ADMIN','2020-10-06 16:05:34');
insert  into `ivt_goods_received_note_item_detail`(`Code`,`HeaderCode`,`PurchaseRequestCode`,`PurchaseOrderDetailCode`,`ItemMaterialCode`,`ItemAlias`,`Quantity`,`Price`,`HeatNo`,`BatchNo`,`DocumentDetailCode`,`DiscountPercent`,`DiscountAmount`,`NettPrice`,`TotalAmount`,`Remark`,`RackCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/200900001-002','B001/GRN/200900001','B001/PRQ-NIMR/20090002','B001/POD/20090002-002','BANG','mungkin',2.0000,200.0000,'nasi','mie',NULL,0.0000,0.0000,0.0000,0.0000,'','A001_DCI_001','ADMIN','2020-10-06 16:05:56','ADMIN','2020-10-06 16:05:56');
insert  into `ivt_goods_received_note_item_detail`(`Code`,`HeaderCode`,`PurchaseRequestCode`,`PurchaseOrderDetailCode`,`ItemMaterialCode`,`ItemAlias`,`Quantity`,`Price`,`HeatNo`,`BatchNo`,`DocumentDetailCode`,`DiscountPercent`,`DiscountAmount`,`NettPrice`,`TotalAmount`,`Remark`,`RackCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/201000001-001','B001/GRN/201000001','','','BANG','',10.0000,0.0000,'-','-',NULL,0.0000,0.0000,0.0000,0.0000,'','WR002_DCI_001','ADMIN','2020-10-02 17:10:02','','1900-01-01 00:00:00');

/*Table structure for table `ivt_goods_received_note_serial_no_detail` */

DROP TABLE IF EXISTS `ivt_goods_received_note_serial_no_detail`;

CREATE TABLE `ivt_goods_received_note_serial_no_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `PurchaseRequestCode` varchar(250) DEFAULT NULL,
  `PurchaseOrderDetailCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `SerialNo` varchar(250) DEFAULT NULL,
  `ItemAlias` varchar(250) DEFAULT NULL,
  `HeatNo` varchar(250) DEFAULT NULL,
  `BatchNo` varchar(250) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `Capacity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_goods_received_note_serial_no_detail` */

insert  into `ivt_goods_received_note_serial_no_detail`(`Code`,`HeaderCode`,`PurchaseRequestCode`,`PurchaseOrderDetailCode`,`ItemMaterialCode`,`SerialNo`,`ItemAlias`,`HeatNo`,`BatchNo`,`DocumentDetailCode`,`Capacity`,`Price`,`RackCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/200900001-001','B001/GRN/200900001','B001/POD/20090002-001','B001/POD/20090002-001','BANG','BANG-0000000001','duh','beautiful','people',NULL,10.0000,0.0000,'A001_DCI_001','udah','ADMIN','2020-10-06 16:05:57','ADMIN','2020-10-06 16:05:57');
insert  into `ivt_goods_received_note_serial_no_detail`(`Code`,`HeaderCode`,`PurchaseRequestCode`,`PurchaseOrderDetailCode`,`ItemMaterialCode`,`SerialNo`,`ItemAlias`,`HeatNo`,`BatchNo`,`DocumentDetailCode`,`Capacity`,`Price`,`RackCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/200900001-002','B001/GRN/200900001','B001/POD/20090002-002','B001/POD/20090002-002','BANG','BANG-0000000002','mungkin','nasi','mie',NULL,20.0000,0.0000,'A001_DCI_001','semua','ADMIN','2020-10-06 16:05:57','ADMIN','2020-10-06 16:05:57');
insert  into `ivt_goods_received_note_serial_no_detail`(`Code`,`HeaderCode`,`PurchaseRequestCode`,`PurchaseOrderDetailCode`,`ItemMaterialCode`,`SerialNo`,`ItemAlias`,`HeatNo`,`BatchNo`,`DocumentDetailCode`,`Capacity`,`Price`,`RackCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/200900001-003','B001/GRN/200900001','B001/POD/20090002-002','B001/POD/20090002-002','BANG','BANG-0000000003','mungkin','nasi','mie',NULL,30.0000,0.0000,'A001_DCI_001','pak','ADMIN','2020-10-06 16:05:57','ADMIN','2020-10-06 16:05:57');

/*Table structure for table `ivt_item_material_stock_location` */

DROP TABLE IF EXISTS `ivt_item_material_stock_location`;

CREATE TABLE `ivt_item_material_stock_location` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CustomerVendorCode` varchar(250) DEFAULT NULL,
  `CustomerVendorStatus` enum('CUSTOMER','VENDOR','OTHER') DEFAULT NULL,
  `Capacity` decimal(18,4) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `TransactionCode` varchar(250) DEFAULT NULL,
  `TransactionType` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `HeatNo` varchar(250) DEFAULT NULL,
  `BatchNo` varchar(250) DEFAULT NULL,
  `SerialNo` varchar(250) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

/*Data for the table `ivt_item_material_stock_location` */

insert  into `ivt_item_material_stock_location`(`Code`,`CustomerVendorCode`,`CustomerVendorStatus`,`Capacity`,`TransactionDate`,`TransactionCode`,`TransactionType`,`ItemMaterialCode`,`HeatNo`,`BatchNo`,`SerialNo`,`COGSIDR`,`WarehouseCode`,`RackCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/200900001-BANG-00001',NULL,'OTHER',10.0000,'2020-10-01 00:00:00','B001/GRN/200900001','GRN','BANG','','','BANG-0000000001',0.0000,'A001','A001_DCI_001','ADMIN','2020-10-06 16:05:57','','1900-01-01 00:00:00');
insert  into `ivt_item_material_stock_location`(`Code`,`CustomerVendorCode`,`CustomerVendorStatus`,`Capacity`,`TransactionDate`,`TransactionCode`,`TransactionType`,`ItemMaterialCode`,`HeatNo`,`BatchNo`,`SerialNo`,`COGSIDR`,`WarehouseCode`,`RackCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/200900001-BANG-00002',NULL,'OTHER',20.0000,'2020-10-01 00:00:00','B001/GRN/200900001','GRN','BANG','','','BANG-0000000002',0.0000,'A001','A001_DCI_001','ADMIN','2020-10-06 16:05:57','','1900-01-01 00:00:00');
insert  into `ivt_item_material_stock_location`(`Code`,`CustomerVendorCode`,`CustomerVendorStatus`,`Capacity`,`TransactionDate`,`TransactionCode`,`TransactionType`,`ItemMaterialCode`,`HeatNo`,`BatchNo`,`SerialNo`,`COGSIDR`,`WarehouseCode`,`RackCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/GRN/200900001-BANG-00003',NULL,'OTHER',30.0000,'2020-10-01 00:00:00','B001/GRN/200900001','GRN','BANG','','','BANG-0000000003',0.0000,'A001','A001_DCI_001','ADMIN','2020-10-06 16:05:57','','1900-01-01 00:00:00');

/*Table structure for table `ivt_item_stock_location` */

DROP TABLE IF EXISTS `ivt_item_stock_location`;

CREATE TABLE `ivt_item_stock_location` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CustomerVendorCode` varchar(250) DEFAULT NULL,
  `CustomerVendorStatus` enum('CUSTOMER','VENDOR','OTHER') DEFAULT NULL,
  `Capacity` decimal(18,4) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `TransactionCode` varchar(250) DEFAULT NULL,
  `TransactionType` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `HeatNo` varchar(250) DEFAULT NULL,
  `BatchNo` varchar(250) DEFAULT NULL,
  `SerialNo` varchar(250) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

/*Data for the table `ivt_item_stock_location` */

/*Table structure for table `ivt_picking_list_so` */

DROP TABLE IF EXISTS `ivt_picking_list_so`;

CREATE TABLE `ivt_picking_list_so` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Transactiondate` datetime DEFAULT NULL,
  `SalesOrderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `ShipToCode` varchar(250) DEFAULT NULL,
  `Warehousecode` varchar(250) DEFAULT NULL,
  `ConfirmationStatus` enum('PENDING','APPROVED') DEFAULT NULL,
  `ConfirmationDate` datetime DEFAULT NULL,
  `ConfirmationBy` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `PoliceNo` varchar(250) DEFAULT NULL,
  `ExpeditionCode` varchar(250) DEFAULT NULL,
  `ContainerNo` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_picking_list_so` */

/*Table structure for table `ivt_picking_list_so_cogs_in` */

DROP TABLE IF EXISTS `ivt_picking_list_so_cogs_in`;

CREATE TABLE `ivt_picking_list_so_cogs_in` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SalesOrderTradeItemDetailCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `InTransactionNo` varchar(250) DEFAULT NULL,
  `InDocumentType` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_picking_list_so_cogs_in` */

/*Table structure for table `ivt_picking_list_so_cogs_out` */

DROP TABLE IF EXISTS `ivt_picking_list_so_cogs_out`;

CREATE TABLE `ivt_picking_list_so_cogs_out` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SalesOrderTradeItemDetailCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `InTransactionNo` varchar(250) DEFAULT NULL,
  `InDocumentType` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_picking_list_so_cogs_out` */

/*Table structure for table `ivt_picking_list_so_trade_item_detail` */

DROP TABLE IF EXISTS `ivt_picking_list_so_trade_item_detail`;

CREATE TABLE `ivt_picking_list_so_trade_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Headercode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_picking_list_so_trade_item_detail` */

/*Table structure for table `ivt_warehouse_transfer_in` */

DROP TABLE IF EXISTS `ivt_warehouse_transfer_in`;

CREATE TABLE `ivt_warehouse_transfer_in` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `WarehouseTransferOutCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `SourceWarehouseCode` varchar(250) DEFAULT NULL,
  `DestinationWarehouseCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_warehouse_transfer_in` */

insert  into `ivt_warehouse_transfer_in`(`Code`,`WarehouseTransferOutCode`,`TransactionDate`,`BranchCode`,`SourceWarehouseCode`,`DestinationWarehouseCode`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/WHTI/20020001','B001/WHTO/20020001','2020-02-05 10:11:31',NULL,'WR001','WR002','-','-','ADMIN','2020-02-05 10:11:31','','1900-01-01 00:00:00');

/*Table structure for table `ivt_warehouse_transfer_in_cogs` */

DROP TABLE IF EXISTS `ivt_warehouse_transfer_in_cogs`;

CREATE TABLE `ivt_warehouse_transfer_in_cogs` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `InTransactionNo` varchar(250) DEFAULT NULL,
  `InDocumentType` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_warehouse_transfer_in_cogs` */

/*Table structure for table `ivt_warehouse_transfer_in_item_detail` */

DROP TABLE IF EXISTS `ivt_warehouse_transfer_in_item_detail`;

CREATE TABLE `ivt_warehouse_transfer_in_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_warehouse_transfer_in_item_detail` */

insert  into `ivt_warehouse_transfer_in_item_detail`(`Code`,`HeaderCode`,`ItemCode`,`Quantity`,`COGSIDR`,`TotalAmount`,`RackCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/WHTI/20020001-001','B001/WHTI/20020001','12-123-0000001',200.0000,200.0000,40000.0000,'WR002_DCI_001','-','ADMIN','2020-02-05 10:11:31','ADMIN','2020-02-05 10:11:31');

/*Table structure for table `ivt_warehouse_transfer_out` */

DROP TABLE IF EXISTS `ivt_warehouse_transfer_out`;

CREATE TABLE `ivt_warehouse_transfer_out` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `SourceWarehouseCode` varchar(250) DEFAULT NULL,
  `DestinationWarehouseCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_warehouse_transfer_out` */

insert  into `ivt_warehouse_transfer_out`(`Code`,`TransactionDate`,`BranchCode`,`SourceWarehouseCode`,`DestinationWarehouseCode`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/WHTO/20020001','2020-02-03 17:20:42','B001','WR001','WR002','-','-','ADMIN','2020-02-03 17:20:42','','1900-01-01 00:00:00');

/*Table structure for table `ivt_warehouse_transfer_out_cogs` */

DROP TABLE IF EXISTS `ivt_warehouse_transfer_out_cogs`;

CREATE TABLE `ivt_warehouse_transfer_out_cogs` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `InTransactionNo` varchar(250) DEFAULT NULL,
  `InDocumentType` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_warehouse_transfer_out_cogs` */

/*Table structure for table `ivt_warehouse_transfer_out_item_detail` */

DROP TABLE IF EXISTS `ivt_warehouse_transfer_out_item_detail`;

CREATE TABLE `ivt_warehouse_transfer_out_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `ReasonCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ivt_warehouse_transfer_out_item_detail` */

insert  into `ivt_warehouse_transfer_out_item_detail`(`Code`,`HeaderCode`,`ItemCode`,`ReasonCode`,`Quantity`,`COGSIDR`,`TotalAmount`,`RackCode`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/WHTO/20020001-001','B001/WHTO/20020001','12-123-0000001','MENARILAH',200.0000,200.0000,40000.0000,'HARUS_DCI_001','-','ADMIN','2020-02-03 17:20:42','ADMIN','2020-02-03 17:20:42');

/*Table structure for table `mst_additional_fee` */

DROP TABLE IF EXISTS `mst_additional_fee`;

CREATE TABLE `mst_additional_fee` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `PurchaseChartOfAccountCode` varchar(250) DEFAULT NULL,
  `SalesChartOfAccountCode` varchar(250) DEFAULT NULL,
  `PurchaseStatus` tinyint(1) DEFAULT NULL,
  `SalesStatus` tinyint(1) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_additional_fee` */

insert  into `mst_additional_fee`(`Code`,`Name`,`PurchaseChartOfAccountCode`,`SalesChartOfAccountCode`,`PurchaseStatus`,`SalesStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('OPN','Opener','01-02-001-0001-TRK','01-01-002-0001-TRK',1,1,1,'ADMIN','2020-08-04 14:36:18','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_additional_fee`(`Code`,`Name`,`PurchaseChartOfAccountCode`,`SalesChartOfAccountCode`,`PurchaseStatus`,`SalesStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PARKIR','PRK','','01-01-001-0001-TRK',0,1,1,'ADMIN','2020-08-04 14:15:13','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_additional_fee`(`Code`,`Name`,`PurchaseChartOfAccountCode`,`SalesChartOfAccountCode`,`PurchaseStatus`,`SalesStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TRNSPRT','Transport','01-01-001-0001-TRK','',1,0,1,'ADMIN','2020-08-04 14:24:36','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_asset_category` */

DROP TABLE IF EXISTS `mst_asset_category`;

CREATE TABLE `mst_asset_category` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_asset_category` */

/*Table structure for table `mst_asset_location` */

DROP TABLE IF EXISTS `mst_asset_location`;

CREATE TABLE `mst_asset_location` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `name` varchar(250) DEFAULT '',
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_asset_location` */

/*Table structure for table `mst_asset_position` */

DROP TABLE IF EXISTS `mst_asset_position`;

CREATE TABLE `mst_asset_position` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_asset_position` */

/*Table structure for table `mst_asset_registration` */

DROP TABLE IF EXISTS `mst_asset_registration`;

CREATE TABLE `mst_asset_registration` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `AcquiredDate` datetime DEFAULT NULL,
  `AssetCategoryCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `PriceForeign` decimal(18,4) DEFAULT NULL,
  `PriceIDR` decimal(18,4) DEFAULT NULL,
  `SerialNo` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_asset_registration` */

/*Table structure for table `mst_bank` */

DROP TABLE IF EXISTS `mst_bank`;

CREATE TABLE `mst_bank` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_bank` */

insert  into `mst_bank`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
insert  into `mst_bank`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BCA','Bank Central Asia',1,'ADM','2017-02-23 10:03:07','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_bank`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MDR','BANK MANDIRI',1,'ADMIN','2019-05-22 15:23:05','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_bank_account` */

DROP TABLE IF EXISTS `mst_bank_account`;

CREATE TABLE `mst_bank_account` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ACNo` varchar(250) DEFAULT NULL,
  `ACName` varchar(250) DEFAULT NULL,
  `BankCode` varchar(250) DEFAULT NULL,
  `BankBranch` varchar(250) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `BBMVoucherNo` varchar(250) DEFAULT NULL,
  `BBKVoucherNo` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_bank_account` */

insert  into `mst_bank_account`(`Code`,`Name`,`ACNo`,`ACName`,`BankCode`,`BankBranch`,`ChartOfAccountCode`,`BBMVoucherNo`,`BBKVoucherNo`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BCA_01','BCA AN XXX','XXX','XXX','','WISMA ASIA','01-01-002-0002-MMS','BBM-AS','BBK-AS',1,'ADM','2017-09-14 12:03:20','TANBUDI','2017-12-22 10:10:05','','1900-01-01 00:00:00','');
insert  into `mst_bank_account`(`Code`,`Name`,`ACNo`,`ACName`,`BankCode`,`BankBranch`,`ChartOfAccountCode`,`BBMVoucherNo`,`BBKVoucherNo`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('DADAH','Practice Love','123','321','BCA','123','01-01-001-0007-MMS','123','123',1,'ADMIN','2020-01-23 14:32:40','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_bank_account`(`Code`,`Name`,`ACNo`,`ACName`,`BankCode`,`BankBranch`,`ChartOfAccountCode`,`BBMVoucherNo`,`BBKVoucherNo`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MDR_001','MANDIRI a.n RAHMAN','5307514137','Mandiri','','Jakarta Raya','01-01-001-0001-MMS','-','-',1,'ADMIN','2019-05-22 15:15:40','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_bank_account`(`Code`,`Name`,`ACNo`,`ACName`,`BankCode`,`BankBranch`,`ChartOfAccountCode`,`BBMVoucherNo`,`BBKVoucherNo`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ULL','A','123','123','BCA','123','01-01-001','123','123',1,'ADMIN','2020-01-23 11:47:45','','1900-01-01 00:00:00','','1900-01-01 00:00:00','123');

/*Table structure for table `mst_bank_account_opening_balance` */

DROP TABLE IF EXISTS `mst_bank_account_opening_balance`;

CREATE TABLE `mst_bank_account_opening_balance` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `PeriodYear` decimal(4,0) DEFAULT NULL,
  `PeriodMonth` decimal(2,0) DEFAULT NULL,
  `BankAccountCode` varchar(250) DEFAULT NULL,
  `BankAmount` decimal(18,4) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_bank_account_opening_balance` */

/*Table structure for table `mst_bill_of_material` */

DROP TABLE IF EXISTS `mst_bill_of_material`;

CREATE TABLE `mst_bill_of_material` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ProductTypeCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_bill_of_material` */

insert  into `mst_bill_of_material`(`Code`,`Name`,`ProductTypeCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`Remark`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`) values ('CORONA','China','WUHAN',1,'ADMIN','2020-01-28 11:46:26','-','ADMIN','2020-02-06 10:23:27','','1900-01-01 00:00:00');

/*Table structure for table `mst_bill_of_material_detail` */

DROP TABLE IF EXISTS `mst_bill_of_material_detail`;

CREATE TABLE `mst_bill_of_material_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_bill_of_material_detail` */

insert  into `mst_bill_of_material_detail`(`Code`,`HeaderCode`,`ItemCode`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('CORONA-000','CORONA','12-123-0000001',1000.0000,'','1900-01-01 00:00:00','ADMIN','2020-02-06 10:23:28');

/*Table structure for table `mst_branch` */

DROP TABLE IF EXISTS `mst_branch`;

CREATE TABLE `mst_branch` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `Address` text,
  `CityCode` varchar(250) DEFAULT NULL,
  `ZipCode` varchar(250) DEFAULT NULL,
  `Phone1` varchar(250) DEFAULT NULL,
  `Phone2` varchar(250) DEFAULT NULL,
  `Fax` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  `ContactPerson` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_branch` */

insert  into `mst_branch`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`ContactPerson`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('B001','Pontianak','-','JKT-B','','-','-','-','-','FRANCISCUS BERTIN KENDO',1,'ADM','2017-08-25 10:49:58','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_branch`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`ContactPerson`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('B002','Pulo Gadung','-','JKT-B','123','02129870910','02129870911','-','SALES@MAXINDO.NET.ID','ANTON SALIM',1,'ADM','2017-08-25 09:02:43','ADMIN','2020-01-09 11:42:05','','1900-01-01 00:00:00','');
insert  into `mst_branch`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`ContactPerson`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('B003','Kelapa Gading','-','JKT-B','','02189911161','-','02189911162','SALES@MAXINDO.NET.ID','DESI ANTONI',1,'ADM','2017-08-25 09:04:38','ADM','2017-08-25 10:50:28','','1900-01-01 00:00:00','');
insert  into `mst_branch`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`ContactPerson`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TRK','TRK','Sunter','BKS','','021-6666666','-','-','waduh','pip',1,'ADMIN','2020-08-26 12:16:10','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_cad_document_for_approval` */

DROP TABLE IF EXISTS `mst_cad_document_for_approval`;

CREATE TABLE `mst_cad_document_for_approval` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_cad_document_for_approval` */

insert  into `mst_cad_document_for_approval`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ONE','saitama',1,'ADMIN','2019-12-17 15:24:03','','1900-01-01 00:00:00','','1900-01-01 00:00:00','onepunchhh');

/*Table structure for table `mst_cash_account` */

DROP TABLE IF EXISTS `mst_cash_account`;

CREATE TABLE `mst_cash_account` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `BKMVoucherNo` varchar(250) DEFAULT NULL,
  `BKKVoucherNo` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `Createddate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_cash_account` */

insert  into `mst_cash_account`(`Code`,`Name`,`ChartOfAccountCode`,`BKMVoucherNo`,`BKKVoucherNo`,`ActiveStatus`,`CreatedBy`,`Createddate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CASH001','KAS KECIL','01-01-001-0001-TRK','BKM-CASH','BKK-CASH',1,'ADM','2020-01-23 11:05:13','TANBUDI','2020-01-23 12:27:37','','1900-01-01 00:00:00','123');

/*Table structure for table `mst_cash_account_opening_balance` */

DROP TABLE IF EXISTS `mst_cash_account_opening_balance`;

CREATE TABLE `mst_cash_account_opening_balance` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `PeriodYear` decimal(4,0) DEFAULT NULL,
  `PeriodMonth` decimal(2,0) DEFAULT NULL,
  `CashAccountCode` varchar(250) DEFAULT NULL,
  `CashAmount` decimal(18,4) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `Createdby` varchar(250) DEFAULT NULL,
  `createddate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_cash_account_opening_balance` */

/*Table structure for table `mst_chart_of_account` */

DROP TABLE IF EXISTS `mst_chart_of_account`;

CREATE TABLE `mst_chart_of_account` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `AccountType` enum('H','G','S') DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `BBMStatus` tinyint(1) DEFAULT NULL,
  `BBKStatus` tinyint(1) DEFAULT NULL,
  `BKMStatus` tinyint(1) DEFAULT NULL,
  `BKKStatus` tinyint(1) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_chart_of_account` */

insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-01','KAS KECIL','H','IDR',1,1,1,1,1,'ADMIN','2020-02-09 15:58:34','ADMIN','2020-08-27 14:26:04',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-01-001','KAS KECIL','G','IDR',1,1,1,1,1,'ADMIN','2020-02-09 15:58:34','ADMIN','2020-08-27 14:23:40',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-01-001-0001-TRK','KAS KECIL','S','IDR',1,1,1,1,1,'ADMIN','2020-02-09 15:58:34','','1900-01-01 00:00:00',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-01-001-0002-TRK','KAS BESAR','S','IDR',1,1,1,1,1,'ADMIN','2020-02-09 15:59:18','ADMIN','2020-08-27 14:05:47',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-01-002','BANK','G','IDR',0,0,0,0,1,'ADMIN','2020-02-09 16:10:11','','1900-01-01 00:00:00',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-01-002-0001-TRK','BANK BCA REK 001','S','IDR',1,1,1,1,1,'ADMIN','2020-02-09 16:10:52','','1900-01-01 00:00:00',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-01-002-0002-TRK','BANK MANDIRI REK 001','S','IDR',1,1,1,1,1,'ADMIN','2020-02-09 16:11:28','','1900-01-01 00:00:00',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-02','PIUTANG','H','IDR',0,0,0,0,1,'ADMIN','2020-02-09 19:09:34','','1900-01-01 00:00:00',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-02-001','PIUTANG DAGANG','G','IDR',0,0,0,0,1,'ADMIN','2020-02-09 19:09:59','','1900-01-01 00:00:00',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-02-001-0001-TRK','PIUTANG DAGANG LANCAR','S','IDR',0,0,0,0,1,'ADMIN','2020-02-09 19:10:30','','1900-01-01 00:00:00',NULL,NULL,NULL);
insert  into `mst_chart_of_account`(`Code`,`Name`,`AccountType`,`CurrencyCode`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('01-02-001-0002-TRK','PIUTANG DAGANG TIDAK LANCAR','S','IDR',0,0,0,0,1,'ADMIN','2020-02-09 19:11:23','','1900-01-01 00:00:00',NULL,NULL,NULL);

/*Table structure for table `mst_chart_of_account_opening_balance` */

DROP TABLE IF EXISTS `mst_chart_of_account_opening_balance`;

CREATE TABLE `mst_chart_of_account_opening_balance` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `AccountCode` varchar(250) DEFAULT NULL,
  `PeriodMonth` decimal(2,0) DEFAULT NULL,
  `PeriodYear` decimal(4,0) DEFAULT NULL,
  `OpeningBalanceForeign` decimal(18,4) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `Createdby` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_chart_of_account_opening_balance` */

/*Table structure for table `mst_city` */

DROP TABLE IF EXISTS `mst_city`;

CREATE TABLE `mst_city` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ProvinceCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_city` */

insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('-','-','JW_BRT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BDG','Kota Bandung','JW_BRT',1,'ADM','2016-04-01 00:00:00','DEDI','2018-07-23 09:53:32','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BDG - KB','Kab. Bandung','JW_BRT',1,'DEDI','2018-07-23 10:03:27','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BDU','Kab. Badung (Bali)','JW_BRT',1,'DEDI','2018-07-23 10:30:12','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BGR','Kota Bogor','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 09:53:40','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BGR - KB','Kab. Bogor','JW_BRT',1,'DEDI','2018-07-23 10:03:51','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BJM','Kota Banjarmasin','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 09:55:12','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BKL - KB','Kab. Bangkalan','JW_BRT',1,'DEDI','2018-07-23 10:13:23','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BKS','Kota Bekasi','JW_BRT',1,'ADM','2016-04-01 00:00:00','DEDI','2018-07-23 09:53:21','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BKS-KB','Kab. Bekasi','JW_BRT',1,'DEDI','2018-07-23 09:57:06','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BLL','Kab. Buleleng (Bali)','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-09-04 10:53:43','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BLT-T','Kab. Belitung Timur','JW_BRT',1,'DEDI','2017-12-16 14:50:36','DEDI','2018-07-23 10:17:29','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BON','Kota Bontang','JW_BRT',1,'DEDI','2018-07-23 10:20:22','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BPP','Kota Balikpapan','JW_BRT',1,'DEDI','2018-07-23 10:20:44','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BTM','Kota Batam','JW_BRT',1,'HENDRI','2017-12-16 15:41:01','DEDI','2018-07-23 10:17:43','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BTU','Kota Batu','JW_BRT',1,'DEDI','2018-07-23 10:15:01','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CKR','Cikarang','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 09:50:48','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CLG','Kota Cilegon','JW_BRT',1,'DEDI','2018-07-23 10:00:42','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CLK','Cilangkap','JW_BRT',1,'HENDRI','2017-12-16 15:21:52','DEDI','2018-07-23 10:18:14','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CRB','Kota Cirebon','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:04:10','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CRB - KB ','Kab. Cirebon','JW_BRT',1,'DEDI','2018-07-23 10:04:31','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('DIY','Kota Yogyakarta','JW_BRT',1,'ROS','2017-12-16 10:59:33','DEDI','2018-07-23 10:07:37','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('DPK','Kota Depok','JW_BRT',1,'ADM','2017-08-08 09:54:42','DEDI','2018-07-23 10:05:48','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('DPS','Kota Denpasar','JW_BRT',1,'DEDI','2018-07-23 09:58:54','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('DSG','Kab. Deli Serdang','JW_BRT',1,'DEDI','2018-08-15 14:37:45','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GRG','Kab. Grobogan','JW_BRT',1,'DEDI','2018-08-15 16:27:20','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GRS','Kab. Gresik','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:10:35','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JBN','Kab. Jembrana (Bali)','JW_BRT',1,'DEDI','2018-08-14 15:28:44','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JKT-B','Jakarta Barat','JW_BRT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JKT-P','Jakarta Pusat','JW_BRT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JKT-S','Jakarta Selatan','JW_BRT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JKT-T','Jakarta Timur','JW_BRT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JKT-U','Jakarta Utara','JW_BRT',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JMB','Kota Jambi','JW_BRT',1,'PRIO','2017-12-16 15:18:48','DEDI','2018-07-23 10:18:57','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JOM','Kab. Jombang','JW_BRT',1,'DEDI','2017-12-16 17:15:30','DEDI','2018-07-23 10:10:16','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('KAL-T','Balikpapan','JW_BRT',1,'ROS','2017-12-16 14:00:25','ROS','2017-12-16 14:30:21','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('KDR','Kota Kediri','JW_BRT',1,'DEDI','2018-11-22 15:00:32','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('KDR-KB','Kab. Kediri','JW_BRT',1,'DEDI','2018-11-22 15:00:55','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('KPS','Kepulauan Seribu','JW_BRT',1,'DEDI','2017-12-16 13:39:05','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('KRW','Kab. Karawang','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:05:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('LBK','Kab. Lebak','JW_BRT',1,'DEDI','2017-12-16 19:22:53','DEDI','2018-07-23 10:27:01','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('LMP','Kota Bandar Lampung','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:16:05','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MDN','Kota Medan','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:17:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MGN','Kab. Magetan','JW_BRT',1,'DEDI','2017-12-16 20:51:46','DEDI','2018-07-23 10:24:28','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MJK','Kab. Majalengka','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:05:20','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MJO','Kota Mojokerto','JW_BRT',1,'ALIF','2017-12-15 15:28:28','DEDI','2018-07-23 10:14:22','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MJO - KB','Kab. Mojokerto','JW_BRT',1,'DEDI','2018-07-23 10:14:34','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MKS','Kota Makassar','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:26:01','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MLG','Kota Malang','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:13:49','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MLG - KB','Kab. Malang','JW_BRT',1,'DEDI','2018-07-23 10:13:58','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PAL','Kota Palembang','JW_BRT',1,'DEDI','2018-06-21 16:12:42','DEDI','2018-07-23 10:26:17','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PDG - KB','Kab. Pandeglang','JW_BRT',1,'DEDI','2018-07-23 10:01:36','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PKB','Kota Pekanbaru','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:26:32','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PMK','Kab. Pemekasan','JW_BRT',1,'DEDI','2018-07-23 10:25:05','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PSR','Kota Pasuruan','JW_BRT',1,'PRIO','2017-12-09 11:47:24','DEDI','2018-07-23 10:09:33','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PSR - KB','Kab. Pasuruan','JW_BRT',1,'DEDI','2018-07-23 10:09:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PWK','Kab. Purwakarta','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:26:48','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SAM','Kab. Sampang','JW_BRT',1,'DEDI','2017-12-16 18:25:27','DEDI','2018-07-23 10:12:56','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SBY','Kota Surabaya','JW_BRT',1,'ADM','1900-01-01 00:00:00','DEDI','2018-07-23 10:09:18','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SDJ','Kab. Sidoarjo','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:12:07','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SKH','Kabupaten Sukoharjo','JW_BRT',1,'DEDI','2018-11-28 15:00:17','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SKT','Kota Surakarta (SOLO)','JW_BRT',1,'DEDI','2018-11-28 14:59:53','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SLM','Kab. Sleman ','JW_BRT',1,'HENDRI','2017-12-14 11:05:21','DEDI','2018-07-23 10:12:35','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SMG','Kota Semarang','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 10:06:55','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SMG - KB','Kab. Semarang','JW_BRT',1,'DEDI','2018-07-23 10:07:07','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SMR','Kota Samarinda','JW_BRT',1,'DEDI','2018-07-23 10:21:07','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SNP','Kab. Sumenep','JW_BRT',1,'DEDI','2018-07-23 10:25:29','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SORG','Kab. Sorong','JW_BRT',1,'ROS','2017-12-16 16:30:05','DEDI','2018-07-23 10:11:50','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SRG','Kota Serang','JW_BRT',1,'','1900-01-01 00:00:00','DEDI','2018-07-23 09:52:38','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SRG-KB','Kab. Serang','JW_BRT',1,'DEDI','2018-07-23 10:00:23','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TBN','Kab. Tuban','JW_BRT',1,'DEDI','2017-12-16 20:51:22','DEDI','2018-07-23 10:11:30','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TGS','Kota Tangerang Selatan','JW_BRT',1,'ANGGRA','2017-12-16 11:27:37','DEDI','2018-07-23 09:59:42','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TJP','Kota Tanjung Pinang','JW_BRT',1,'ROS','2017-12-16 18:39:20','DEDI','2018-07-23 10:27:56','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TMA','Kota Tasikmalaya','JW_BRT',1,'ADM','2017-09-14 10:35:02','DEDI','2018-07-23 10:06:08','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TMA - KB','Kab. Tasikmalaya','JW_BRT',1,'DEDI','2018-07-23 10:06:21','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TNG','Kota Tangerang','JW_BRT',1,'ADM','2016-04-01 00:00:00','DEDI','2018-07-23 09:52:54','','1900-01-01 00:00:00','');
insert  into `mst_city`(`Code`,`Name`,`ProvinceCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TNG-KB','Kab. Tangerang','JW_BRT',1,'DEDI','2018-07-23 09:59:29','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_co_driver` */

DROP TABLE IF EXISTS `mst_co_driver`;

CREATE TABLE `mst_co_driver` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `EmployeeCode` varchar(250) DEFAULT NULL,
  `Address` text,
  `CityCode` varchar(250) DEFAULT NULL,
  `ZipCode` varchar(225) DEFAULT NULL,
  `Phone1` varchar(250) DEFAULT NULL,
  `Phone2` varchar(250) DEFAULT NULL,
  `Fax` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  `InternalExternalStatus` enum('INTERNAL','EXTERNAL') DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_co_driver` */

insert  into `mst_co_driver`(`Code`,`Name`,`EmployeeCode`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`InternalExternalStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CK_2001_001','Susan','E002','Jl.Arjuna Selatan No.8','JKT-B','11480','081380658347','-','','','INTERNAL',1,'ADMIN','2020-01-27 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00','123');

/*Table structure for table `mst_country` */

DROP TABLE IF EXISTS `mst_country`;

CREATE TABLE `mst_country` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_country` */

insert  into `mst_country`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('INA','Indonesia',1,'ADM','2017-02-25 20:07:30','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_currency` */

DROP TABLE IF EXISTS `mst_currency`;

CREATE TABLE `mst_currency` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_currency` */

insert  into `mst_currency`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('IDR','Rupiah',1,'ADM','2017-02-22 19:09:06','TANBUDI','2018-01-24 14:13:44','','1900-01-01 00:00:00','');
insert  into `mst_currency`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('USD','Dollar America',1,'ADM','2017-02-22 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_customer` */

DROP TABLE IF EXISTS `mst_customer`;

CREATE TABLE `mst_customer` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `Address` text,
  `CityCode` varchar(250) DEFAULT NULL,
  `ZipCode` varchar(250) DEFAULT NULL,
  `Phone1` varchar(250) DEFAULT NULL,
  `Phone2` varchar(250) DEFAULT NULL,
  `Fax` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  `CustomerCategoryCode` varchar(250) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `ARAccountCode` varchar(250) DEFAULT NULL,
  `DefaultContactPersonCode` varchar(250) DEFAULT NULL,
  `DefaultShipToCode` varchar(250) DEFAULT NULL,
  `DefaultBillToCode` varchar(250) DEFAULT NULL,
  `TaxCode` varchar(250) DEFAULT NULL,
  `NPWP` varchar(250) DEFAULT NULL,
  `NPWPName` varchar(250) DEFAULT NULL,
  `NPWPAddress` text,
  `NPWPCityCode` varchar(250) DEFAULT NULL,
  `NPWPZipCode` varchar(250) DEFAULT NULL,
  `CustomerStatus` tinyint(1) DEFAULT NULL,
  `EndUserStatus` tinyint(1) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_customer` */

insert  into `mst_customer`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`CustomerCategoryCode`,`PaymentTermCode`,`ARAccountCode`,`DefaultContactPersonCode`,`DefaultShipToCode`,`DefaultBillToCode`,`TaxCode`,`NPWP`,`NPWPName`,`NPWPAddress`,`NPWPCityCode`,`NPWPZipCode`,`CustomerStatus`,`EndUserStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CUS00001','aku','asd','BDG','-','-','-','-','-','CUST01','7D',NULL,'','','','001','waduh','aduh','ihhh','BDG','-',1,1,1,'ADMIN','2020-08-10 14:22:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_customer`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`CustomerCategoryCode`,`PaymentTermCode`,`ARAccountCode`,`DefaultContactPersonCode`,`DefaultShipToCode`,`DefaultBillToCode`,`TaxCode`,`NPWP`,`NPWPName`,`NPWPAddress`,`NPWPCityCode`,`NPWPZipCode`,`CustomerStatus`,`EndUserStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CUS00002','ku sadar','beruntungnya aku','BDG','-','-','-','-','-','CUST01','7D',NULL,'','','','001','suka duka','saling','menyempurnakan','BDG','-',1,1,1,'ADMIN','2020-08-10 14:29:53','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_customer`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`CustomerCategoryCode`,`PaymentTermCode`,`ARAccountCode`,`DefaultContactPersonCode`,`DefaultShipToCode`,`DefaultBillToCode`,`TaxCode`,`NPWP`,`NPWPName`,`NPWPAddress`,`NPWPCityCode`,`NPWPZipCode`,`CustomerStatus`,`EndUserStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WAKWAW','wadidaw','hmm','BDU','-','-','-','-','-','CUST01','30D','01-01-001-0001-TRK','WAKWAW-001','','','001','321','21','214','BGR - KB','-',0,1,1,'ADMIN','2019-11-27 00:00:00','ADMIN','2020-07-16 15:27:33','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_customer_category` */

DROP TABLE IF EXISTS `mst_customer_category`;

CREATE TABLE `mst_customer_category` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_customer_category` */

insert  into `mst_customer_category`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CUST01','Cust',1,'ADMIN','2020-01-24 12:19:02','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_customer_jn_address` */

DROP TABLE IF EXISTS `mst_customer_jn_address`;

CREATE TABLE `mst_customer_jn_address` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CustomerCode` varchar(250) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Address` text,
  `CityCode` varchar(250) DEFAULT NULL,
  `ZipCode` varchar(250) DEFAULT NULL,
  `Phone1` varchar(250) DEFAULT NULL,
  `Phone2` varchar(250) DEFAULT NULL,
  `Fax` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(255) DEFAULT NULL,
  `ContactPerson` varchar(250) DEFAULT NULL,
  `ShipToStatus` tinyint(1) DEFAULT NULL,
  `BillToStatus` tinyint(1) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_customer_jn_address` */

insert  into `mst_customer_jn_address`(`Code`,`CustomerCode`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`ContactPerson`,`ShipToStatus`,`BillToStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CUSADDR00001','CUS001','asd','asd','BDG','','-','-','-','','-',1,1,1,'ADMIN','2020-06-25 17:34:06','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_customer_jn_address`(`Code`,`CustomerCode`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`ContactPerson`,`ShipToStatus`,`BillToStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WAKWAW-00001','WAKWAW','Sapa aja','aduh','BDG','','123','-','-','','-',1,1,1,'ADMIN','2020-01-24 13:42:58','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_customer_jn_contact` */

DROP TABLE IF EXISTS `mst_customer_jn_contact`;

CREATE TABLE `mst_customer_jn_contact` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CustomerCode` varchar(250) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Phone` varchar(250) DEFAULT NULL,
  `MobileNo` varchar(250) DEFAULT NULL,
  `BirthDate` datetime DEFAULT NULL,
  `JobPositionCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_customer_jn_contact` */

insert  into `mst_customer_jn_contact`(`Code`,`CustomerCode`,`Name`,`Phone`,`MobileNo`,`BirthDate`,`JobPositionCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WAKWAW-001','WAKWAW','Zhe Yang','-','-','2020-01-27 13:35:11','IT',1,'ADMIN','2020-01-27 13:35:11','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_dcas_design` */

DROP TABLE IF EXISTS `mst_dcas_design`;

CREATE TABLE `mst_dcas_design` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_dcas_design` */

insert  into `mst_dcas_design`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MAROON5','Adam Levine',1,'ADMIN','2019-12-17 15:53:06','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_dcas_fire_safe_by_design` */

DROP TABLE IF EXISTS `mst_dcas_fire_safe_by_design`;

CREATE TABLE `mst_dcas_fire_safe_by_design` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_dcas_fire_safe_by_design` */

insert  into `mst_dcas_fire_safe_by_design`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CINTA','Dibalas',1,'ADMIN','2019-12-17 16:13:53','','1900-01-01 00:00:00','','1900-01-01 00:00:00','Dusta');

/*Table structure for table `mst_dcas_hydro_test` */

DROP TABLE IF EXISTS `mst_dcas_hydro_test`;

CREATE TABLE `mst_dcas_hydro_test` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_dcas_hydro_test` */

insert  into `mst_dcas_hydro_test`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('UNKNOWN','location',1,'ADMIN','2019-12-17 16:46:13','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_dcas_legal_requirements` */

DROP TABLE IF EXISTS `mst_dcas_legal_requirements`;

CREATE TABLE `mst_dcas_legal_requirements` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_dcas_legal_requirements` */

insert  into `mst_dcas_legal_requirements`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('QING FEI DE YI','Jerry Yan',1,'ADMIN','2019-12-17 17:11:29','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_dcas_marking` */

DROP TABLE IF EXISTS `mst_dcas_marking`;

CREATE TABLE `mst_dcas_marking` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_dcas_marking` */

insert  into `mst_dcas_marking`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MARKING','mark',1,'ADMIN','2019-12-18 10:56:46','','1900-01-01 00:00:00','','1900-01-01 00:00:00','iron man');

/*Table structure for table `mst_dcas_nde` */

DROP TABLE IF EXISTS `mst_dcas_nde`;

CREATE TABLE `mst_dcas_nde` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_dcas_nde` */

insert  into `mst_dcas_nde`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('NDE','indomie',1,'ADMIN','2019-12-18 11:37:26','','1900-01-01 00:00:00','','1900-01-01 00:00:00','kambing');

/*Table structure for table `mst_dcas_testing` */

DROP TABLE IF EXISTS `mst_dcas_testing`;

CREATE TABLE `mst_dcas_testing` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_dcas_testing` */

insert  into `mst_dcas_testing`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TRA','ungkap',1,'ADMIN','2019-12-18 13:40:39','','1900-01-01 00:00:00','','1900-01-01 00:00:00','hati iki');

/*Table structure for table `mst_dcas_visual_examination` */

DROP TABLE IF EXISTS `mst_dcas_visual_examination`;

CREATE TABLE `mst_dcas_visual_examination` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_dcas_visual_examination` */

insert  into `mst_dcas_visual_examination`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('IKB','Mencari Bakat',1,'ADMIN','2019-12-18 14:08:20','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_department` */

DROP TABLE IF EXISTS `mst_department`;

CREATE TABLE `mst_department` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_department` */

insert  into `mst_department`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FINANCE','Fin',1,'ADMIN','2020-01-23 11:36:12','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_division` */

DROP TABLE IF EXISTS `mst_division`;

CREATE TABLE `mst_division` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) NOT NULL DEFAULT '',
  `DepartmentCode` varchar(250) NOT NULL DEFAULT '',
  `ActiveStatus` tinyint(1) NOT NULL DEFAULT '0',
  `CreatedBy` varchar(250) NOT NULL DEFAULT '',
  `CreatedDate` datetime NOT NULL DEFAULT '1900-01-01 00:00:00',
  `UpdatedBy` varchar(250) NOT NULL DEFAULT '',
  `UpdatedDate` datetime NOT NULL DEFAULT '1900-01-01 00:00:00',
  `InActiveBy` varchar(250) NOT NULL DEFAULT '',
  `InActiveDate` datetime NOT NULL DEFAULT '1900-01-01 00:00:00',
  `Remark` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`Code`),
  KEY `DepartmentCode` (`DepartmentCode`),
  KEY `Code` (`Code`),
  KEY `Name` (`Name`),
  CONSTRAINT `mst_division_ibfk_1` FOREIGN KEY (`DepartmentCode`) REFERENCES `mst_department` (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_division` */

/*Table structure for table `mst_document_type` */

DROP TABLE IF EXISTS `mst_document_type`;

CREATE TABLE `mst_document_type` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `Position` enum('Debit','Credit') DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_document_type` */

insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CCN','Customer Credit Note','Debit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDN','Customer Debit Note','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDP-BBM','Customer Down Payment - BBM','Debit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDP-BKM','Customer Down Payment - BKM','Debit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDP-P','Customer Down Payment','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDP-U','Customer Down Payment','Debit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FCN','FEE RECEIVER CREDIT NOTE','Debit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FDN','FEE RECEIVER DEBIT NOTE','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('INV','Invoice','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('INV_ITM','Invoice Item','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SCN','Supplier Credit Note','Debit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SDN','Supplier Debit Note','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SDP-BBK','Supplier Down Payment - BBK','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SDP-BKK','Supplier Down Payment - BKK','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SDP-P','Supplier Down Payment','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SDP-U','Supplier Down Payment','Credit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_document_type`(`Code`,`Name`,`Position`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('VIN','Vendor Invoice','Debit',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_document_type_chart_of_account` */

DROP TABLE IF EXISTS `mst_document_type_chart_of_account`;

CREATE TABLE `mst_document_type_chart_of_account` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `DocumentTypeCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `AccountCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_document_type_chart_of_account` */

insert  into `mst_document_type_chart_of_account`(`Code`,`DocumentTypeCode`,`CurrencyCode`,`AccountCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CCN-IDR','CCN','IDR','01-01-001-0001-TRK','ADM','2020-02-29 00:07:17',NULL,NULL,NULL,NULL,NULL);
insert  into `mst_document_type_chart_of_account`(`Code`,`DocumentTypeCode`,`CurrencyCode`,`AccountCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDN-IDR','CDN','IDR','01-01-001-0001-TRK','ADM','2020-02-29 00:07:17',NULL,NULL,NULL,NULL,NULL);
insert  into `mst_document_type_chart_of_account`(`Code`,`DocumentTypeCode`,`CurrencyCode`,`AccountCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('VCN-IDR','VCN','IDR','01-01-001-0001-TRK','ADM','2020-02-29 00:07:17',NULL,NULL,NULL,NULL,NULL);
insert  into `mst_document_type_chart_of_account`(`Code`,`DocumentTypeCode`,`CurrencyCode`,`AccountCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('VDN-IDR','VDN','IDR','01-01-001-0001-TRK','ADM','2020-02-29 00:07:17',NULL,NULL,NULL,NULL,NULL);

/*Table structure for table `mst_driver` */

DROP TABLE IF EXISTS `mst_driver`;

CREATE TABLE `mst_driver` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `EmployeeCode` varchar(250) DEFAULT NULL,
  `Address` text,
  `CityCode` varchar(250) DEFAULT NULL,
  `ZipCode` varchar(225) DEFAULT NULL,
  `Phone1` varchar(250) DEFAULT NULL,
  `Phone2` varchar(250) DEFAULT NULL,
  `Fax` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  `InternalExternalStatus` enum('INTERNAL','EXTERNAL') DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_driver` */

insert  into `mst_driver`(`Code`,`Name`,`EmployeeCode`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`InternalExternalStatus`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CK_2001_001','jsahdjsad','JASDJ','jksajdsahdjsahdjk','BDG','jsakda','sakjd','kjsadjdjsa','','','INTERNAL',1,'ADMIN','2020-01-27 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00','123');

/*Table structure for table `mst_education` */

DROP TABLE IF EXISTS `mst_education`;

CREATE TABLE `mst_education` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_education` */

insert  into `mst_education`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SD','Sekolah Dasar',1,'ADMIN','2019-06-12 23:43:27','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_education`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('STRATA-1','Sarjana',1,'ADMIN','2020-01-23 16:29:45','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_education`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('UNV','Universitas',1,'ADMIN','2019-06-14 16:24:44','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_employee` */

DROP TABLE IF EXISTS `mst_employee`;

CREATE TABLE `mst_employee` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `NIK` varchar(250) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Address` text,
  `ZipCode` varchar(250) DEFAULT NULL,
  `CityCode` varchar(250) DEFAULT NULL,
  `DomicileAddress1` text,
  `DomicileAddress2` text,
  `Phone` varchar(250) DEFAULT NULL,
  `MobileNo1` varchar(250) DEFAULT NULL,
  `MobileNo2` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  `Gender` enum('MALE','FEMALE') DEFAULT NULL,
  `MaritalStatus` enum('SINGLE','MARRIED','DIVORCE') DEFAULT NULL,
  `ReligionCode` varchar(250) DEFAULT NULL,
  `EducationCode` varchar(250) DEFAULT NULL,
  `KTPNo` varchar(250) DEFAULT NULL,
  `NPWP` varchar(250) DEFAULT NULL,
  `NPWPName` varchar(250) DEFAULT NULL,
  `NPWPAddress` text,
  `NPWPCityCode` varchar(250) DEFAULT NULL,
  `NPWPZipCode` varchar(250) DEFAULT NULL,
  `ACNo` varchar(250) DEFAULT NULL,
  `ACName` varchar(250) DEFAULT NULL,
  `BankCode` varchar(250) DEFAULT NULL,
  `BankBranch` varchar(250) DEFAULT NULL,
  `JoinDate` datetime DEFAULT NULL,
  `ResignDate` datetime DEFAULT NULL,
  `BirthDate` datetime DEFAULT NULL,
  `BirthPlace` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_employee` */

insert  into `mst_employee`(`Code`,`NIK`,`Name`,`Address`,`ZipCode`,`CityCode`,`DomicileAddress1`,`DomicileAddress2`,`Phone`,`MobileNo1`,`MobileNo2`,`EmailAddress`,`Gender`,`MaritalStatus`,`ReligionCode`,`EducationCode`,`KTPNo`,`NPWP`,`NPWPName`,`NPWPAddress`,`NPWPCityCode`,`NPWPZipCode`,`ACNo`,`ACName`,`BankCode`,`BankBranch`,`JoinDate`,`ResignDate`,`BirthDate`,`BirthPlace`,`ActiveStatus`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`,`CreatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('E001','1','Sakura','-','-','BDG','-','','-','','','','MALE','MARRIED','ISL','SD','-','-','-','-','BDG','-','-','-','BCA','-','2019-06-12 00:00:00','1900-01-01 00:00:00','2019-06-12 00:00:00','-',1,'','1900-01-01 00:00:00','ADMIN','2019-06-12 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_employee`(`Code`,`NIK`,`Name`,`Address`,`ZipCode`,`CityCode`,`DomicileAddress1`,`DomicileAddress2`,`Phone`,`MobileNo1`,`MobileNo2`,`EmailAddress`,`Gender`,`MaritalStatus`,`ReligionCode`,`EducationCode`,`KTPNo`,`NPWP`,`NPWPName`,`NPWPAddress`,`NPWPCityCode`,`NPWPZipCode`,`ACNo`,`ACName`,`BankCode`,`BankBranch`,`JoinDate`,`ResignDate`,`BirthDate`,`BirthPlace`,`ActiveStatus`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`,`CreatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('E002','123456789-02','Susan','Jl.Arjuna Selatan No.8','11480','JKT-B','Jl.Arjuna Selatan No.8','','081380658347','-','','-','FEMALE','SINGLE','ISL','UNV','3630116032985689','12-345-678-90-1-23-4','susan','jakarta barat','JKT-B','11480','0987654321','Susan','MDR','Kebon Jeruk','2019-06-17 00:00:00','1900-01-01 00:00:00','1990-06-17 00:00:00','Subang',1,'','1900-01-01 00:00:00','ADMIN','2019-06-17 00:00:00','','1900-01-01 00:00:00','OK');
insert  into `mst_employee`(`Code`,`NIK`,`Name`,`Address`,`ZipCode`,`CityCode`,`DomicileAddress1`,`DomicileAddress2`,`Phone`,`MobileNo1`,`MobileNo2`,`EmailAddress`,`Gender`,`MaritalStatus`,`ReligionCode`,`EducationCode`,`KTPNo`,`NPWP`,`NPWPName`,`NPWPAddress`,`NPWPCityCode`,`NPWPZipCode`,`ACNo`,`ACName`,`BankCode`,`BankBranch`,`JoinDate`,`ResignDate`,`BirthDate`,`BirthPlace`,`ActiveStatus`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`,`CreatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JASDJ','jsakdah','jsahdjsad','jksajdsahdjsahdjk','jsakda','BDG','jasd','ajskd','sakjd','kjsadjdjsa','asjdkh','asdkj','MALE','MARRIED','ISL','SD','askdjka','djsa','hdjksa','askjd','BDG','jsakd','kjsad','kjsad','BCA','bajsd','2020-01-23 00:00:00','1900-01-01 00:00:00','2020-01-23 00:00:00','jksand',1,'','1900-01-01 00:00:00','ADMIN','2020-01-23 00:00:00','','1900-01-01 00:00:00','jksad');

/*Table structure for table `mst_exchange_rate_bi` */

DROP TABLE IF EXISTS `mst_exchange_rate_bi`;

CREATE TABLE `mst_exchange_rate_bi` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_exchange_rate_bi` */

insert  into `mst_exchange_rate_bi`(`Code`,`CurrencyCode`,`TransactionDate`,`ExchangeRate`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BI/USD/09232020','USD','2020-09-23 00:00:00',1000.0000,1,'ADMIN','2020-09-28 16:18:11','ADMIN','2020-09-28 16:18:11',NULL,NULL,NULL);
insert  into `mst_exchange_rate_bi`(`Code`,`CurrencyCode`,`TransactionDate`,`ExchangeRate`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BI/USD/09242020','USD','2020-09-24 00:00:00',1000.0000,1,'ADMIN','2020-09-28 16:18:11','ADMIN','2020-09-28 16:18:11',NULL,NULL,NULL);
insert  into `mst_exchange_rate_bi`(`Code`,`CurrencyCode`,`TransactionDate`,`ExchangeRate`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BI/USD/09252020','USD','2020-09-25 00:00:00',1000.0000,1,'ADMIN','2020-09-28 16:18:11','ADMIN','2020-09-28 16:18:11',NULL,NULL,NULL);
insert  into `mst_exchange_rate_bi`(`Code`,`CurrencyCode`,`TransactionDate`,`ExchangeRate`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BI/USD/09262020','USD','2020-09-26 00:00:00',1000.0000,1,'ADMIN','2020-09-28 16:18:11','ADMIN','2020-09-28 16:18:11',NULL,NULL,NULL);
insert  into `mst_exchange_rate_bi`(`Code`,`CurrencyCode`,`TransactionDate`,`ExchangeRate`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BI/USD/09272020','USD','2020-09-27 00:00:00',1000.0000,1,'ADMIN','2020-09-28 16:18:11','ADMIN','2020-09-28 16:18:11',NULL,NULL,NULL);
insert  into `mst_exchange_rate_bi`(`Code`,`CurrencyCode`,`TransactionDate`,`ExchangeRate`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BI/USD/09282020','USD','2020-09-28 00:00:00',1000.0000,1,'ADMIN','2020-09-28 16:18:11','ADMIN','2020-09-28 16:18:11',NULL,NULL,NULL);

/*Table structure for table `mst_exchange_rate_tax` */

DROP TABLE IF EXISTS `mst_exchange_rate_tax`;

CREATE TABLE `mst_exchange_rate_tax` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_exchange_rate_tax` */

/*Table structure for table `mst_expedition` */

DROP TABLE IF EXISTS `mst_expedition`;

CREATE TABLE `mst_expedition` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `Address` text,
  `CityCode` varchar(250) DEFAULT NULL,
  `ZipCode` varchar(250) DEFAULT NULL,
  `Phone1` varchar(250) DEFAULT NULL,
  `Phone2` varchar(250) DEFAULT NULL,
  `Fax` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  `ContactPerson` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_expedition` */

insert  into `mst_expedition`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`ContactPerson`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('EXP00001','asd','abc','BDG','lkj','hip','hp','umkm','-','-',1,'ADMIN','2020-08-10 13:08:34','','1900-01-01 00:00:00','',NULL,'-');
insert  into `mst_expedition`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`ContactPerson`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JKB','Jasa Kirim Barang','Jl.Kebon Jeruk Raya No.01','JKT-B','11540','021345678','','','Jasakirimbarang@gmail.com','Adi',1,'ADMIN','2019-06-17 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00','OK');

/*Table structure for table `mst_island` */

DROP TABLE IF EXISTS `mst_island`;

CREATE TABLE `mst_island` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `CountryCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_island` */

insert  into `mst_island`(`Code`,`Name`,`CountryCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JW','Jawa','INA',1,'ADMIN','2019-06-12 23:31:26','','1990-01-01 00:00:00','','1990-01-01 00:00:00','-');
insert  into `mst_island`(`Code`,`Name`,`CountryCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('KLM','Kalimantan','INA',1,'ADMIN','2019-06-17 15:06:22','','1990-01-01 00:00:00','','1990-01-01 00:00:00','OK');

/*Table structure for table `mst_item_arm` */

DROP TABLE IF EXISTS `mst_item_arm`;

CREATE TABLE `mst_item_arm` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_arm` */

/*Table structure for table `mst_item_arm_pin` */

DROP TABLE IF EXISTS `mst_item_arm_pin`;

CREATE TABLE `mst_item_arm_pin` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_arm_pin` */

insert  into `mst_item_arm_pin`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ARMPIN00001','HnHn',1,'ADMIN','2020-04-15 13:38:19','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_backseat` */

DROP TABLE IF EXISTS `mst_item_backseat`;

CREATE TABLE `mst_item_backseat` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_backseat` */

insert  into `mst_item_backseat`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BCKST00001','Backseat',1,'ADMIN','2020-03-17 23:49:35','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_ball` */

DROP TABLE IF EXISTS `mst_item_ball`;

CREATE TABLE `mst_item_ball` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_ball` */

insert  into `mst_item_ball`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL00001','BALL',1,'ADMIN','2020-03-17 15:01:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','ITEM');

/*Table structure for table `mst_item_body` */

DROP TABLE IF EXISTS `mst_item_body`;

CREATE TABLE `mst_item_body` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_body` */

insert  into `mst_item_body`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SV','vad',1,'ADMIN','2019-12-11 13:47:42','','1900-01-01 00:00:00','','1900-01-01 00:00:00','hana');

/*Table structure for table `mst_item_body_construction` */

DROP TABLE IF EXISTS `mst_item_body_construction`;

CREATE TABLE `mst_item_body_construction` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_body_construction` */

insert  into `mst_item_body_construction`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BDYCTR00001','Body',1,'ADMIN','2020-03-20 14:11:24','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_bolt` */

DROP TABLE IF EXISTS `mst_item_bolt`;

CREATE TABLE `mst_item_bolt` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_bolt` */

insert  into `mst_item_bolt`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ENAKKAN','Apa',1,'ADMIN','2019-12-11 13:25:11','','1900-01-01 00:00:00','','1900-01-01 00:00:00','aja');

/*Table structure for table `mst_item_bore` */

DROP TABLE IF EXISTS `mst_item_bore`;

CREATE TABLE `mst_item_bore` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_bore` */

insert  into `mst_item_bore`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BORE','bor',1,'ADMIN','2019-12-11 13:28:32','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_brand` */

DROP TABLE IF EXISTS `mst_item_brand`;

CREATE TABLE `mst_item_brand` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_brand` */

insert  into `mst_item_brand`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BS-001','Besi Kokoh Jaya',1,'ADMIN','2019-06-13 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00','Besi Kuat Untuk Segala Jenis Bangunan');

/*Table structure for table `mst_item_category` */

DROP TABLE IF EXISTS `mst_item_category`;

CREATE TABLE `mst_item_category` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ItemDivisionCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_category` */

insert  into `mst_item_category`(`Code`,`Name`,`ItemDivisionCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('123','Ahhhh','12',1,'ADMIN','2020-01-10 14:08:57','','1990-01-01 00:00:00','','1990-01-01 00:00:00','Kawaiii');

/*Table structure for table `mst_item_code` */

DROP TABLE IF EXISTS `mst_item_code`;

CREATE TABLE `mst_item_code` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `ItemStatus` enum('FINISHGOODS','MATERIAL') DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_code` */

/*Table structure for table `mst_item_disc` */

DROP TABLE IF EXISTS `mst_item_disc`;

CREATE TABLE `mst_item_disc` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_disc` */

insert  into `mst_item_disc`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('DISC00001','Disc',1,'ADMIN','2020-03-17 23:49:52','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_division` */

DROP TABLE IF EXISTS `mst_item_division`;

CREATE TABLE `mst_item_division` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_division` */

insert  into `mst_item_division`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('11','Besi',1,'ADMIN','2019-06-12 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00','-');
insert  into `mst_item_division`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('12','Pipa',1,'ADMIN','2019-06-12 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00','-');

/*Table structure for table `mst_item_end_con` */

DROP TABLE IF EXISTS `mst_item_end_con`;

CREATE TABLE `mst_item_end_con` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_end_con` */

insert  into `mst_item_end_con`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GANS','aku',1,'ADMIN','2019-12-11 13:28:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','woow');

/*Table structure for table `mst_item_finish_goods` */

DROP TABLE IF EXISTS `mst_item_finish_goods`;

CREATE TABLE `mst_item_finish_goods` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ValveTypeCode` varchar(250) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `ItemBodyConstructionCode` varchar(250) DEFAULT NULL,
  `ItemTypeDesignCode` varchar(250) DEFAULT NULL,
  `ItemSeatDesignCode` varchar(250) DEFAULT NULL,
  `ItemSizeCode` varchar(250) DEFAULT NULL,
  `ItemRatingCode` varchar(250) DEFAULT NULL,
  `ItemBoreCode` varchar(250) DEFAULT NULL,
  `ItemEndConCode` varchar(250) DEFAULT NULL,
  `ItemBodyCode` varchar(250) DEFAULT NULL,
  `ItemBallCode` varchar(250) DEFAULT NULL,
  `ItemSeatCode` varchar(250) DEFAULT NULL,
  `ItemSeatInsertCode` varchar(250) DEFAULT NULL,
  `ItemStemCode` varchar(250) DEFAULT NULL,
  `ItemSealCode` varchar(250) DEFAULT NULL,
  `ItemBoltCode` varchar(250) DEFAULT NULL,
  `ItemOperatorCode` varchar(250) DEFAULT NULL,
  `ItemDiscCode` varchar(250) DEFAULT NULL,
  `ItemPlatesCode` varchar(250) DEFAULT NULL,
  `ItemShaftCode` varchar(250) DEFAULT NULL,
  `ItemSpringCode` varchar(250) DEFAULT NULL,
  `ItemArmPinCode` varchar(250) DEFAULT NULL,
  `ItemBackSeatCode` varchar(250) DEFAULT NULL,
  `ItemStopPinCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `ItemHingePinCode` varchar(250) DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `ItemArmCode` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_finish_goods` */

insert  into `mst_item_finish_goods`(`Code`,`Name`,`ValveTypeCode`,`CustomerCode`,`ItemBodyConstructionCode`,`ItemTypeDesignCode`,`ItemSeatDesignCode`,`ItemSizeCode`,`ItemRatingCode`,`ItemBoreCode`,`ItemEndConCode`,`ItemBodyCode`,`ItemBallCode`,`ItemSeatCode`,`ItemSeatInsertCode`,`ItemStemCode`,`ItemSealCode`,`ItemBoltCode`,`ItemOperatorCode`,`ItemDiscCode`,`ItemPlatesCode`,`ItemShaftCode`,`ItemSpringCode`,`ItemArmPinCode`,`ItemBackSeatCode`,`ItemStopPinCode`,`ActiveStatus`,`ItemHingePinCode`,`InActiveBy`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ItemArmCode`,`InActiveDate`,`Remark`) values ('CUS00001_BDYCTR00001_SV_ENAKKAN_OP','','GLOBE ','CUS00001','BDYCTR00001','','','','','','','SV','','','','','','ENAKKAN','OP','','','','','ARMPIN00001','','',1,'','','ADMIN','2020-08-27 13:56:43','','1900-01-01 00:00:00','','1900-01-01 00:00:00','sarada');
insert  into `mst_item_finish_goods`(`Code`,`Name`,`ValveTypeCode`,`CustomerCode`,`ItemBodyConstructionCode`,`ItemTypeDesignCode`,`ItemSeatDesignCode`,`ItemSizeCode`,`ItemRatingCode`,`ItemBoreCode`,`ItemEndConCode`,`ItemBodyCode`,`ItemBallCode`,`ItemSeatCode`,`ItemSeatInsertCode`,`ItemStemCode`,`ItemSealCode`,`ItemBoltCode`,`ItemOperatorCode`,`ItemDiscCode`,`ItemPlatesCode`,`ItemShaftCode`,`ItemSpringCode`,`ItemArmPinCode`,`ItemBackSeatCode`,`ItemStopPinCode`,`ActiveStatus`,`ItemHingePinCode`,`InActiveBy`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ItemArmCode`,`InActiveDate`,`Remark`) values ('CUS00001_ITMTYPDSG00001_STH_FEEL_RATE_GANS_FIND_AA_ALONE_SEAL_OP','','CHECK','CUS00001','','ITMTYPDSG00001','STH','FEEL','RATE','','GANS','','','FIND','AA','ALONE','SEAL','','OP','','','','','','','',1,'','','ADMIN','2020-08-26 16:58:11','','1900-01-01 00:00:00','','1900-01-01 00:00:00','nanana');
insert  into `mst_item_finish_goods`(`Code`,`Name`,`ValveTypeCode`,`CustomerCode`,`ItemBodyConstructionCode`,`ItemTypeDesignCode`,`ItemSeatDesignCode`,`ItemSizeCode`,`ItemRatingCode`,`ItemBoreCode`,`ItemEndConCode`,`ItemBodyCode`,`ItemBallCode`,`ItemSeatCode`,`ItemSeatInsertCode`,`ItemStemCode`,`ItemSealCode`,`ItemBoltCode`,`ItemOperatorCode`,`ItemDiscCode`,`ItemPlatesCode`,`ItemShaftCode`,`ItemSpringCode`,`ItemArmPinCode`,`ItemBackSeatCode`,`ItemStopPinCode`,`ActiveStatus`,`ItemHingePinCode`,`InActiveBy`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ItemArmCode`,`InActiveDate`,`Remark`) values ('CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','','SWING','CUS00002','BDYCTR00001','ITMTYPDSG00001','STH','FEEL','RATE','','','','','','','','','','','','','','','','','',1,'','','ADMIN','2020-08-12 16:30:05','','1900-01-01 00:00:00','','1900-01-01 00:00:00','goods');
insert  into `mst_item_finish_goods`(`Code`,`Name`,`ValveTypeCode`,`CustomerCode`,`ItemBodyConstructionCode`,`ItemTypeDesignCode`,`ItemSeatDesignCode`,`ItemSizeCode`,`ItemRatingCode`,`ItemBoreCode`,`ItemEndConCode`,`ItemBodyCode`,`ItemBallCode`,`ItemSeatCode`,`ItemSeatInsertCode`,`ItemStemCode`,`ItemSealCode`,`ItemBoltCode`,`ItemOperatorCode`,`ItemDiscCode`,`ItemPlatesCode`,`ItemShaftCode`,`ItemSpringCode`,`ItemArmPinCode`,`ItemBackSeatCode`,`ItemStopPinCode`,`ActiveStatus`,`ItemHingePinCode`,`InActiveBy`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ItemArmCode`,`InActiveDate`,`Remark`) values ('CUS001_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE_BORE_GANS_BALL00001_FIND_AA_ALONE_SEAL_ENAKKAN_OP','','BALL','CUS00001','BDYCTR00001','ITMTYPDSG00001','STH','FEEL','RATE','BORE','GANS','','BALL00001','FIND','AA','ALONE','SEAL','ENAKKAN','OP','','','','','','','',1,'','','ADMIN','2020-04-15 13:24:30','','1900-01-01 00:00:00','','1900-01-01 00:00:00','yang ke-1');
insert  into `mst_item_finish_goods`(`Code`,`Name`,`ValveTypeCode`,`CustomerCode`,`ItemBodyConstructionCode`,`ItemTypeDesignCode`,`ItemSeatDesignCode`,`ItemSizeCode`,`ItemRatingCode`,`ItemBoreCode`,`ItemEndConCode`,`ItemBodyCode`,`ItemBallCode`,`ItemSeatCode`,`ItemSeatInsertCode`,`ItemStemCode`,`ItemSealCode`,`ItemBoltCode`,`ItemOperatorCode`,`ItemDiscCode`,`ItemPlatesCode`,`ItemShaftCode`,`ItemSpringCode`,`ItemArmPinCode`,`ItemBackSeatCode`,`ItemStopPinCode`,`ActiveStatus`,`ItemHingePinCode`,`InActiveBy`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ItemArmCode`,`InActiveDate`,`Remark`) values ('CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001','','GATE','CUS00001','','ITMTYPDSG00001','','FEEL','RATE','BORE','GANS','SV','','FIND','','ALONE','','ENAKKAN','OP','DISC00001','','','','ARMPIN00001','BCKST00001','',1,'','','ADMIN','2020-04-15 13:39:56','','1900-01-01 00:00:00','','1900-01-01 00:00:00','Yang kedua');

/*Table structure for table `mst_item_hinge_pin` */

DROP TABLE IF EXISTS `mst_item_hinge_pin`;

CREATE TABLE `mst_item_hinge_pin` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_hinge_pin` */

/*Table structure for table `mst_item_jn_cogsidr` */

DROP TABLE IF EXISTS `mst_item_jn_cogsidr`;

CREATE TABLE `mst_item_jn_cogsidr` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ActualStock` decimal(18,4) DEFAULT NULL,
  `UsedStock` decimal(18,4) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_jn_cogsidr` */

/*Table structure for table `mst_item_jn_current_stock` */

DROP TABLE IF EXISTS `mst_item_jn_current_stock`;

CREATE TABLE `mst_item_jn_current_stock` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ActualStock` decimal(18,4) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_jn_current_stock` */

/*Table structure for table `mst_item_material` */

DROP TABLE IF EXISTS `mst_item_material`;

CREATE TABLE `mst_item_material` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ItemSubCategoryCode` varchar(250) DEFAULT NULL,
  `UnitOfMeasureCode` varchar(250) DEFAULT NULL,
  `ItemBrandCode` varchar(250) DEFAULT NULL,
  `PartConversion` decimal(18,4) DEFAULT NULL,
  `Tolerance` decimal(18,4) DEFAULT NULL,
  `BatchStatus` tinyint(1) DEFAULT NULL,
  `ConversionStatus` tinyint(1) DEFAULT NULL,
  `Conversion` decimal(18,4) DEFAULT NULL,
  `InventoryType` enum('INVENTORY','NON_INVENTORY') DEFAULT NULL,
  `SerialNoStatus` tinyint(4) DEFAULT NULL,
  `CapacityUOMCode` varchar(250) DEFAULT NULL,
  `MinStock` decimal(18,0) DEFAULT NULL,
  `MaxStock` decimal(18,0) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`),
  KEY `BatchStatus` (`BatchStatus`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_material` */

insert  into `mst_item_material`(`Code`,`Name`,`ItemSubCategoryCode`,`UnitOfMeasureCode`,`ItemBrandCode`,`PartConversion`,`Tolerance`,`BatchStatus`,`ConversionStatus`,`Conversion`,`InventoryType`,`SerialNoStatus`,`CapacityUOMCode`,`MinStock`,`MaxStock`,`COGSIDR`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BANG','ULLA','TAK','BTG','BS-001',10.0000,10.0000,1,1,10.0000,'INVENTORY',0,NULL,20,30,466.6667,1,'ADMIN','2020-01-10 16:38:37','ADMIN','2020-10-01 11:07:03','','1990-01-01 00:00:00','');
insert  into `mst_item_material`(`Code`,`Name`,`ItemSubCategoryCode`,`UnitOfMeasureCode`,`ItemBrandCode`,`PartConversion`,`Tolerance`,`BatchStatus`,`ConversionStatus`,`Conversion`,`InventoryType`,`SerialNoStatus`,`CapacityUOMCode`,`MinStock`,`MaxStock`,`COGSIDR`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ITMMTR00001','Sue','TAK','PCS','BS-001',10.0000,20.0000,1,1,30.0000,'INVENTORY',0,NULL,40,50,20.0000,1,'ADMIN','2020-07-08 11:52:05','','1900-01-01 00:00:00','','1990-01-01 00:00:00','');
insert  into `mst_item_material`(`Code`,`Name`,`ItemSubCategoryCode`,`UnitOfMeasureCode`,`ItemBrandCode`,`PartConversion`,`Tolerance`,`BatchStatus`,`ConversionStatus`,`Conversion`,`InventoryType`,`SerialNoStatus`,`CapacityUOMCode`,`MinStock`,`MaxStock`,`COGSIDR`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ITMMTR00002','bejat','TAK','PCS','BS-001',10.0000,20.0000,NULL,1,10.0000,'INVENTORY',1,NULL,10,20,0.0000,1,'ADMIN','2020-10-07 10:23:35','','1900-01-01 00:00:00','','1990-01-01 00:00:00','');

/*Table structure for table `mst_item_material_jn_current_stock` */

DROP TABLE IF EXISTS `mst_item_material_jn_current_stock`;

CREATE TABLE `mst_item_material_jn_current_stock` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ActualStock` decimal(18,4) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_material_jn_current_stock` */

insert  into `mst_item_material_jn_current_stock`(`Code`,`WarehouseCode`,`ItemMaterialCode`,`RackCode`,`ActualStock`) values ('A001/BANG-A001_DCI_001','A001','BANG','A001_DCI_001',3.0000);

/*Table structure for table `mst_item_material_jn_vendor` */

DROP TABLE IF EXISTS `mst_item_material_jn_vendor`;

CREATE TABLE `mst_item_material_jn_vendor` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_material_jn_vendor` */

insert  into `mst_item_material_jn_vendor`(`Code`,`ItemMaterialCode`,`VendorCode`) values ('BANG/VDR00001','BANG','VDR00001');

/*Table structure for table `mst_item_operator` */

DROP TABLE IF EXISTS `mst_item_operator`;

CREATE TABLE `mst_item_operator` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_operator` */

insert  into `mst_item_operator`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('OP','one piece',1,'ADMIN','2019-12-11 13:31:31','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_plates` */

DROP TABLE IF EXISTS `mst_item_plates`;

CREATE TABLE `mst_item_plates` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_plates` */

insert  into `mst_item_plates`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PLT00001','Plates',1,'ADMIN','2020-03-17 23:50:12','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_product_category` */

DROP TABLE IF EXISTS `mst_item_product_category`;

CREATE TABLE `mst_item_product_category` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ItemDivisionCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_product_category` */

insert  into `mst_item_product_category`(`Code`,`Name`,`ItemDivisionCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BSR','Besi Besar','H002',1,'ADMIN','2019-06-17 10:40:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','Besi untuk Kerangka Atap');
insert  into `mst_item_product_category`(`Code`,`Name`,`ItemDivisionCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BS_BTG','Besi Batang','',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_item_product_category`(`Code`,`Name`,`ItemDivisionCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BTG','Besi Batang','H001',1,'ADMIN','2019-06-13 13:43:19','','1900-01-01 00:00:00','','1900-01-01 00:00:00','untuk Pagar');

/*Table structure for table `mst_item_product_sub_category` */

DROP TABLE IF EXISTS `mst_item_product_sub_category`;

CREATE TABLE `mst_item_product_sub_category` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ItemProductCategoryCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_product_sub_category` */

insert  into `mst_item_product_sub_category`(`Code`,`Name`,`ItemProductCategoryCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('H001','Pagar','11',1,'ADMIN','2019-06-12 23:28:14','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_item_product_sub_category`(`Code`,`Name`,`ItemProductCategoryCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('H002','Atap','12',1,'ADMIN','2019-06-12 23:28:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_rating` */

DROP TABLE IF EXISTS `mst_item_rating`;

CREATE TABLE `mst_item_rating` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_rating` */

insert  into `mst_item_rating`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('RATE','someday',1,'ADMIN','2019-12-11 13:31:43','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_seal` */

DROP TABLE IF EXISTS `mst_item_seal`;

CREATE TABLE `mst_item_seal` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_seal` */

insert  into `mst_item_seal`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SEAL','hundred',1,'ADMIN','2019-12-11 13:32:04','','1900-01-01 00:00:00','','1900-01-01 00:00:00','year\r\n');

/*Table structure for table `mst_item_seat` */

DROP TABLE IF EXISTS `mst_item_seat`;

CREATE TABLE `mst_item_seat` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_seat` */

insert  into `mst_item_seat`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FIND','my feel',1,'ADMIN','2019-12-11 13:32:18','','1900-01-01 00:00:00','','1900-01-01 00:00:00','lovely\r\n');

/*Table structure for table `mst_item_seat_design` */

DROP TABLE IF EXISTS `mst_item_seat_design`;

CREATE TABLE `mst_item_seat_design` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_seat_design` */

insert  into `mst_item_seat_design`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('STH','on',1,'ADMIN','2019-12-11 13:32:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','my mind');

/*Table structure for table `mst_item_seat_insert` */

DROP TABLE IF EXISTS `mst_item_seat_insert`;

CREATE TABLE `mst_item_seat_insert` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_seat_insert` */

insert  into `mst_item_seat_insert`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('AA','batre',1,'ADMIN','2019-12-11 14:08:51','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_shaft` */

DROP TABLE IF EXISTS `mst_item_shaft`;

CREATE TABLE `mst_item_shaft` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_shaft` */

insert  into `mst_item_shaft`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SHFT00001','Shaft',1,'ADMIN','2020-03-17 23:50:39','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_size` */

DROP TABLE IF EXISTS `mst_item_size`;

CREATE TABLE `mst_item_size` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_size` */

insert  into `mst_item_size`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FEEL','even',1,'ADMIN','2019-12-11 13:33:07','','1900-01-01 00:00:00','','1900-01-01 00:00:00','hundred years');

/*Table structure for table `mst_item_spring` */

DROP TABLE IF EXISTS `mst_item_spring`;

CREATE TABLE `mst_item_spring` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_spring` */

insert  into `mst_item_spring`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SPRNG00001','Spring',1,'ADMIN','2020-03-17 23:49:42','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_stem` */

DROP TABLE IF EXISTS `mst_item_stem`;

CREATE TABLE `mst_item_stem` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_stem` */

insert  into `mst_item_stem`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ALONE','ican\'t',1,'ADMIN','2019-12-11 13:33:26','','1900-01-01 00:00:00','','1900-01-01 00:00:00','find my feel');

/*Table structure for table `mst_item_stop_pin` */

DROP TABLE IF EXISTS `mst_item_stop_pin`;

CREATE TABLE `mst_item_stop_pin` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_stop_pin` */

/*Table structure for table `mst_item_sub_category` */

DROP TABLE IF EXISTS `mst_item_sub_category`;

CREATE TABLE `mst_item_sub_category` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ItemCategoryCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_sub_category` */

insert  into `mst_item_sub_category`(`Code`,`Name`,`ItemCategoryCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('TAK','berdaya','123',1,'ADMIN','2020-01-10 14:25:31','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_item_type_design` */

DROP TABLE IF EXISTS `mst_item_type_design`;

CREATE TABLE `mst_item_type_design` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_item_type_design` */

insert  into `mst_item_type_design`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ITMTYPDSG00001','Design',1,'ADMIN','2020-03-17 23:56:02','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_job_position` */

DROP TABLE IF EXISTS `mst_job_position`;

CREATE TABLE `mst_job_position` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_job_position` */

insert  into `mst_job_position`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('IT','FAKA',1,'ADMIN','2020-01-24 14:10:51','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_journal` */

DROP TABLE IF EXISTS `mst_journal`;

CREATE TABLE `mst_journal` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_journal` */

insert  into `mst_journal`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GNR','General',1,'TANBUDI','2018-09-18 00:00:00','TANBUDI','2018-09-18 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_journal_chart_of_account` */

DROP TABLE IF EXISTS `mst_journal_chart_of_account`;

CREATE TABLE `mst_journal_chart_of_account` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `JournalCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `AutomaticJournalSetupCode` varchar(250) DEFAULT NULL,
  `AccountCode` varchar(250) DEFAULT NULL,
  `AutomaticJournalType` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `createddate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_journal_chart_of_account` */

insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/CCN001','GNR','IDR','CCN001','01-02-001-0001-MMS','Sales–CustomerCreditNote–AR','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/CCN002','GNR','IDR','CCN002','03-01-003-0005-MMS','Sales–CustomerCreditNote–VAT ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/CDN001','GNR','IDR','CDN001','01-02-001-0001-MMS','Sales–CustomerDebitNote–AR','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/CDN002','GNR','IDR','CDN002','03-01-003-0005-MMS','Sales–CustomerDebitNote-VAT','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/CDN004','GNR','IDR','CDN004','03-01-004-0002-MMS','Sales-CustomerDebitNote-DownPayment','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/DOD001','GNR','IDR','DOD001','07-01-002-0001-MMS','Sales-InvoicingItem-COGS','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/FCN001','GNR','IDR','FCN001','03-01-006-0003-MMS','Sales–FeeReceiverCreditNote–AP','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/FCN002','GNR','IDR','FCN002','01-04-001-0003-MMS','Sales–FeeReceiverCreditNote–VAT ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/FDN001','GNR','IDR','FDN001','03-01-006-0003-MMS','Sales–FeeReceiverDebitNote–AP','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/FDN002','GNR','IDR','FDN002','01-04-001-0003-MMS','Sales–FeeReceiverDebitNote–VAT ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/GRN001','GNR','IDR','GRN001','03-01-002-9999-MMS','Inventory-GRN-UnbilledAP','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/IIN001','GNR','IDR','IIN001','10-01-002-0003-MMS','Inventory–InventoryIn-Income','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/IIN002','GNR','IDR','IIN002','01-03-001-0001-MMS','Inventory–InventoryIn-Inventory','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/INVITM001','GNR','IDR','INVITM001','01-02-001-0001-MMS','Sales-InvoicingItem-AR','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/INVITM002','GNR','IDR','INVITM002','03-01-003-0005-MMS','Sales-InvoicingItem-VAT','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/INVP001','GNR','IDR','INVP001','01-02-001-0001-MMS','Sales-Invoicing-AR','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/INVP002','GNR','IDR','INVP002','03-01-003-0005-MMS','Sales-Invoice-VAT','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/IOT001','GNR','IDR','IOT001','10-01-002-0003-MMS','Inventory–InventoryOut-Expense','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/IOT002','GNR','IDR','IOT002','01-03-001-0001-MMS','Inventory–InventoryOut-Inventory','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SCN001','GNR','IDR','SCN001','03-01-002-0001-MMS','Purchase–SupplierCreditNote–AP','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SCN002','GNR','IDR','SCN002','01-04-001-0003-MMS','Purchase–SupplierCreditNote–VAT','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SDN001','GNR','IDR','SDN001','03-01-002-0001-MMS','Sales–SupplierDebitNote–AP','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SDN002','GNR','IDR','SDN002','01-04-001-0003-MMS','Sales–SupplierDebitNote–VAT ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SIN001','GNR','IDR','SIN001','03-01-002-9999-MMS','Finance–SupplierInvoice–UnBilledAccountPayable ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SIN002','GNR','IDR','SIN002','01-04-001-0003-MMS','Finance–SupplierInvoice–VAT','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SIN003','GNR','IDR','SIN003','03-01-002-0001-MMS','Finance–SupplierInvoice–AccountPayable ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SIN004','GNR','IDR','SIN004','11-01-002-0002-MMS','Finance–SupplierInvoice–Discount ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SIN007','GNR','IDR','SIN007','10-01-002-0001-MMS','Purchase-Supplier Waste-Minus','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SIN008','GNR','IDR','SIN008','03-01-002-9999-MMS','Purchase-Supplier Hutang Belum Ada Faktur','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SIN009','GNR','IDR','SIN009','03-01-002-9999-MMS','Purchase-Supplier Hutang Belum Ada Faktur','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/SIN010','GNR','IDR','SIN010','10-01-002-0001-MMS','Purchase-Supplier Waste-Plus','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/WHM-C-IN001','GNR','IDR','WHM-C-IN001','07-01-001-0003-MMS','Inventory-WHMCUSTOMERInstall–Expense','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/WHM-C-UB001','GNR','IDR','WHM-C-UB001','07-01-001-0003-MMS','Inventory–WHMCUSTOMERUsedBroken-Expense','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/WHM-C-US001','GNR','IDR','WHM-C-US001','07-01-001-0003-MMS','Inventory–WHMCUSTOMERUnInstall–Expense','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/WHM-P-IN001','GNR','IDR','WHM-P-IN001','07-01-001-0003-MMS','Inventory–WHMPOPInstall–Expense','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/WHM-P-UB001','GNR','IDR','WHM-P-UB001','07-01-001-0003-MMS','Inventory–WHMPOPUsedBroken-UnBilledAccountPayable','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/WHM-P-US001','GNR','IDR','WHM-P-US001','07-01-001-0003-MMS','Inventory–WHMPOPUnInstall–UnBilledAP','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/IDR/WHM001','GNR','IDR','WHM001','01-03-001-0001-MMS','Inventory–WHM-Expense','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/CDN004','GNR','USD','CDN004','03-01-004-0002-MMS','Sales-CustomerDebitNote-DownPayment','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/GRN001','GNR','USD','GRN001','03-01-002-9999-MMS','Inventory-GRN-UnbilledAP','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/IIN001','GNR','USD','IIN001','10-01-002-0003-MMS','Inventory–InventoryIn-Income','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/IIN002','GNR','USD','IIN002','01-03-001-0001-MMS','Inventory–InventoryIn-Inventory','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/INVP001','GNR','USD','INVP001','01-02-001-0001-MMS','Sales-Invoicing-AR','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/INVP002','GNR','USD','INVP002','03-01-003-0005-MMS','Sales-Invoice-VAT','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/IOT001','GNR','USD','IOT001','10-01-002-0003-MMS','Inventory–InventoryOut-Expense','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/IOT002','GNR','USD','IOT002','01-03-001-0001-MMS','Inventory–InventoryOut-Inventory','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/SIN001','GNR','USD','SIN001','03-01-002-9999-MMS','Finance–SupplierInvoice–UnBilledAccountPayable ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/SIN002','GNR','USD','SIN002','01-04-001-0003-MMS','Finance–SupplierInvoice–VAT','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/SIN003','GNR','USD','SIN003','03-01-002-0001-MMS','Finance–SupplierInvoice–AccountPayable ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/SIN004','GNR','USD','SIN004','11-01-002-0002-MMS','Finance–SupplierInvoice–Discount ','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/SIN007','GNR','USD','SIN007','10-01-002-0003-MMS','Purchase-Supplier Waste-Minus','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/SIN008','GNR','USD','SIN008','03-01-002-9999-MMS','Purchase-Supplier Hutang Belum Ada Faktur','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/SIN009','GNR','USD','SIN009','03-01-002-9999-MMS','Purchase-Supplier Hutang Belum Ada Faktur','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/SIN010','GNR','USD','SIN010','10-01-002-0003-MMS','Purchase-Supplier Waste-Plus','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/WHM-C-UB001','GNR','USD','WHM-C-UB001','07-01-001-0003-MMS','Inventory–WHMCUSTOMERUsedBroken-Expense','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/WHM-P-UB001','GNR','USD','WHM-P-UB001','07-01-001-0003-MMS','Inventory–WHMPOPUsedBroken-UnBilledAccountPayable','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `mst_journal_chart_of_account`(`Code`,`JournalCode`,`CurrencyCode`,`AutomaticJournalSetupCode`,`AccountCode`,`AutomaticJournalType`,`CreatedBy`,`createddate`,`UpdatedBy`,`UpdatedDate`) values ('GNR/USD/WHM001','GNR','USD','WHM001','01-03-001-0001-MMS','Inventory–WHM-Expense','','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `mst_journal_posting_type` */

DROP TABLE IF EXISTS `mst_journal_posting_type`;

CREATE TABLE `mst_journal_posting_type` (
  `AutomaticpostingType` varchar(250) NOT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `createddate` datetime DEFAULT NULL,
  `updatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`AutomaticpostingType`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_journal_posting_type` */

insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BBK','admin','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BBM','admin','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BKK','admin','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BKM','admin','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CCN','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDN','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('DOD','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FCN','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FDN','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GJM','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GRN','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('IIN','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('INV','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('INVITM','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('IOT','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SCN','admin','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SDN','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SIN','admin','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHM','admin','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHMCIN','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHMCUB','admin','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHMCUS','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHMPIN','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHMPUB','admin','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_posting_type`(`AutomaticpostingType`,`CreatedBy`,`createddate`,`updatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHMPUS','admin','1990-01-01 00:00:00','','1990-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_journal_transaction_type` */

DROP TABLE IF EXISTS `mst_journal_transaction_type`;

CREATE TABLE `mst_journal_transaction_type` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `createddate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_journal_transaction_type` */

/*Table structure for table `mst_journal_type` */

DROP TABLE IF EXISTS `mst_journal_type`;

CREATE TABLE `mst_journal_type` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `AutomaticJournalType` varchar(250) DEFAULT NULL,
  `JournalPosition` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_journal_type` */

insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CCN001','Sales–CustomerCreditNote–AR','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CCN002','Sales–CustomerCreditNote–VAT ','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDN001','Sales–CustomerDebitNote–AR','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDN002','Sales–CustomerDebitNote-VAT','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDN004','Sales-CustomerDebitNote-DownPayment','D',1,'TITO','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('DOD001','Sales-InvoicingItem-COGS','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FCN001','Sales–FeeReceiverCreditNote–AP','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FCN002','Sales–FeeReceiverCreditNote–VAT ','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FDN001','Sales–FeeReceiverDebitNote–AP','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('FDN002','Sales–FeeReceiverDebitNote–VAT ','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GRN001','Inventory-GRN-UnbilledAP','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('IIN001','Inventory–InventoryIn-Income','C',1,'TITO','2010-06-28 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('IIN002','Inventory–InventoryIn-Inventory','D',1,'TITO','2010-06-28 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('INVITM001','Sales-InvoicingItem-AR','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('INVITM002','Sales-InvoicingItem-VAT','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('INVP001','Sales-Invoicing-AR','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('INVP002','Sales-Invoice-VAT','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('IOT001','Inventory–InventoryOut-Expense','D',1,'TITO','2010-06-28 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('IOT002','Inventory–InventoryOut-Inventory','C',1,'TITO','2010-06-28 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SCN001','Purchase–SupplierCreditNote–AP','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SCN002','Purchase–SupplierCreditNote–VAT','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SDN001','Sales–SupplierDebitNote–AP','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SDN002','Sales–SupplierDebitNote–VAT ','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SIN001','Finance–SupplierInvoice–UnBilledAccountPayable ','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SIN002','Finance–SupplierInvoice–VAT','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SIN003','Finance–SupplierInvoice–AccountPayable ','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SIN004','Finance–SupplierInvoice–Discount ','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SIN007','Purchase-Supplier Waste-Minus','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SIN008','Purchase-Supplier Hutang Belum Ada Faktur','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SIN009','Purchase-Supplier Hutang Belum Ada Faktur','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SIN010','Purchase-Supplier Waste-Plus','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHM-C-IN001','Inventory-WHMCUSTOMERInstall–Expense','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHM-C-UB001','Inventory–WHMCUSTOMERUsedBroken-Expense','C',1,'TITO','2010-06-28 00:00:00','','2010-06-28 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHM-C-US001','Inventory–WHMCUSTOMERUnInstall–Expense','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHM-P-IN001','Inventory–WHMPOPInstall–Expense','D',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHM-P-UB001','Inventory–WHMPOPUsedBroken-UnBilledAccountPayable','C',1,'TITO','2010-06-28 00:00:00','','2010-06-28 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHM-P-US001','Inventory–WHMPOPUnInstall–UnBilledAP','C',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_journal_type`(`Code`,`AutomaticJournalType`,`JournalPosition`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WHM001','Inventory–WHM-Expense','D',1,'TITO','2010-06-28 00:00:00','','2010-06-28 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_line` */

DROP TABLE IF EXISTS `mst_line`;

CREATE TABLE `mst_line` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_line` */

/*Table structure for table `mst_minus_stock` */

DROP TABLE IF EXISTS `mst_minus_stock`;

CREATE TABLE `mst_minus_stock` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `MinusQuantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_minus_stock` */

/*Table structure for table `mst_part` */

DROP TABLE IF EXISTS `mst_part`;

CREATE TABLE `mst_part` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `UnitOfMeasureCode` varchar(250) DEFAULT NULL,
  `ProcessedStatus` enum('MACHINING','NON_MACHINING') DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_part` */

/*Table structure for table `mst_payment_term` */

DROP TABLE IF EXISTS `mst_payment_term`;

CREATE TABLE `mst_payment_term` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `Days` decimal(18,0) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `Createdby` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_payment_term` */

insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('-','-',0,1,'adm','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('10D','10 HARI',10,1,'ADM','2017-08-08 13:09:36','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('14D','14 Days',14,0,'adm','2016-03-14 00:00:00','ADM','2017-03-22 00:02:04','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('15D','15 Days',15,1,'DEDI','2018-01-04 11:44:05','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('20D','20 Days',20,1,'DEDI','2018-01-04 11:44:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('30D','30 Days',30,1,'adm','2016-03-14 00:00:00','adm','2016-03-14 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('31D','31 Days',31,1,'ADM','2016-08-23 00:00:00','ADM','2016-08-23 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('7D','7 DAYS',7,1,'ADM','2017-12-07 18:25:12','ADM','2017-12-07 18:25:36','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CASH','CASH',0,1,'ADM','2016-08-19 00:00:00','ADM','2016-08-19 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PT-001','Temporary',3,1,'adm','2016-04-01 00:00:00','adm','2016-04-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_payment_term`(`Code`,`Name`,`Days`,`ActiveStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PT001','Temporary',40,1,'adm','2016-06-15 00:00:00','adm','2016-06-15 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_product_type` */

DROP TABLE IF EXISTS `mst_product_type`;

CREATE TABLE `mst_product_type` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_product_type` */

insert  into `mst_product_type`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WUHAN','Hantu',1,'ADMIN','2020-01-28 11:10:06','','1900-01-01 00:00:00','','1900-01-01 00:00:00','=');

/*Table structure for table `mst_product_type_jn_line` */

DROP TABLE IF EXISTS `mst_product_type_jn_line`;

CREATE TABLE `mst_product_type_jn_line` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `ProductTypeCode` varchar(250) DEFAULT NULL,
  `LineCode` varchar(250) DEFAULT NULL,
  `Sequence` int(10) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_product_type_jn_line` */

/*Table structure for table `mst_project` */

DROP TABLE IF EXISTS `mst_project`;

CREATE TABLE `mst_project` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_project` */

insert  into `mst_project`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`InActiveDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`Remark`,`CreatedDate`) values ('MEMORIES','memory',1,'ADMIN','1900-01-01 00:00:00','','1900-01-01 00:00:00','','bringback','2019-11-25 13:58:06');

/*Table structure for table `mst_province` */

DROP TABLE IF EXISTS `mst_province`;

CREATE TABLE `mst_province` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `IslandCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_province` */

insert  into `mst_province`(`Code`,`Name`,`IslandCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('DKI','DKI Jakarta','JW',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_province`(`Code`,`Name`,`IslandCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('JW_BRT','Jawa Barat','JW',1,'ADMIN','2019-06-12 23:33:52','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_purchase_destination` */

DROP TABLE IF EXISTS `mst_purchase_destination`;

CREATE TABLE `mst_purchase_destination` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `Address` text,
  `CityCode` varchar(250) DEFAULT NULL,
  `ZipCode` varchar(250) DEFAULT NULL,
  `Phone1` varchar(250) DEFAULT NULL,
  `Phone2` varchar(250) DEFAULT NULL,
  `Fax` varchar(250) DEFAULT NULL,
  `ContactPerson` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  `ShipToStatus` tinyint(1) DEFAULT NULL,
  `BillToStatus` tinyint(1) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_purchase_destination` */

/*Table structure for table `mst_rack` */

DROP TABLE IF EXISTS `mst_rack`;

CREATE TABLE `mst_rack` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `RackTypeCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `RackCategory` enum('RACK','DOCK_IN','DOCK_DLN') DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_rack` */

insert  into `mst_rack`(`Code`,`Name`,`RackTypeCode`,`WarehouseCode`,`RackCategory`,`ActiveStatus`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`) values ('A001_DCI_001','AULLA - DOCK IN','BOOK','A001','DOCK_IN',1,'','ADMIN','2020-02-10 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00');
insert  into `mst_rack`(`Code`,`Name`,`RackTypeCode`,`WarehouseCode`,`RackCategory`,`ActiveStatus`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`) values ('A001_DLN_001','AULLA - DOCK DLN','BOOK','A001','DOCK_DLN',1,'','ADMIN','2020-02-10 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00');
insert  into `mst_rack`(`Code`,`Name`,`RackTypeCode`,`WarehouseCode`,`RackCategory`,`ActiveStatus`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`) values ('HARUS_DCI_001','W002 - DOCK IN','BOOK','HARUS','DOCK_IN',1,'','ADMIN','2020-02-03 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00');
insert  into `mst_rack`(`Code`,`Name`,`RackTypeCode`,`WarehouseCode`,`RackCategory`,`ActiveStatus`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`) values ('HARUS_DLN_001','W002 - DOCK DLN','BOOK','HARUS','DOCK_DLN',1,'','ADMIN','2020-02-03 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00');
insert  into `mst_rack`(`Code`,`Name`,`RackTypeCode`,`WarehouseCode`,`RackCategory`,`ActiveStatus`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`) values ('WR001_DCI_001','Hamzarullah - DOCK IN','BOOK','WR001','DOCK_IN',1,'','ADMIN','2020-01-23 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00');
insert  into `mst_rack`(`Code`,`Name`,`RackTypeCode`,`WarehouseCode`,`RackCategory`,`ActiveStatus`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`) values ('WR001_DLN_001','Hamzarullah - DOCK DLN','BOOK','WR001','DOCK_DLN',1,'','ADMIN','2020-01-23 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00');
insert  into `mst_rack`(`Code`,`Name`,`RackTypeCode`,`WarehouseCode`,`RackCategory`,`ActiveStatus`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`) values ('WR002_DCI_001','ULLA - DOCK IN','BOOK','WR002','DOCK_IN',1,'','ADMIN','2020-01-31 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00');
insert  into `mst_rack`(`Code`,`Name`,`RackTypeCode`,`WarehouseCode`,`RackCategory`,`ActiveStatus`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`) values ('WR002_DLN_001','ULLA - DOCK DLN','BOOK','WR002','DOCK_DLN',1,'','ADMIN','2020-01-31 00:00:00','','1900-01-01 00:00:00','','1990-01-01 00:00:00');

/*Table structure for table `mst_rack_item` */

DROP TABLE IF EXISTS `mst_rack_item`;

CREATE TABLE `mst_rack_item` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_rack_item` */

insert  into `mst_rack_item`(`Code`,`RackCode`,`ItemCode`,`Quantity`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('A001_DCI_001-BANG','A001_DCI_001',NULL,200.0000,0,'ADMIN','2020-02-10 00:00:00','ADMIN','2020-07-09 15:04:39','','1900-01-01 00:00:00','');

/*Table structure for table `mst_rack_type` */

DROP TABLE IF EXISTS `mst_rack_type`;

CREATE TABLE `mst_rack_type` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_rack_type` */

insert  into `mst_rack_type`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BOOK','buk00',1,'ADMIN','2020-01-23 15:28:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_reason` */

DROP TABLE IF EXISTS `mst_reason`;

CREATE TABLE `mst_reason` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_reason` */

insert  into `mst_reason`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('MENARILAH','Aduh',1,'ADMIN','2020-01-24 10:59:32','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_reason_jn_module` */

DROP TABLE IF EXISTS `mst_reason_jn_module`;

CREATE TABLE `mst_reason_jn_module` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `COAStatus` tinyint(1) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_reason_jn_module` */

/*Table structure for table `mst_reason_jn_module_coa` */

DROP TABLE IF EXISTS `mst_reason_jn_module_coa`;

CREATE TABLE `mst_reason_jn_module_coa` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `ReasonCode` varchar(250) DEFAULT NULL,
  `ModuleCode` varchar(250) DEFAULT NULL,
  `AssignAuthority` tinyint(1) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_reason_jn_module_coa` */

insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00001','MENARILAH','001_PUR_PURCHASE_REQUEST_NON_SALES_ORDER',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00002','MENARILAH','001_PUR_PURCHASE_REQUEST_NON_SALES_ORDER_APPROVAL',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00003','MENARILAH','001_PUR_PURCHASE_REQUEST_NON_SALES_ORDER_CLOSING',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00004','MENARILAH','002_SAL_BLANKET_ORDER',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00005','MENARILAH','002_SAL_BLANKET_ORDER_APPROVAL',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00006','MENARILAH','002_SAL_BLANKET_ORDER_CLOSING',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00007','MENARILAH','002_SAL_CONTRACT_REVIEW',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00008','MENARILAH','002_SAL_CUSTOMER_PURCHASE_ORDER',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00009','MENARILAH','002_SAL_INTERNAL_MEMO',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00010','MENARILAH','002_SAL_LIST_OF_APPLICABLE_DOCUMENT',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00011','MENARILAH','002_SAL_LIST_OF_APPLICABLE_DOCUMENT_UPLOAD',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00012','MENARILAH','002_SAL_REQUEST_FOR_QUOTATION',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00013','MENARILAH','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00014','MENARILAH','002_SAL_SALES_ORDER_BY_BLANKET_ORDER',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00015','MENARILAH','002_SAL_SALES_ORDER_BY_BLANKET_ORDER_APPROVAL',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00016','MENARILAH','002_SAL_SALES_ORDER_BY_BLANKET_ORDER_CLOSING',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00017','MENARILAH','002_SAL_SALES_ORDER_BY_BLANKET_ORDER_UNPRICE',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00018','MENARILAH','002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00019','MENARILAH','002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER_APPROVAL',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00020','MENARILAH','002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER_CLOSING',1,'01-01-001-0002-MMS','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00021','MENARILAH','002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER_UNPRICE',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00022','MENARILAH','002_SAL_SALES_QUOTATION',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00023','MENARILAH','002_SAL_SALES_QUOTATION_STATUS',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00024','MENARILAH','004_FIN_CUSTOMER_CREDIT_NOTE',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00025','MENARILAH','004_FIN_CUSTOMER_DEBIT_NOTE',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00026','MENARILAH','004_FIN_CUSTOMER_DOWN_PAYMENT',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00027','MENARILAH','004_FIN_VENDOR_CREDIT_NOTE',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00028','MENARILAH','004_FIN_VENDOR_DEBIT_NOTE',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00029','MENARILAH','004_FIN_VENDOR_DOWN_PAYMENT',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00030','MENARILAH','007_SCR_CHANGE_PASSWORD',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00031','MENARILAH','007_SCR_DATA_PROTECTION',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00032','MENARILAH','007_SCR_ROLE',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00033','MENARILAH','007_SCR_ROLE_AUTHORIZATION',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');
insert  into `mst_reason_jn_module_coa`(`Code`,`ReasonCode`,`ModuleCode`,`AssignAuthority`,`ChartOfAccountCode`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`CreatedBy`) values ('MENARILAH-00034','MENARILAH','007_SCR_USER',0,NULL,'2020-01-24 10:59:32','','1900-01-01 00:00:00','ADMIN');

/*Table structure for table `mst_reason_jn_module_detail` */

DROP TABLE IF EXISTS `mst_reason_jn_module_detail`;

CREATE TABLE `mst_reason_jn_module_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `ReasonCode` varchar(250) DEFAULT NULL,
  `ModuleCode` varchar(250) DEFAULT NULL,
  `ChartOfAccountCode` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_reason_jn_module_detail` */

/*Table structure for table `mst_religion` */

DROP TABLE IF EXISTS `mst_religion`;

CREATE TABLE `mst_religion` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_religion` */

insert  into `mst_religion`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('HND','HINDU',1,'ADMIN','2019-06-12 23:42:57','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_religion`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ISL','ISLAM',1,'ADMIN','2019-06-12 23:42:40','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_sales_person` */

DROP TABLE IF EXISTS `mst_sales_person`;

CREATE TABLE `mst_sales_person` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `EmployeeCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_sales_person` */

insert  into `mst_sales_person`(`Code`,`Name`,`EmployeeCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('S001','Salim','E001',1,'ADMIN','2019-06-12 23:44:53','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_sales_person`(`Code`,`Name`,`EmployeeCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('S002','Sandi','E001',1,'ADMIN','2019-06-12 23:48:55','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_sales_person`(`Code`,`Name`,`EmployeeCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('S003','Dylan','E001',1,'ADMIN','2019-06-12 23:49:57','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `mst_sales_person`(`Code`,`Name`,`EmployeeCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ULLA','Sales','E002',1,'ADMIN','2020-03-01 00:00:00','ADMIN','2020-08-26 16:52:42','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_search_document` */

DROP TABLE IF EXISTS `mst_search_document`;

CREATE TABLE `mst_search_document` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `BBMStatus` tinyint(1) DEFAULT NULL,
  `BBKStatus` tinyint(1) DEFAULT NULL,
  `BKMStatus` tinyint(1) DEFAULT NULL,
  `BKKStatus` tinyint(1) DEFAULT NULL,
  `GJMStatus` tinyint(1) DEFAULT NULL,
  `Createdby` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_search_document` */

insert  into `mst_search_document`(`Code`,`Name`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`GJMStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CCN','Customer Credit Note',1,1,1,1,1,'ADM',NULL,NULL,NULL,NULL,NULL,'-');
insert  into `mst_search_document`(`Code`,`Name`,`BBMStatus`,`BBKStatus`,`BKMStatus`,`BKKStatus`,`GJMStatus`,`Createdby`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CDN','Customer Debit Note',1,1,1,1,1,'ADM',NULL,NULL,NULL,NULL,NULL,'-');

/*Table structure for table `mst_server` */

DROP TABLE IF EXISTS `mst_server`;

CREATE TABLE `mst_server` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ComputerName` varchar(250) DEFAULT NULL,
  `IPAddress` varchar(250) DEFAULT NULL,
  `Brand` varchar(250) DEFAULT NULL,
  `Type` varchar(250) DEFAULT NULL,
  `RAMCapacity` decimal(18,4) DEFAULT NULL,
  `RAMUOM` varchar(250) DEFAULT NULL,
  `HardDriveCapacity` decimal(18,4) DEFAULT NULL,
  `HardDriveUOM` varchar(250) DEFAULT NULL,
  `Processor` varchar(250) DEFAULT NULL,
  `AcquisitionMonth` decimal(2,0) DEFAULT NULL,
  `AcquisitionYear` decimal(4,0) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_server` */

/*Table structure for table `mst_share_folder` */

DROP TABLE IF EXISTS `mst_share_folder`;

CREATE TABLE `mst_share_folder` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `FolderName` varchar(250) DEFAULT NULL,
  `ServerCode` varchar(250) DEFAULT NULL,
  `Login` varchar(250) DEFAULT NULL,
  `Password` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_share_folder` */

/*Table structure for table `mst_stock_opening_balance` */

DROP TABLE IF EXISTS `mst_stock_opening_balance`;

CREATE TABLE `mst_stock_opening_balance` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `PeriodMonth` decimal(2,0) DEFAULT NULL,
  `PeriodYear` decimal(4,0) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `ActualStock` decimal(18,4) DEFAULT NULL,
  `UsedStock` decimal(18,4) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_stock_opening_balance` */

/*Table structure for table `mst_term_of_delivery` */

DROP TABLE IF EXISTS `mst_term_of_delivery`;

CREATE TABLE `mst_term_of_delivery` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT '',
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT '',
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT '',
  `UpdatedDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT '',
  `InActiveBy` varchar(250) DEFAULT '',
  `InActiveDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_term_of_delivery` */

insert  into `mst_term_of_delivery`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`Remark`,`InActiveBy`,`InActiveDate`) values ('BABE','baby',1,'ADMIN','2019-12-16 10:37:50','','1900-01-01 00:00:00','','','1900-01-01 00:00:00');

/*Table structure for table `mst_unit_of_measure` */

DROP TABLE IF EXISTS `mst_unit_of_measure`;

CREATE TABLE `mst_unit_of_measure` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_unit_of_measure` */

insert  into `mst_unit_of_measure`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BTG','Batang',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_unit_of_measure`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('PCS','PIECES',1,'','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_unit_of_measure`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ST','12',1,'ADMIN','2020-01-23 14:44:03','ADMIN','2020-01-23 14:44:07','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_upload_file_location` */

DROP TABLE IF EXISTS `mst_upload_file_location`;

CREATE TABLE `mst_upload_file_location` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ShareFolderCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_upload_file_location` */

/*Table structure for table `mst_valve_type` */

DROP TABLE IF EXISTS `mst_valve_type`;

CREATE TABLE `mst_valve_type` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_valve_type` */

insert  into `mst_valve_type`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL','BALL VALVE',1,'TRK','2020-02-19 15:14:22','ADMIN','2020-03-19 14:45:36','','1900-01-01 00:00:00','-');
insert  into `mst_valve_type`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK','CHECK VALVE',1,'TRK','2020-02-19 15:15:25','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE','GATE VALVE',1,'TRK','2020-02-19 15:14:36','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GLOBE ','GLOBE VALVE',1,'TRK','2020-02-19 15:14:57','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SWING','SWING CHECK',1,'ADMIN','2020-08-12 16:28:23','ADMIN','2020-08-12 17:13:45','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_valve_type_component` */

DROP TABLE IF EXISTS `mst_valve_type_component`;

CREATE TABLE `mst_valve_type_component` (
  `SortNo` decimal(2,0) DEFAULT NULL,
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_valve_type_component` */

insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (22,'ARM','ITEM ARM',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (20,'ARMPIN','ITEM ARM PIN',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (9,'BALL','ITEM BALL\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (21,'BCKST','ITEM BACKSEAT\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (8,'BDY','ITEM BODY\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (1,'BDYDSG','BODY CONSTRUCTION',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (14,'BLT','ITEM BOLT',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (6,'BORE','ITEM BORE\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (16,'DISC','ITEM DISC\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (7,'ENDCON','ITEM END CON',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00',NULL);
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (23,'HNGPIN','ITEM HINGE PIN',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (15,'OPR','ITEM OPERATOR\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (17,'PLT','ITEM PLATES',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (5,'RTG','ITEM RATING\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (13,'SEAL','ITEM SEAL\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (18,'SHFT','ITEM SHAFT',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (4,'SIZE','ITEM SIZE\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (19,'SPRNG','ITEM SPRING',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (10,'ST','ITEM SEAT\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (3,'STDSG','ITEM SEAT DESIGN',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (11,'STINS','ITEM SEAT INSERT\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (12,'STM','ITEM STEM\r\n',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (24,'STPPIN','ITEM STOP PIN',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component`(`SortNo`,`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values (2,'TYPDSG','ITEM TYPE\r\n DESIGN',1,'TRK','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_valve_type_component_detail` */

DROP TABLE IF EXISTS `mst_valve_type_component_detail`;

CREATE TABLE `mst_valve_type_component_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `ValveTypeCode` varchar(250) DEFAULT NULL,
  `ValveTypeComponentCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_valve_type_component_detail` */

insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-BALL','BALL','BALL',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-BDYDSG','BALL','BDYDSG',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-BLT','BALL','BLT',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-BORE','BALL','BORE',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-ENDCON','BALL','ENDCON',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-OPR','BALL','OPR',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-RTG','BALL','RTG',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-SEAL','BALL','SEAL',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-SIZE','BALL','SIZE',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-ST','BALL','ST',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-STDSG','BALL','STDSG',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-STINS','BALL','STINS',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-STM','BALL','STM',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('BALL-TYPDSG','BALL','TYPDSG',1,'ADMIN','2020-03-26 17:19:33','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-ENDCON','CHECK','ENDCON',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-OPR','CHECK','OPR',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-RTG','CHECK','RTG',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-SEAL','CHECK','SEAL',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-SIZE','CHECK','SIZE',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-ST','CHECK','ST',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-STDSG','CHECK','STDSG',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-STINS','CHECK','STINS',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-STM','CHECK','STM',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('CHECK-TYPDSG','CHECK','TYPDSG',1,'DUMMY','2020-03-19 11:11:49','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-ARMPIN','GATE','ARMPIN',1,'ADMIN','2020-03-19 18:20:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-BCKST','GATE','BCKST',1,'ADMIN','2020-03-19 18:20:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-BDY','GATE','BDY',1,'DUMMY','2020-03-19 17:22:50','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-BLT','GATE','BLT',1,'ADMIN','2020-03-19 18:20:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-BORE','GATE','BORE',1,'DUMMY','2020-03-19 17:22:50','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-DISC','GATE','DISC',1,'ADMIN','2020-03-19 18:20:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-ENDCON','GATE','ENDCON',1,'DUMMY','2020-03-19 17:22:50','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-OPR','GATE','OPR',1,'ADMIN','2020-03-19 18:20:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-RTG','GATE','RTG',1,'DUMMY','2020-03-19 17:22:50','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-SIZE','GATE','SIZE',1,'DUMMY','2020-03-19 17:22:50','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-ST','GATE','ST',1,'ADMIN','2020-03-19 18:20:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-STM','GATE','STM',1,'ADMIN','2020-03-19 18:20:48','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GATE-TYPDSG','GATE','TYPDSG',1,'DUMMY','2020-03-19 17:22:50','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GLOBE-ARMPIN','GLOBE ','ARMPIN',1,'ADMIN','2020-03-19 18:23:17','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GLOBE-BDY','GLOBE ','BDY',1,'ADMIN','2020-03-19 18:23:17','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GLOBE-BDYDSG','GLOBE ','BDYDSG',1,'ADMIN','2020-03-19 18:23:17','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GLOBE-BLT','GLOBE ','BLT',1,'ADMIN','2020-03-19 18:23:17','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('GLOBE-OPR','GLOBE ','OPR',1,'ADMIN','2020-03-19 18:23:17','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SWING-BDYDSG','SWING','BDYDSG',1,'ADMIN','2020-08-12 16:29:03','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SWING-RTG','SWING','RTG',1,'ADMIN','2020-08-12 16:29:03','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SWING-SIZE','SWING','SIZE',1,'ADMIN','2020-08-12 16:29:03','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SWING-STDSG','SWING','STDSG',1,'ADMIN','2020-08-12 16:29:03','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `mst_valve_type_component_detail`(`Code`,`ValveTypeCode`,`ValveTypeComponentCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SWING-TYPDSG','SWING','TYPDSG',1,'ADMIN','2020-08-12 16:29:03','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');

/*Table structure for table `mst_vendor` */

DROP TABLE IF EXISTS `mst_vendor`;

CREATE TABLE `mst_vendor` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `Address` text,
  `CityCode` varchar(250) DEFAULT NULL,
  `ZipCode` varchar(250) DEFAULT NULL,
  `Phone1` varchar(250) DEFAULT NULL,
  `Phone2` varchar(250) DEFAULT NULL,
  `Fax` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  `VendorCategoryCode` varchar(250) DEFAULT NULL,
  `APChartOfAccountCode` varchar(250) DEFAULT NULL,
  `DefaultContactPersonCode` varchar(250) DEFAULT NULL,
  `NPWP` varchar(250) DEFAULT NULL,
  `NPWPName` varchar(250) DEFAULT NULL,
  `NPWPAddress` text,
  `NPWPCityCode` varchar(250) DEFAULT NULL,
  `NPWPZipCode` varchar(250) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `LocalImport` enum('LOCAL','IMPORT') DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_vendor` */

insert  into `mst_vendor`(`Code`,`Name`,`Address`,`CityCode`,`ZipCode`,`Phone1`,`Phone2`,`Fax`,`EmailAddress`,`VendorCategoryCode`,`APChartOfAccountCode`,`DefaultContactPersonCode`,`NPWP`,`NPWPName`,`NPWPAddress`,`NPWPCityCode`,`NPWPZipCode`,`PaymentTermCode`,`LocalImport`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedDate`,`UpdatedBy`,`InActiveBy`,`InActiveDate`,`Remark`) values ('VDR00001','ven','jak','-','-','123','123','123','13','VEND','01-01-001-0001-TRK','VDRCTC00001','123','213','123','-','-','-','IMPORT',1,'ADMIN','2020-07-16 15:05:30','2020-07-16 15:12:20','ADMIN','','1900-01-01 00:00:00','');

/*Table structure for table `mst_vendor_category` */

DROP TABLE IF EXISTS `mst_vendor_category`;

CREATE TABLE `mst_vendor_category` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_vendor_category` */

insert  into `mst_vendor_category`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('VEND','ven01',1,'ADMIN','2020-01-24 13:57:45','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');

/*Table structure for table `mst_vendor_jn_contact` */

DROP TABLE IF EXISTS `mst_vendor_jn_contact`;

CREATE TABLE `mst_vendor_jn_contact` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `VendorCode` varchar(250) DEFAULT NULL,
  `Name` varchar(250) DEFAULT NULL,
  `Phone` varchar(250) DEFAULT NULL,
  `MobileNo` varchar(250) DEFAULT NULL,
  `BirthDate` datetime DEFAULT NULL,
  `JobPositionCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_vendor_jn_contact` */

insert  into `mst_vendor_jn_contact`(`Code`,`VendorCode`,`Name`,`Phone`,`MobileNo`,`BirthDate`,`JobPositionCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('VDRCTC00001','VDR00001','Lero','0123','123','2020-04-06 00:00:00','IT',1,'ADMIN','2020-07-16 15:05:58','','1990-01-01 00:00:00','','1900-01-01 00:00:00',NULL);
insert  into `mst_vendor_jn_contact`(`Code`,`VendorCode`,`Name`,`Phone`,`MobileNo`,`BirthDate`,`JobPositionCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('VEND-001','VEND','as','123','213','2020-01-24 00:00:00','IT',1,'ADMIN','2020-01-24 14:39:03','','1990-01-01 00:00:00',NULL,NULL,NULL);

/*Table structure for table `mst_warehouse` */

DROP TABLE IF EXISTS `mst_warehouse`;

CREATE TABLE `mst_warehouse` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `Address` text,
  `Phone1` varchar(250) DEFAULT NULL,
  `Phone2` varchar(250) DEFAULT NULL,
  `ContactPerson` varchar(250) DEFAULT NULL,
  `CityCode` varchar(250) DEFAULT NULL,
  `DOCK_IN_Code` varchar(250) DEFAULT NULL,
  `DOCK_DLN_Code` varchar(250) DEFAULT NULL,
  `ZipCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `Fax` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `mst_warehouse` */

insert  into `mst_warehouse`(`Code`,`Name`,`Address`,`Phone1`,`Phone2`,`ContactPerson`,`CityCode`,`DOCK_IN_Code`,`DOCK_DLN_Code`,`ZipCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`,`Fax`,`EmailAddress`) values ('A001','AULLA','Makassar','123','-','','BDG','A001_DCI_001','A001_DLN_001','-',1,'ADMIN','2020-02-10 11:14:41','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-','-','-');
insert  into `mst_warehouse`(`Code`,`Name`,`Address`,`Phone1`,`Phone2`,`ContactPerson`,`CityCode`,`DOCK_IN_Code`,`DOCK_DLN_Code`,`ZipCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`,`Fax`,`EmailAddress`) values ('HARUS','W002','JL.Taman Kota','-','-','','BDG','HARUS_DCI_001','HARUS_DLN_001','-',1,'ADMIN','2020-02-03 16:45:56','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-','-','-');
insert  into `mst_warehouse`(`Code`,`Name`,`Address`,`Phone1`,`Phone2`,`ContactPerson`,`CityCode`,`DOCK_IN_Code`,`DOCK_DLN_Code`,`ZipCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`,`Fax`,`EmailAddress`) values ('PST','Pusat','-','0','0','-','-',NULL,NULL,'0',0,'','1900-01-01 00:00:00','TANBUDI','2018-08-06 14:15:59','','1900-01-01 00:00:00','',NULL,NULL);
insert  into `mst_warehouse`(`Code`,`Name`,`Address`,`Phone1`,`Phone2`,`ContactPerson`,`CityCode`,`DOCK_IN_Code`,`DOCK_DLN_Code`,`ZipCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`,`Fax`,`EmailAddress`) values ('WR001','Hamzarullah','ULLAHHHHH','123','123','','BDG','WR001_DCI_001','WR001_DLN_001','123',1,'ADMIN','2020-01-23 15:39:55','','1900-01-01 00:00:00','','1900-01-01 00:00:00','123','123','123');
insert  into `mst_warehouse`(`Code`,`Name`,`Address`,`Phone1`,`Phone2`,`ContactPerson`,`CityCode`,`DOCK_IN_Code`,`DOCK_DLN_Code`,`ZipCode`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`,`Fax`,`EmailAddress`) values ('WR002','ULLA','Kejahatan','213','312','','BDG','WR002_DCI_001','WR002_DLN_001','123',1,'ADMIN','2020-01-31 17:11:30','','1900-01-01 00:00:00','','1900-01-01 00:00:00','123','321','1');

/*Table structure for table `ppic_item_material_request` */

DROP TABLE IF EXISTS `ppic_item_material_request`;

CREATE TABLE `ppic_item_material_request` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `ProductionPlanningOrderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ppic_item_material_request` */

/*Table structure for table `ppic_item_material_request_item_finish_goods_detail` */

DROP TABLE IF EXISTS `ppic_item_material_request_item_finish_goods_detail`;

CREATE TABLE `ppic_item_material_request_item_finish_goods_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `DocumentSortNo` decimal(18,4) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ppic_item_material_request_item_finish_goods_detail` */

/*Table structure for table `ppic_item_material_request_item_raw_material_detail` */

DROP TABLE IF EXISTS `ppic_item_material_request_item_raw_material_detail`;

CREATE TABLE `ppic_item_material_request_item_raw_material_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `DocumentSortNo` decimal(18,4) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `PPICItemCode` varchar(250) DEFAULT NULL,
  `Tolerance` decimal(18,4) DEFAULT NULL,
  `ConversionperUnit` decimal(18,4) DEFAULT NULL,
  `EstimateBookStock` decimal(18,4) DEFAULT NULL,
  `PurchaseItemCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ppic_item_material_request_item_raw_material_detail` */

/*Table structure for table `ppic_production_planning_order` */

DROP TABLE IF EXISTS `ppic_production_planning_order`;

CREATE TABLE `ppic_production_planning_order` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `DocumentType` enum('SO','BO','IM') DEFAULT NULL,
  `DocumentCode` varchar(250) DEFAULT NULL,
  `TargetDate` datetime DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `ApprovalStatus` enum('PENDING','APPROVED','REJECTED') DEFAULT NULL,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `ApprovalRemark` text,
  `ApprovalReasonCode` varchar(250) DEFAULT NULL,
  `ClosingStatus` enum('OPEN','CLOSED') DEFAULT NULL,
  `ClosingDate` datetime DEFAULT NULL,
  `ClosingBy` varchar(250) DEFAULT NULL,
  `ClosingRemark` text,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ppic_production_planning_order` */

insert  into `ppic_production_planning_order`(`Code`,`BranchCode`,`TransactionDate`,`DocumentType`,`DocumentCode`,`TargetDate`,`CustomerCode`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalStatus`,`ApprovalBy`,`ApprovalDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ClosingStatus`,`ClosingDate`,`ClosingBy`,`ClosingRemark`) values ('B001/PPO/20070001','B001','2020-07-27 00:00:00','SO','B001/SOD-POC/20070001_REV_00','2020-07-27 00:00:00','CUS001','-','-','ADMIN','2020-07-27 11:50:55','','1900-01-01 00:00:00','APPROVED','ADMIN','2020-07-27 11:54:09','','','OPEN','1990-01-01 00:00:00','','');
insert  into `ppic_production_planning_order`(`Code`,`BranchCode`,`TransactionDate`,`DocumentType`,`DocumentCode`,`TargetDate`,`CustomerCode`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalStatus`,`ApprovalBy`,`ApprovalDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ClosingStatus`,`ClosingDate`,`ClosingBy`,`ClosingRemark`) values ('B001/PPO/20090001','B001','2020-09-16 00:00:00','SO','B001/SOD-POC/20080001_REV_00','2020-09-16 00:00:00','CUS00001','-','-','ADMIN','2020-09-16 16:37:53','','1900-01-01 00:00:00','PENDING','','1990-01-01 00:00:00','',NULL,'OPEN','1990-01-01 00:00:00','','');

/*Table structure for table `ppic_production_planning_order_item_bill_of_material` */

DROP TABLE IF EXISTS `ppic_production_planning_order_item_bill_of_material`;

CREATE TABLE `ppic_production_planning_order_item_bill_of_material` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BOMNo` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `Revision` varchar(250) DEFAULT NULL,
  `RefBOMCode` varchar(250) DEFAULT NULL,
  `ValidStatus` tinyint(1) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `HeaderCode` varchar(250) DEFAULT NULL,
  `DrawingCode` varchar(250) DEFAULT NULL,
  `Template` varchar(250) DEFAULT NULL,
  `Remark` text,
  `InternalNote` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `ApprovalStatus` enum('PENDING','APPROVED','REJECTED') DEFAULT NULL,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `ApprovalRemark` text,
  `ApprovalReasonCode` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ppic_production_planning_order_item_bill_of_material` */

/*Table structure for table `ppic_production_planning_order_item_bill_of_material_part` */

DROP TABLE IF EXISTS `ppic_production_planning_order_item_bill_of_material_part`;

CREATE TABLE `ppic_production_planning_order_item_bill_of_material_part` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SortNo` decimal(10,0) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `PartNo` varchar(250) DEFAULT NULL,
  `PartCode` varchar(250) DEFAULT NULL,
  `DrawingCode` varchar(250) DEFAULT NULL,
  `Dimension` varchar(250) DEFAULT NULL,
  `Material` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Requirement` varchar(250) DEFAULT NULL,
  `ProcessedStatus` enum('MACHINING','NON_MACHINING') DEFAULT NULL,
  `Remark` text,
  `X` varchar(250) DEFAULT NULL,
  `RevNo` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ppic_production_planning_order_item_bill_of_material_part` */

/*Table structure for table `ppic_production_planning_order_item_detail` */

DROP TABLE IF EXISTS `ppic_production_planning_order_item_detail`;

CREATE TABLE `ppic_production_planning_order_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `DocumentSortNo` decimal(18,4) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `ppic_production_planning_order_item_detail` */

insert  into `ppic_production_planning_order_item_detail`(`Code`,`HeaderCode`,`DocumentSortNo`,`DocumentDetailCode`,`ItemFinishGoodsCode`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PPO/20070001-001','B001/PPO/20070001',1.0000,'B001/SOD-POC/20070001_REV_00-001','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001',5.0000,'ADMIN','2020-07-27 11:50:55','ADMIN','2020-07-27 11:50:55');
insert  into `ppic_production_planning_order_item_detail`(`Code`,`HeaderCode`,`DocumentSortNo`,`DocumentDetailCode`,`ItemFinishGoodsCode`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PPO/20070001-002','B001/PPO/20070001',2.0000,'B001/SOD-POC/20070001_REV_00-002','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE_BORE_GANS_BALL00001_FIND_AA_ALONE_SEAL_ENAKKAN_OP',30.0000,'ADMIN','2020-07-27 11:50:56','ADMIN','2020-07-27 11:50:56');
insert  into `ppic_production_planning_order_item_detail`(`Code`,`HeaderCode`,`DocumentSortNo`,`DocumentDetailCode`,`ItemFinishGoodsCode`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PPO/20090001-001','B001/PPO/20090001',1.0000,'B001/SOD-POC/20080001_REV_00-001','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',0.0000,'ADMIN','2020-09-16 16:37:53','ADMIN','2020-09-16 16:37:53');
insert  into `ppic_production_planning_order_item_detail`(`Code`,`HeaderCode`,`DocumentSortNo`,`DocumentDetailCode`,`ItemFinishGoodsCode`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PPO/20090001-002','B001/PPO/20090001',2.0000,'B001/SOD-POC/20080001_REV_00-002','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',0.0000,'ADMIN','2020-09-16 16:37:53','ADMIN','2020-09-16 16:37:53');
insert  into `ppic_production_planning_order_item_detail`(`Code`,`HeaderCode`,`DocumentSortNo`,`DocumentDetailCode`,`ItemFinishGoodsCode`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PPO/20090001-003','B001/PPO/20090001',4.0000,'B001/SOD-POC/20080001_REV_00-004','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE_BORE_GANS_BALL00001_FIND_AA_ALONE_SEAL_ENAKKAN_OP',0.0000,'ADMIN','2020-09-16 16:37:53','ADMIN','2020-09-16 16:37:53');
insert  into `ppic_production_planning_order_item_detail`(`Code`,`HeaderCode`,`DocumentSortNo`,`DocumentDetailCode`,`ItemFinishGoodsCode`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PPO/20090001-004','B001/PPO/20090001',3.0000,'B001/SOD-POC/20080001_REV_00-003','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001',0.0000,'ADMIN','2020-09-16 16:37:53','ADMIN','2020-09-16 16:37:53');

/*Table structure for table `pur_purchase_order` */

DROP TABLE IF EXISTS `pur_purchase_order`;

CREATE TABLE `pur_purchase_order` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `DeliveryDateStart` datetime DEFAULT NULL,
  `DeliveryDateEnd` datetime DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `PenaltyStatus` tinyint(1) DEFAULT NULL,
  `PenaltyPercent` decimal(18,4) DEFAULT NULL,
  `MaximumPenaltyPercent` decimal(18,4) DEFAULT NULL,
  `BillToCode` varchar(250) DEFAULT NULL,
  `ShipToCode` varchar(250) DEFAULT NULL,
  `ExpeditionCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `DiscountChartOfAccountCode` varchar(250) DEFAULT NULL,
  `DiscountDescription` varchar(250) DEFAULT NULL,
  `TaxBaseSubTotalAmount` decimal(18,4) DEFAULT NULL,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `VATAmount` decimal(18,4) DEFAULT NULL,
  `OtherFeeAmount` decimal(18,4) DEFAULT NULL,
  `OtherFeeChartOfAccountCode` varchar(250) DEFAULT NULL,
  `OtherFeeDescription` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `ApprovalStatus` enum('PENDING','APPROVED','REJECTED') DEFAULT NULL,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `ApprovalRemark` text,
  `ApprovalReasonCode` varchar(250) DEFAULT NULL,
  `ClosingStatus` enum('OPEN','CLOSED') DEFAULT NULL,
  `ClosingDate` datetime DEFAULT NULL,
  `ClosingBy` varchar(250) DEFAULT NULL,
  `ClosingRemark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_order` */

insert  into `pur_purchase_order`(`Code`,`TransactionDate`,`BranchCode`,`DeliveryDateStart`,`DeliveryDateEnd`,`PaymentTermCode`,`CurrencyCode`,`VendorCode`,`PenaltyStatus`,`PenaltyPercent`,`MaximumPenaltyPercent`,`BillToCode`,`ShipToCode`,`ExpeditionCode`,`RefNo`,`Remark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`DiscountChartOfAccountCode`,`DiscountDescription`,`TaxBaseSubTotalAmount`,`VATPercent`,`VATAmount`,`OtherFeeAmount`,`OtherFeeChartOfAccountCode`,`OtherFeeDescription`,`GrandTotalAmount`,`ApprovalStatus`,`ApprovalBy`,`ApprovalDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ClosingStatus`,`ClosingDate`,`ClosingBy`,`ClosingRemark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090001','2020-09-11 15:15:16','B001','2020-09-11 15:12:24','2020-09-11 15:12:24','CASH','IDR','VDR00001',0,0.0000,0.0000,'WAKWAW-00001','WAKWAW-00001',NULL,'-','-',290000.0000,10.0000,29000.0000,'01-01-001-0002-TRK','ingin',261000.0000,5.0000,13050.0000,10000.0000,'01-02-001-0001-TRK','disampingnya',284050.0000,'APPROVED','ADMIN','2020-09-11 16:29:29','-','MENARILAH','OPEN','2020-09-14 09:58:30','ADMIN','','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order`(`Code`,`TransactionDate`,`BranchCode`,`DeliveryDateStart`,`DeliveryDateEnd`,`PaymentTermCode`,`CurrencyCode`,`VendorCode`,`PenaltyStatus`,`PenaltyPercent`,`MaximumPenaltyPercent`,`BillToCode`,`ShipToCode`,`ExpeditionCode`,`RefNo`,`Remark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`DiscountChartOfAccountCode`,`DiscountDescription`,`TaxBaseSubTotalAmount`,`VATPercent`,`VATAmount`,`OtherFeeAmount`,`OtherFeeChartOfAccountCode`,`OtherFeeDescription`,`GrandTotalAmount`,`ApprovalStatus`,`ApprovalBy`,`ApprovalDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ClosingStatus`,`ClosingDate`,`ClosingBy`,`ClosingRemark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002','2020-09-23 16:07:55','B001','2020-09-23 16:02:36','2020-09-23 16:02:36','10D','IDR','VDR00001',0,0.0000,0.0000,'WAKWAW-00001','WAKWAW-00001',NULL,'-','-',238000.0000,10.0000,23800.0000,'01-01-001-0001-TRK','jika',214200.0000,5.0000,10710.0000,1000.0000,'01-01-002-0002-TRK','menanti',225910.0000,'APPROVED','ADMIN','2020-09-23 16:08:56','-','MENARILAH','OPEN','1900-01-01 00:00:00','','','','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `pur_purchase_order_additional_fee` */

DROP TABLE IF EXISTS `pur_purchase_order_additional_fee`;

CREATE TABLE `pur_purchase_order_additional_fee` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `AdditionalFeeCode` varchar(250) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `UnitCode` varchar(250) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `Total` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_order_additional_fee` */

insert  into `pur_purchase_order_additional_fee`(`Code`,`HeaderCode`,`AdditionalFeeCode`,`Remark`,`Quantity`,`UnitCode`,`Price`,`Total`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090001-001','B001/POD/20090001','OPN','nonton',100.0000,'BTG',2000.0000,200000.0000,'','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order_additional_fee`(`Code`,`HeaderCode`,`AdditionalFeeCode`,`Remark`,`Quantity`,`UnitCode`,`Price`,`Total`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002-001','B001/POD/20090002','OPN','sayangi',100.0000,'BTG',200.0000,20000.0000,'','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `pur_purchase_order_detail` */

DROP TABLE IF EXISTS `pur_purchase_order_detail`;

CREATE TABLE `pur_purchase_order_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `PurchaseRequestCode` varchar(250) DEFAULT NULL,
  `PurchaseRequestDetailCode` varchar(250) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `ItemAlias` varchar(250) DEFAULT NULL,
  `Remark` text,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `BonusQuantity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `NettPrice` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `DeliveryDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_order_detail` */

insert  into `pur_purchase_order_detail`(`Code`,`HeaderCode`,`PurchaseRequestCode`,`PurchaseRequestDetailCode`,`DocumentDetailCode`,`ItemMaterialCode`,`ItemAlias`,`Remark`,`Quantity`,`BonusQuantity`,`Price`,`DiscountPercent`,`DiscountAmount`,`NettPrice`,`TotalAmount`,`DeliveryDate`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090001-001','B001/POD/20090001','B001/PRQ-NIMR/20090001','B001/PRQ-NIMR/20090001-001','','BANG','aduh','',100.0000,10.0000,1000.0000,10.0000,100.0000,900.0000,90000.0000,'1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order_detail`(`Code`,`HeaderCode`,`PurchaseRequestCode`,`PurchaseRequestDetailCode`,`DocumentDetailCode`,`ItemMaterialCode`,`ItemAlias`,`Remark`,`Quantity`,`BonusQuantity`,`Price`,`DiscountPercent`,`DiscountAmount`,`NettPrice`,`TotalAmount`,`DeliveryDate`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002-001','B001/POD/20090002','B001/PRQ-NIMR/20090001','B001/PRQ-NIMR/20090001-001','','BANG','duh','',200.0000,10.0000,1000.0000,10.0000,100.0000,900.0000,180000.0000,'1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order_detail`(`Code`,`HeaderCode`,`PurchaseRequestCode`,`PurchaseRequestDetailCode`,`DocumentDetailCode`,`ItemMaterialCode`,`ItemAlias`,`Remark`,`Quantity`,`BonusQuantity`,`Price`,`DiscountPercent`,`DiscountAmount`,`NettPrice`,`TotalAmount`,`DeliveryDate`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002-002','B001/POD/20090002','B001/PRQ-NIMR/20090002','B001/PRQ-NIMR/20090002-001','','BANG','mungkin','',200.0000,10.0000,200.0000,5.0000,10.0000,190.0000,38000.0000,'1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `pur_purchase_order_item_delivery_date` */

DROP TABLE IF EXISTS `pur_purchase_order_item_delivery_date`;

CREATE TABLE `pur_purchase_order_item_delivery_date` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `DeliveryDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_order_item_delivery_date` */

insert  into `pur_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemMaterialCode`,`Quantity`,`DeliveryDate`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090001-001','B001/POD/20090001','BANG',100.0000,'2020-09-11 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemMaterialCode`,`Quantity`,`DeliveryDate`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002-001','B001/POD/20090002','BANG',200.0000,'2020-09-23 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemMaterialCode`,`Quantity`,`DeliveryDate`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002-002','B001/POD/20090002','BANG',200.0000,'2020-09-23 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `pur_purchase_order_jn_purchase_request` */

DROP TABLE IF EXISTS `pur_purchase_order_jn_purchase_request`;

CREATE TABLE `pur_purchase_order_jn_purchase_request` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `HeaderCode` varchar(250) DEFAULT NULL,
  `PurchaseRequestCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_order_jn_purchase_request` */

insert  into `pur_purchase_order_jn_purchase_request`(`Code`,`BranchCode`,`HeaderCode`,`PurchaseRequestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090001-001','B001','B001/POD/20090001','B001/PRQ-NIMR/20090001','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order_jn_purchase_request`(`Code`,`BranchCode`,`HeaderCode`,`PurchaseRequestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002-001','B001','B001/POD/20090002','B001/PRQ-NIMR/20090001','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order_jn_purchase_request`(`Code`,`BranchCode`,`HeaderCode`,`PurchaseRequestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002-002','B001','B001/POD/20090002','B001/PRQ-NIMR/20090002','','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `pur_purchase_order_sub_item_detail` */

DROP TABLE IF EXISTS `pur_purchase_order_sub_item_detail`;

CREATE TABLE `pur_purchase_order_sub_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `ItemMaterialRequestCode` varchar(250) DEFAULT NULL,
  `PartCode` varchar(250) DEFAULT NULL,
  `PurchaseRequestCode` varchar(250) DEFAULT NULL,
  `PurchaseOrderItemMaterialCode` varchar(250) DEFAULT NULL,
  `DrawingCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_order_sub_item_detail` */

insert  into `pur_purchase_order_sub_item_detail`(`Code`,`HeaderCode`,`DocumentDetailCode`,`ItemMaterialRequestCode`,`PartCode`,`PurchaseRequestCode`,`PurchaseOrderItemMaterialCode`,`DrawingCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090001-001','B001/POD/20090001','','','','B001/PRQ-NIMR/20090001-001','BANG',NULL,'','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order_sub_item_detail`(`Code`,`HeaderCode`,`DocumentDetailCode`,`ItemMaterialRequestCode`,`PartCode`,`PurchaseRequestCode`,`PurchaseOrderItemMaterialCode`,`DrawingCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002-001','B001/POD/20090002','','','','B001/PRQ-NIMR/20090001-001','BANG','','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `pur_purchase_order_sub_item_detail`(`Code`,`HeaderCode`,`DocumentDetailCode`,`ItemMaterialRequestCode`,`PartCode`,`PurchaseRequestCode`,`PurchaseOrderItemMaterialCode`,`DrawingCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/POD/20090002-002','B001/POD/20090002','','','','B001/PRQ-NIMR/20090002-001','BANG','','','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `pur_purchase_request_by_imr` */

DROP TABLE IF EXISTS `pur_purchase_request_by_imr`;

CREATE TABLE `pur_purchase_request_by_imr` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `DivisionCode` varchar(250) DEFAULT NULL,
  `RequestBy` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `ApprovalStatus` enum('PENDING','APPROVED','REJECTED') DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `ApprovalReasonCode` varchar(250) DEFAULT NULL,
  `ApprovalRemark` text,
  `ClosingStatus` enum('OPEN','CLOSED') DEFAULT NULL,
  `ClosingDate` datetime DEFAULT NULL,
  `ClosingBy` varchar(250) DEFAULT NULL,
  `ClosingReasonCode` varchar(250) DEFAULT NULL,
  `ClosingRemark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_request_by_imr` */

/*Table structure for table `pur_purchase_request_by_imr_detail` */

DROP TABLE IF EXISTS `pur_purchase_request_by_imr_detail`;

CREATE TABLE `pur_purchase_request_by_imr_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `DocumentDetailCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_request_by_imr_detail` */

/*Table structure for table `pur_purchase_request_by_imr_jn_item_material_request` */

DROP TABLE IF EXISTS `pur_purchase_request_by_imr_jn_item_material_request`;

CREATE TABLE `pur_purchase_request_by_imr_jn_item_material_request` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemMaterialRequestCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_request_by_imr_jn_item_material_request` */

/*Table structure for table `pur_purchase_request_non_imr` */

DROP TABLE IF EXISTS `pur_purchase_request_non_imr`;

CREATE TABLE `pur_purchase_request_non_imr` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `DivisionCode` varchar(250) DEFAULT NULL,
  `RequestBy` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `ApprovalStatus` enum('PENDING','APPROVED','REJECTED') DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `ClosingReasonCode` varchar(250) DEFAULT NULL,
  `ClosingRemark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `ApprovalRemark` text,
  `ApprovalReasonCode` varchar(250) DEFAULT NULL,
  `ClosingStatus` enum('OPEN','CLOSED') DEFAULT NULL,
  `ClosingDate` datetime DEFAULT NULL,
  `ClosingBy` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_request_non_imr` */

insert  into `pur_purchase_request_non_imr`(`Code`,`TransactionDate`,`BranchCode`,`DivisionCode`,`RequestBy`,`RefNo`,`Remark`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingReasonCode`,`ClosingRemark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('B001/PRQ-NIMR/20090001','2020-09-11 13:31:30','B001','','high ','hopes','didint know how','PENDING','1900-01-01 00:00:00','',NULL,'','ADMIN','2020-09-11 13:31:30','','1900-01-01 00:00:00','',NULL,'OPEN','1900-01-01 00:00:00','');
insert  into `pur_purchase_request_non_imr`(`Code`,`TransactionDate`,`BranchCode`,`DivisionCode`,`RequestBy`,`RefNo`,`Remark`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingReasonCode`,`ClosingRemark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('B001/PRQ-NIMR/20090002','2020-09-11 13:32:07','B001','','be there','one','in a million','PENDING','1900-01-01 00:00:00','',NULL,'','ADMIN','2020-09-11 13:32:07','','1900-01-01 00:00:00','',NULL,'OPEN','1900-01-01 00:00:00','');
insert  into `pur_purchase_request_non_imr`(`Code`,`TransactionDate`,`BranchCode`,`DivisionCode`,`RequestBy`,`RefNo`,`Remark`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingReasonCode`,`ClosingRemark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('B001/PRQ-NIMR/20100001','2020-10-05 10:43:46','B001',NULL,'menepi','mencintai dalam sepi','buahaha','APPROVED','2020-10-05 10:54:50','ADMIN',NULL,'','ADMIN','2020-10-05 10:43:46','','1900-01-01 00:00:00','like we were before','MENARILAH','OPEN','1900-01-01 00:00:00','');

/*Table structure for table `pur_purchase_request_non_imr_detail` */

DROP TABLE IF EXISTS `pur_purchase_request_non_imr_detail`;

CREATE TABLE `pur_purchase_request_non_imr_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemMaterialCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_request_non_imr_detail` */

insert  into `pur_purchase_request_non_imr_detail`(`Code`,`HeaderCode`,`ItemMaterialCode`,`Quantity`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PRQ-NIMR/20090001-001','B001/PRQ-NIMR/20090001','BANG',5.0000,'had to have','ADMIN','2020-09-11 13:31:30','','1900-01-01 00:00:00');
insert  into `pur_purchase_request_non_imr_detail`(`Code`,`HeaderCode`,`ItemMaterialCode`,`Quantity`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PRQ-NIMR/20090002-001','B001/PRQ-NIMR/20090002','BANG',4.0000,'boys','ADMIN','2020-09-11 13:32:07','','1900-01-01 00:00:00');
insert  into `pur_purchase_request_non_imr_detail`(`Code`,`HeaderCode`,`ItemMaterialCode`,`Quantity`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PRQ-NIMR/20100001-001','B001/PRQ-NIMR/20100001','ITMMTR00001',10.0000,'guton','ADMIN','2020-10-05 10:54:50','','1900-01-01 00:00:00');

/*Table structure for table `pur_purchase_return` */

DROP TABLE IF EXISTS `pur_purchase_return`;

CREATE TABLE `pur_purchase_return` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `ExchangeRate` decimal(18,4) DEFAULT NULL,
  `TaxInvoiceNo` varchar(250) DEFAULT NULL,
  `TaxInvoiceDate` datetime DEFAULT NULL,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `Remark` text,
  `VendorInvoiceCode` varchar(250) DEFAULT NULL,
  `VendorCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `DiscountChartOfAccountCode` varchar(250) DEFAULT NULL,
  `DiscountDescription` varchar(250) DEFAULT NULL,
  `TaxBaseSubTotalAmount` decimal(18,4) DEFAULT NULL,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `VATAmount` decimal(18,4) DEFAULT NULL,
  `OtherFeeAmount` decimal(18,4) DEFAULT NULL,
  `OtherFeeChartOfAccountCode` varchar(250) DEFAULT NULL,
  `OtherFeeDescription` varchar(250) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PaidAmount` decimal(18,4) DEFAULT NULL,
  `SettlementDate` datetime DEFAULT NULL,
  `SettlementDocumentNo` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_return` */

/*Table structure for table `pur_purchase_return_item_detail` */

DROP TABLE IF EXISTS `pur_purchase_return_item_detail`;

CREATE TABLE `pur_purchase_return_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `pur_purchase_return_item_detail` */

/*Table structure for table `sal_contract_review` */

DROP TABLE IF EXISTS `sal_contract_review`;

CREATE TABLE `sal_contract_review` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `TransactionDate` datetime DEFAULT NULL,
  `CustomerPurchaseOrderCode` varchar(250) DEFAULT NULL,
  `DeliveryPoint` text,
  `DeliveryTime` text,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `SFS_SparepartCommissioningStatus` enum('REQUIRED','NOT_REQUIRED') DEFAULT NULL,
  `SFS_SparepartCommissioningFilePath` varchar(250) DEFAULT NULL,
  `SFS_2YearSparepartStatus` enum('REQUIRED','NOT_REQUIRED') DEFAULT NULL,
  `SFS_2YearSparepartFilePath` varchar(250) DEFAULT NULL,
  `SFS_SpecialToolsStatus` enum('REQUIRED','NOT_REQUIRED') DEFAULT NULL,
  `SFS_SpecialToolsStatusFilePath` varchar(250) DEFAULT NULL,
  `SFS_PackingStatus` enum('REQUIRED','NOT_REQUIRED') DEFAULT NULL,
  `SFS_PaintingStatus` enum('REQUIRED','NOT_REQUIRED','OTHER') DEFAULT NULL,
  `SFS_PaintingSpec` varchar(250) DEFAULT NULL,
  `SFS_Note` varchar(250) DEFAULT NULL,
  `DCAS_PressureTestHydroStatus` enum('REQUIRED','NOT_REQUIRED','OTHER') DEFAULT NULL,
  `DCAS_PressureTestHydroStatusRemark` varchar(250) DEFAULT NULL,
  `DCAS_PressureTestGasStatus` enum('REQUIRED','NOT_REQUIRED','OTHER') DEFAULT NULL,
  `DCAS_PressureTestGasStatusRemark` varchar(250) DEFAULT NULL,
  `DCAS_PMIStatus` enum('REQUIRED','NOT_REQUIRED','OTHER') DEFAULT NULL,
  `DCAS_PMIStatusRemark` varchar(250) DEFAULT NULL,
  `DCAS_WitnessStatus` enum('REQUIRED','NOT_REQUIRED','AS_PER_APPROVED_ITP') DEFAULT NULL,
  `DCAS_WitnessStatusRemark` varchar(250) DEFAULT NULL,
  `DCAS_HyperbaricTestStatus` enum('REQUIRED','NOT_REQUIRED','OTHER') DEFAULT NULL,
  `DCAS_HyperbaricTestStatusRemark` varchar(250) DEFAULT NULL,
  `DCAS_AntiStaticTestStatus` enum('REQUIRED','NOT_REQUIRED','OTHER') DEFAULT NULL,
  `DCAS_AntiStaticTestStatusRemark` varchar(250) DEFAULT NULL,
  `DCAS_TorqueTestStatus` enum('REQUIRED','NOT_REQUIRED','OTHER') DEFAULT NULL,
  `DCAS_TorqueTestStatusRemark` varchar(250) DEFAULT NULL,
  `DCAS_DIB_DBBTestStatus` enum('REQUIRED','NOT_REQUIRED','OTHER') DEFAULT NULL,
  `DCAS_DIB_DBBTestStatusRemark` varchar(250) DEFAULT NULL,
  `CAD_PressureContainingPartsStatus` enum('TYPE_3.2','TYPE_3.1','OTHER') DEFAULT NULL,
  `CAD_PressureContainingPartsRemark` varchar(250) DEFAULT NULL,
  `CAD_PressureControllingPartsStatus` enum('TYPE_3.2','TYPE_3.1','TYPE_2.2','OTHER') DEFAULT NULL,
  `CAD_PressureControllingPartsRemark` varchar(250) DEFAULT NULL,
  `CAD_NonPressureControllingPartsStatus` enum('TYPE_2.2','TYPE_2.1','OTHER') DEFAULT NULL,
  `CAD_NonPressureControllingPartsRemark` varchar(250) DEFAULT NULL,
  `CAD_Actuator` varchar(250) DEFAULT NULL,
  `CAD_Note1` varchar(250) DEFAULT NULL,
  `CAD_Note2` varchar(250) DEFAULT NULL,
  `CAD_DocumentationForApprovalNote` varchar(250) DEFAULT NULL,
  `TN_ActuatorStatus` enum('YES','NO') DEFAULT NULL,
  `TN_BrandCode` varchar(250) DEFAULT NULL,
  `TN_LimitationOriginStatus` enum('YES','NO') DEFAULT NULL,
  `TN_LimitationOriginPath` varchar(250) DEFAULT NULL,
  `TN_LimitationOriginRemark` varchar(250) DEFAULT NULL,
  `TN_ApprovalManufacturedListStatus` enum('YES','NO') DEFAULT NULL,
  `TN_ApprovalManufacturedListPath` varchar(250) DEFAULT NULL,
  `TN_ApprovalManufacturedListRemark` varchar(250) DEFAULT NULL,
  `TN_BOM` decimal(18,4) DEFAULT NULL,
  `TN_PR` decimal(18,4) DEFAULT NULL,
  `TN_POAndArrivalMat` decimal(18,4) DEFAULT NULL,
  `TN_MatchAssTest` decimal(18,4) DEFAULT NULL,
  `TN_Painting` decimal(18,4) DEFAULT NULL,
  `TN_PackingAndDocumentation` decimal(18,4) DEFAULT NULL,
  `TN_EstimationIssueDocumentsApproval` decimal(18,4) DEFAULT NULL,
  `TN_Note1` varchar(250) DEFAULT NULL,
  `TN_Note2` varchar(250) DEFAULT NULL,
  `TN_Note3` varchar(250) DEFAULT NULL,
  `CN_Note1` varchar(250) DEFAULT NULL,
  `CN_Note2` varchar(250) DEFAULT NULL,
  `CN_Note3` varchar(250) DEFAULT NULL,
  `Conclusion1` varchar(250) DEFAULT NULL,
  `Conclusion2` varchar(250) DEFAULT NULL,
  `Conclusion3` varchar(250) DEFAULT NULL,
  `Conclusion4` varchar(250) DEFAULT NULL,
  `Conclusion5` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review` */

insert  into `sal_contract_review`(`Code`,`TransactionDate`,`CustomerPurchaseOrderCode`,`DeliveryPoint`,`DeliveryTime`,`RefNo`,`Remark`,`SFS_SparepartCommissioningStatus`,`SFS_SparepartCommissioningFilePath`,`SFS_2YearSparepartStatus`,`SFS_2YearSparepartFilePath`,`SFS_SpecialToolsStatus`,`SFS_SpecialToolsStatusFilePath`,`SFS_PackingStatus`,`SFS_PaintingStatus`,`SFS_PaintingSpec`,`SFS_Note`,`DCAS_PressureTestHydroStatus`,`DCAS_PressureTestHydroStatusRemark`,`DCAS_PressureTestGasStatus`,`DCAS_PressureTestGasStatusRemark`,`DCAS_PMIStatus`,`DCAS_PMIStatusRemark`,`DCAS_WitnessStatus`,`DCAS_WitnessStatusRemark`,`DCAS_HyperbaricTestStatus`,`DCAS_HyperbaricTestStatusRemark`,`DCAS_AntiStaticTestStatus`,`DCAS_AntiStaticTestStatusRemark`,`DCAS_TorqueTestStatus`,`DCAS_TorqueTestStatusRemark`,`DCAS_DIB_DBBTestStatus`,`DCAS_DIB_DBBTestStatusRemark`,`CAD_PressureContainingPartsStatus`,`CAD_PressureContainingPartsRemark`,`CAD_PressureControllingPartsStatus`,`CAD_PressureControllingPartsRemark`,`CAD_NonPressureControllingPartsStatus`,`CAD_NonPressureControllingPartsRemark`,`CAD_Actuator`,`CAD_Note1`,`CAD_Note2`,`CAD_DocumentationForApprovalNote`,`TN_ActuatorStatus`,`TN_BrandCode`,`TN_LimitationOriginStatus`,`TN_LimitationOriginPath`,`TN_LimitationOriginRemark`,`TN_ApprovalManufacturedListStatus`,`TN_ApprovalManufacturedListPath`,`TN_ApprovalManufacturedListRemark`,`TN_BOM`,`TN_PR`,`TN_POAndArrivalMat`,`TN_MatchAssTest`,`TN_Painting`,`TN_PackingAndDocumentation`,`TN_EstimationIssueDocumentsApproval`,`TN_Note1`,`TN_Note2`,`TN_Note3`,`CN_Note1`,`CN_Note2`,`CN_Note3`,`Conclusion1`,`Conclusion2`,`Conclusion3`,`Conclusion4`,`Conclusion5`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001','2020-03-13 15:01:50','B001/PCO/20030001_REV_00','-','-','-','-','REQUIRED','B001/CTR-REV/20030001SPC.txt','NOT_REQUIRED','B001/CTR-REV/20030001SFS.txt','REQUIRED','B001/CTR-REV/20030001STS.docx','NOT_REQUIRED','REQUIRED','-','-','REQUIRED','-','NOT_REQUIRED','back','OTHER','street','REQUIRED','boys','NOT_REQUIRED','sah','OTHER','dah','NOT_REQUIRED','sae','OTHER','ae','TYPE_3.2','where','TYPE_2.2','are ','TYPE_2.1','u','from','wah','duh','-','YES','BS-001','YES','B001/CTR-REV/20030001TLO.png','-','YES','B001/CTR-REV/20030001TML.png','-',10.0000,20.0000,30.0000,540.0000,50.0000,60.0000,70.0000,'23','45','56','-','-','-','as','u','love','me','buahaha','ADMIN','2020-03-13 15:01:53','','1990-01-01 00:00:00');
insert  into `sal_contract_review`(`Code`,`TransactionDate`,`CustomerPurchaseOrderCode`,`DeliveryPoint`,`DeliveryTime`,`RefNo`,`Remark`,`SFS_SparepartCommissioningStatus`,`SFS_SparepartCommissioningFilePath`,`SFS_2YearSparepartStatus`,`SFS_2YearSparepartFilePath`,`SFS_SpecialToolsStatus`,`SFS_SpecialToolsStatusFilePath`,`SFS_PackingStatus`,`SFS_PaintingStatus`,`SFS_PaintingSpec`,`SFS_Note`,`DCAS_PressureTestHydroStatus`,`DCAS_PressureTestHydroStatusRemark`,`DCAS_PressureTestGasStatus`,`DCAS_PressureTestGasStatusRemark`,`DCAS_PMIStatus`,`DCAS_PMIStatusRemark`,`DCAS_WitnessStatus`,`DCAS_WitnessStatusRemark`,`DCAS_HyperbaricTestStatus`,`DCAS_HyperbaricTestStatusRemark`,`DCAS_AntiStaticTestStatus`,`DCAS_AntiStaticTestStatusRemark`,`DCAS_TorqueTestStatus`,`DCAS_TorqueTestStatusRemark`,`DCAS_DIB_DBBTestStatus`,`DCAS_DIB_DBBTestStatusRemark`,`CAD_PressureContainingPartsStatus`,`CAD_PressureContainingPartsRemark`,`CAD_PressureControllingPartsStatus`,`CAD_PressureControllingPartsRemark`,`CAD_NonPressureControllingPartsStatus`,`CAD_NonPressureControllingPartsRemark`,`CAD_Actuator`,`CAD_Note1`,`CAD_Note2`,`CAD_DocumentationForApprovalNote`,`TN_ActuatorStatus`,`TN_BrandCode`,`TN_LimitationOriginStatus`,`TN_LimitationOriginPath`,`TN_LimitationOriginRemark`,`TN_ApprovalManufacturedListStatus`,`TN_ApprovalManufacturedListPath`,`TN_ApprovalManufacturedListRemark`,`TN_BOM`,`TN_PR`,`TN_POAndArrivalMat`,`TN_MatchAssTest`,`TN_Painting`,`TN_PackingAndDocumentation`,`TN_EstimationIssueDocumentsApproval`,`TN_Note1`,`TN_Note2`,`TN_Note3`,`CN_Note1`,`CN_Note2`,`CN_Note3`,`Conclusion1`,`Conclusion2`,`Conclusion3`,`Conclusion4`,`Conclusion5`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001','2020-08-12 15:29:53','B001/PCO/20080001_REV_00','-','-','-','-','REQUIRED','','NOT_REQUIRED','','REQUIRED','','NOT_REQUIRED','REQUIRED','-','-','NOT_REQUIRED','abc','REQUIRED','def','OTHER','ghi','AS_PER_APPROVED_ITP','jkl','REQUIRED','mn','NOT_REQUIRED','opq','OTHER','rst','REQUIRED','uvwx','TYPE_3.2','yz','TYPE_3.1','abc','OTHER','def','ghi','jkl','mno','noted','NO','BS-001','YES','','-','NO','','-',10.0000,10.0000,10.0000,10.0000,10.0000,10.0000,10.0000,'-','-','-','a','b','c','d','e','f','g','h','ADMIN','2020-08-12 15:29:53','','1990-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_cad_document_for_approval` */

DROP TABLE IF EXISTS `sal_contract_review_jn_cad_document_for_approval`;

CREATE TABLE `sal_contract_review_jn_cad_document_for_approval` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `DocumentTypeCode` varchar(250) DEFAULT NULL,
  `CheckListStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_cad_document_for_approval` */

insert  into `sal_contract_review_jn_cad_document_for_approval`(`Code`,`HeaderCode`,`DocumentTypeCode`,`CheckListStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','ONE',NULL,'ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_cad_document_for_approval`(`Code`,`HeaderCode`,`DocumentTypeCode`,`CheckListStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','ONE',NULL,'ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_dcas_design` */

DROP TABLE IF EXISTS `sal_contract_review_jn_dcas_design`;

CREATE TABLE `sal_contract_review_jn_dcas_design` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `DesignCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_dcas_design` */

insert  into `sal_contract_review_jn_dcas_design`(`Code`,`HeaderCode`,`DesignCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','MAROON5','ADMIN','2020-03-13 15:01:56','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_dcas_design`(`Code`,`HeaderCode`,`DesignCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','MAROON5','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_dcas_fire_safe_by_design` */

DROP TABLE IF EXISTS `sal_contract_review_jn_dcas_fire_safe_by_design`;

CREATE TABLE `sal_contract_review_jn_dcas_fire_safe_by_design` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `FiresafeByDesignCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_dcas_fire_safe_by_design` */

insert  into `sal_contract_review_jn_dcas_fire_safe_by_design`(`Code`,`HeaderCode`,`FiresafeByDesignCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','CINTA','ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_dcas_fire_safe_by_design`(`Code`,`HeaderCode`,`FiresafeByDesignCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','CINTA','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_dcas_hydro_test` */

DROP TABLE IF EXISTS `sal_contract_review_jn_dcas_hydro_test`;

CREATE TABLE `sal_contract_review_jn_dcas_hydro_test` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `HydroTestCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_dcas_hydro_test` */

insert  into `sal_contract_review_jn_dcas_hydro_test`(`Code`,`HeaderCode`,`HydroTestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','UNKNOWN','ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_dcas_hydro_test`(`Code`,`HeaderCode`,`HydroTestCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','UNKNOWN','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_dcas_legal_requirements` */

DROP TABLE IF EXISTS `sal_contract_review_jn_dcas_legal_requirements`;

CREATE TABLE `sal_contract_review_jn_dcas_legal_requirements` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `LegalRequirementsCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_dcas_legal_requirements` */

insert  into `sal_contract_review_jn_dcas_legal_requirements`(`Code`,`HeaderCode`,`LegalRequirementsCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','QING FEI DE YI','ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_dcas_legal_requirements`(`Code`,`HeaderCode`,`LegalRequirementsCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','QING FEI DE YI','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_dcas_marking` */

DROP TABLE IF EXISTS `sal_contract_review_jn_dcas_marking`;

CREATE TABLE `sal_contract_review_jn_dcas_marking` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `MarkingCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_dcas_marking` */

insert  into `sal_contract_review_jn_dcas_marking`(`Code`,`HeaderCode`,`MarkingCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','MARKING','ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_dcas_marking`(`Code`,`HeaderCode`,`MarkingCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','MARKING','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_dcas_nde` */

DROP TABLE IF EXISTS `sal_contract_review_jn_dcas_nde`;

CREATE TABLE `sal_contract_review_jn_dcas_nde` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `NDECode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_dcas_nde` */

insert  into `sal_contract_review_jn_dcas_nde`(`Code`,`HeaderCode`,`NDECode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','NDE','ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_dcas_nde`(`Code`,`HeaderCode`,`NDECode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','NDE','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_dcas_testing` */

DROP TABLE IF EXISTS `sal_contract_review_jn_dcas_testing`;

CREATE TABLE `sal_contract_review_jn_dcas_testing` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `TestingCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_dcas_testing` */

insert  into `sal_contract_review_jn_dcas_testing`(`Code`,`HeaderCode`,`TestingCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','TRA','ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_dcas_testing`(`Code`,`HeaderCode`,`TestingCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','TRA','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_dcas_visual_examination` */

DROP TABLE IF EXISTS `sal_contract_review_jn_dcas_visual_examination`;

CREATE TABLE `sal_contract_review_jn_dcas_visual_examination` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `VisualExaminationCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_dcas_visual_examination` */

insert  into `sal_contract_review_jn_dcas_visual_examination`(`Code`,`HeaderCode`,`VisualExaminationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','IKB','ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_dcas_visual_examination`(`Code`,`HeaderCode`,`VisualExaminationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','IKB','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_quotation` */

DROP TABLE IF EXISTS `sal_contract_review_jn_quotation`;

CREATE TABLE `sal_contract_review_jn_quotation` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_quotation` */

insert  into `sal_contract_review_jn_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','0001/Q/2020_REV_00','ADMIN','2020-03-13 15:01:56','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-002','B001/CTR-REV/20030001','0002/Q/2020_REV_00','ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','0001/Q/2020_REV_00','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_contract_review_jn_sfs_valve_type` */

DROP TABLE IF EXISTS `sal_contract_review_jn_sfs_valve_type`;

CREATE TABLE `sal_contract_review_jn_sfs_valve_type` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ValveTypeCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_contract_review_jn_sfs_valve_type` */

insert  into `sal_contract_review_jn_sfs_valve_type`(`Code`,`HeaderCode`,`ValveTypeCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20030001-001','B001/CTR-REV/20030001','VALVE','ADMIN','2020-03-13 15:01:57','','1900-01-01 00:00:00');
insert  into `sal_contract_review_jn_sfs_valve_type`(`Code`,`HeaderCode`,`ValveTypeCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/CTR-REV/20080001-001','B001/CTR-REV/20080001','BALL','ADMIN','2020-08-12 15:29:53','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_blanket_order` */

DROP TABLE IF EXISTS `sal_customer_blanket_order`;

CREATE TABLE `sal_customer_blanket_order` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CUSTBONo` varchar(250) DEFAULT NULL,
  `Revision` char(2) DEFAULT NULL,
  `RefCUSTBOCode` varchar(250) DEFAULT NULL,
  `ValidStatus` tinyint(4) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `CustomerPurchaseOrderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `RequestDeliveryDate` datetime DEFAULT NULL,
  `ExpiredDate` datetime DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `EndUserCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `SalesPersonCode` varchar(250) DEFAULT NULL,
  `ProjectCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `RevisionRemark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `TaxBaseAmount` decimal(18,4) DEFAULT NULL,
  `Vatpercent` decimal(18,4) DEFAULT NULL,
  `Vatamount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `ClosingStatus` enum('OPEN','CLOSED') DEFAULT NULL,
  `ClosingDate` datetime DEFAULT NULL,
  `ClosingBy` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_blanket_order` */

insert  into `sal_customer_blanket_order`(`Code`,`CUSTBONo`,`Revision`,`RefCUSTBOCode`,`ValidStatus`,`TransactionDate`,`CustomerPurchaseOrderCode`,`BranchCode`,`RequestDeliveryDate`,`ExpiredDate`,`CustomerCode`,`EndUserCode`,`CurrencyCode`,`SalesPersonCode`,`ProjectCode`,`RefNo`,`Remark`,`RevisionRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`TaxBaseAmount`,`Vatpercent`,`Vatamount`,`GrandTotalAmount`,`ClosingStatus`,`ClosingDate`,`ClosingBy`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/BOD-POC/20080001_REV_00','B001/BOD-POC/20080001','00','',1,'2020-08-18 13:55:39','B001/PCO/20080002_REV_00','B001','2020-08-18 13:55:39','2020-08-18 13:55:39','CUS00002','WAKWAW','IDR','S002',NULL,'-','-','',10004000.0000,20.0000,2000800.0000,8013200.0000,5.0000,400660.0000,8413860.0000,'CLOSED','2020-08-19 10:34:11','ADMIN','ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_blanket_order_additional_fee` */

DROP TABLE IF EXISTS `sal_customer_blanket_order_additional_fee`;

CREATE TABLE `sal_customer_blanket_order_additional_fee` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `AdditionalFeeCode` varchar(250) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `UnitCode` varchar(250) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `Total` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_blanket_order_additional_fee` */

insert  into `sal_customer_blanket_order_additional_fee`(`Code`,`HeaderCode`,`AdditionalFeeCode`,`Remark`,`Quantity`,`UnitCode`,`Price`,`Total`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/BOD-POC/20080001_REV_00-001','B001/BOD-POC/20080001_REV_00','OPN','Oalah',100.0000,'BTG',100.0000,10000.0000,'ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_blanket_order_item_delivery_date` */

DROP TABLE IF EXISTS `sal_customer_blanket_order_item_delivery_date`;

CREATE TABLE `sal_customer_blanket_order_item_delivery_date` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `DeliveryDate` datetime DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_blanket_order_item_delivery_date` */

insert  into `sal_customer_blanket_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/BOD-POC/20080001_REV_00-001','B001/BOD-POC/20080001_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',1000.0000,'2020-08-18 00:00:00','0002/Q/2020_REV_00','ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');
insert  into `sal_customer_blanket_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/BOD-POC/20080001_REV_00-002','B001/BOD-POC/20080001_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',20.0000,'2020-08-18 00:00:00','0002/Q/2020_REV_00','ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_blanket_order_item_detail` */

DROP TABLE IF EXISTS `sal_customer_blanket_order_item_detail`;

CREATE TABLE `sal_customer_blanket_order_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `SalesQuotationDetailCode` varchar(250) DEFAULT NULL,
  `ItemAlias` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CustomerPurchaseOrderSortNo` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_blanket_order_item_detail` */

insert  into `sal_customer_blanket_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemAlias`,`ItemFinishGoodsCode`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/BOD-POC/20080001_REV_00-001','B001/BOD-POC/20080001_REV_00','0002/Q/2020_REV_00','0002/Q/2020_REV_00-001','kita','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',1000.0000,1.0000,'ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');
insert  into `sal_customer_blanket_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemAlias`,`ItemFinishGoodsCode`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/BOD-POC/20080001_REV_00-002','B001/BOD-POC/20080001_REV_00','0002/Q/2020_REV_00','0002/Q/2020_REV_00-002','oalah','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',20.0000,2.0000,'ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_blanket_order_jn_sales_quotation` */

DROP TABLE IF EXISTS `sal_customer_blanket_order_jn_sales_quotation`;

CREATE TABLE `sal_customer_blanket_order_jn_sales_quotation` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_blanket_order_jn_sales_quotation` */

insert  into `sal_customer_blanket_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/BOD-POC/20080001_REV_00-001','B001/BOD-POC/20080001_REV_00','0002/Q/2020_REV_00','ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_blanket_order_payment_term` */

DROP TABLE IF EXISTS `sal_customer_blanket_order_payment_term`;

CREATE TABLE `sal_customer_blanket_order_payment_term` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SortNo` decimal(18,4) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `Percentage` decimal(18,4) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_blanket_order_payment_term` */

insert  into `sal_customer_blanket_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/BOD-POC/20080001_REV_00-001','B001/BOD-POC/20080001_REV_00',1.0000,'CASH',100.0000,'-','ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_purchase_order` */

DROP TABLE IF EXISTS `sal_customer_purchase_order`;

CREATE TABLE `sal_customer_purchase_order` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CustPONo` varchar(250) DEFAULT NULL,
  `Revision` char(2) DEFAULT NULL,
  `RefCustPOCode` varchar(250) DEFAULT NULL,
  `ValidStatus` tinyint(4) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `PurchaseOrderType` enum('CPO-SO','CPO-BO','CPO-RL') DEFAULT NULL,
  `CustomerPurchaseOrderNo` varchar(250) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `EndUserCode` varchar(250) DEFAULT NULL,
  `PartialShipmentStatus` enum('YES','NO') DEFAULT NULL,
  `RetentionPercent` decimal(18,4) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `SalesPersonCode` varchar(250) DEFAULT NULL,
  `ProjectCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `TaxBaseAmount` decimal(18,4) DEFAULT NULL,
  `Vatpercent` decimal(18,4) DEFAULT NULL,
  `Vatamount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `OrderStatus` enum('BLANKET_ORDER','SALES_ORDER') DEFAULT NULL,
  `ClosingStatus` enum('OPEN','CLOSED') DEFAULT NULL,
  `ClosingDate` datetime DEFAULT NULL,
  `ClosingBy` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_purchase_order` */

insert  into `sal_customer_purchase_order`(`Code`,`CustPONo`,`Revision`,`RefCustPOCode`,`ValidStatus`,`BranchCode`,`TransactionDate`,`PurchaseOrderType`,`CustomerPurchaseOrderNo`,`CustomerCode`,`EndUserCode`,`PartialShipmentStatus`,`RetentionPercent`,`CurrencyCode`,`SalesPersonCode`,`ProjectCode`,`RefNo`,`Remark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`TaxBaseAmount`,`Vatpercent`,`Vatamount`,`GrandTotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`OrderStatus`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('B001/PCO/20080001_REV_00','B001/PCO/20080001','00','',1,'B001','2020-08-18 13:25:40','CPO-SO','CPO001','CUS00001','CUS00002','YES',10.0000,'IDR','S001','','-','-',20008000.0000,0.0000,0.0000,20010000.0000,0.0000,0.0000,20010000.0000,'ADMIN','2020-08-18 13:25:40','','1900-01-01 00:00:00','SALES_ORDER','OPEN','1900-01-01 00:00:00','');
insert  into `sal_customer_purchase_order`(`Code`,`CustPONo`,`Revision`,`RefCustPOCode`,`ValidStatus`,`BranchCode`,`TransactionDate`,`PurchaseOrderType`,`CustomerPurchaseOrderNo`,`CustomerCode`,`EndUserCode`,`PartialShipmentStatus`,`RetentionPercent`,`CurrencyCode`,`SalesPersonCode`,`ProjectCode`,`RefNo`,`Remark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`TaxBaseAmount`,`Vatpercent`,`Vatamount`,`GrandTotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`OrderStatus`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('B001/PCO/20080002_REV_00','B001/PCO/20080002','00','',1,'B001','2020-08-18 13:55:39','CPO-BO','CPO-001','CUS00002','WAKWAW','YES',5.0000,'IDR','S002','','-','-',10004000.0000,20.0000,2000800.0000,8013200.0000,5.0000,400660.0000,8413860.0000,'ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00','BLANKET_ORDER','CLOSED','2020-08-19 10:34:11','ADMIN');
insert  into `sal_customer_purchase_order`(`Code`,`CustPONo`,`Revision`,`RefCustPOCode`,`ValidStatus`,`BranchCode`,`TransactionDate`,`PurchaseOrderType`,`CustomerPurchaseOrderNo`,`CustomerCode`,`EndUserCode`,`PartialShipmentStatus`,`RetentionPercent`,`CurrencyCode`,`SalesPersonCode`,`ProjectCode`,`RefNo`,`Remark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`TaxBaseAmount`,`Vatpercent`,`Vatamount`,`GrandTotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`OrderStatus`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('B001/PCO/20080003_REV_00','B001/PCO/20080003','00','',1,'B001','2020-08-18 14:38:54','CPO-RL','CPO001','CUS00002','WAKWAW','NO',0.0000,'IDR','S002','','-','-',10004000.0000,20.0000,0.0000,10014000.0000,5.0000,0.0000,10014000.0000,'ADMIN','2020-08-18 14:38:54','','1900-01-01 00:00:00','BLANKET_ORDER','CLOSED','2020-08-18 17:50:30','ADMIN');
insert  into `sal_customer_purchase_order`(`Code`,`CustPONo`,`Revision`,`RefCustPOCode`,`ValidStatus`,`BranchCode`,`TransactionDate`,`PurchaseOrderType`,`CustomerPurchaseOrderNo`,`CustomerCode`,`EndUserCode`,`PartialShipmentStatus`,`RetentionPercent`,`CurrencyCode`,`SalesPersonCode`,`ProjectCode`,`RefNo`,`Remark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`TaxBaseAmount`,`Vatpercent`,`Vatamount`,`GrandTotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`OrderStatus`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('TRK/PCO/20080001_REV_00','TRK/PCO/20080001','00','',1,'TRK','2020-08-27 13:57:46','CPO-SO','00','CUS00001','CUS00002','NO',10.0000,'IDR','S001','','-','-',10004000.0000,0.0000,0.0000,10004000.0000,0.0000,0.0000,10004000.0000,'ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00','SALES_ORDER','OPEN','1900-01-01 00:00:00','');

/*Table structure for table `sal_customer_purchase_order_additional_fee` */

DROP TABLE IF EXISTS `sal_customer_purchase_order_additional_fee`;

CREATE TABLE `sal_customer_purchase_order_additional_fee` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `AdditionalFeeCode` varchar(250) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `UnitCode` varchar(250) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `Total` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_purchase_order_additional_fee` */

insert  into `sal_customer_purchase_order_additional_fee`(`Code`,`HeaderCode`,`AdditionalFeeCode`,`Remark`,`Quantity`,`UnitCode`,`Price`,`Total`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-001','B001/PCO/20080001_REV_00','OPN','ku tak sanggup lagi',10.0000,'BTG',200.0000,2000.0000,'ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_additional_fee`(`Code`,`HeaderCode`,`AdditionalFeeCode`,`Remark`,`Quantity`,`UnitCode`,`Price`,`Total`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080002_REV_00-001','B001/PCO/20080002_REV_00','OPN','Oalah',100.0000,'BTG',100.0000,10000.0000,'ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_additional_fee`(`Code`,`HeaderCode`,`AdditionalFeeCode`,`Remark`,`Quantity`,`UnitCode`,`Price`,`Total`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080003_REV_00-001','B001/PCO/20080003_REV_00','OPN','Reason',100.0000,'BTG',100.0000,10000.0000,'ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_purchase_order_item_delivery_date` */

DROP TABLE IF EXISTS `sal_customer_purchase_order_item_delivery_date`;

CREATE TABLE `sal_customer_purchase_order_item_delivery_date` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `DeliveryDate` datetime DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_purchase_order_item_delivery_date` */

insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-001','B001/PCO/20080001_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',1000.0000,'2020-08-18 00:00:00','0004/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-002','B001/PCO/20080001_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',20.0000,'2020-08-18 00:00:00','0005/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-003','B001/PCO/20080001_REV_00','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001',1000.0000,'2020-08-18 00:00:00','0005/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-004','B001/PCO/20080001_REV_00','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE_BORE_GANS_BALL00001_FIND_AA_ALONE_SEAL_ENAKKAN_OP',20.0000,'2020-08-18 00:00:00','0004/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080002_REV_00-001','B001/PCO/20080002_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',1000.0000,'2020-08-18 00:00:00','0002/Q/2020_REV_00','ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080002_REV_00-002','B001/PCO/20080002_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',20.0000,'2020-08-18 00:00:00','0002/Q/2020_REV_00','ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080003_REV_00-001','B001/PCO/20080003_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',1000.0000,'2020-08-18 00:00:00','0002/Q/2020_REV_00','ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080003_REV_00-002','B001/PCO/20080003_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',20.0000,'2020-08-18 00:00:00','0002/Q/2020_REV_00','ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/PCO/20080001_REV_00-001','TRK/PCO/20080001_REV_00','CUS00001_BDYCTR00001_SV_ENAKKAN_OP',1000.0000,'2020-08-27 00:00:00','0006/Q/2020_REV_00','ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/PCO/20080001_REV_00-002','TRK/PCO/20080001_REV_00','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001',20.0000,'2020-08-27 00:00:00','0006/Q/2020_REV_00','ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_purchase_order_item_detail` */

DROP TABLE IF EXISTS `sal_customer_purchase_order_item_detail`;

CREATE TABLE `sal_customer_purchase_order_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `SalesQuotationDetailCode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `ItemAlias` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CustomerPurchaseOrderSortNo` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_purchase_order_item_detail` */

insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-001','B001/PCO/20080001_REV_00','0004/Q/2020_REV_00','0004/Q/2020_REV_00-001','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','',1000.0000,1.0000,'ADMIN','2020-08-18 13:25:40','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-002','B001/PCO/20080001_REV_00','0005/Q/2020_REV_00','0005/Q/2020_REV_00-002','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','',20.0000,2.0000,'ADMIN','2020-08-18 13:25:40','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-003','B001/PCO/20080001_REV_00','0005/Q/2020_REV_00','0005/Q/2020_REV_00-001','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001','',1000.0000,3.0000,'ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-004','B001/PCO/20080001_REV_00','0004/Q/2020_REV_00','0004/Q/2020_REV_00-002','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE_BORE_GANS_BALL00001_FIND_AA_ALONE_SEAL_ENAKKAN_OP','',20.0000,4.0000,'ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080002_REV_00-001','B001/PCO/20080002_REV_00','0002/Q/2020_REV_00','0002/Q/2020_REV_00-001','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','kita',1000.0000,1.0000,'ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080002_REV_00-002','B001/PCO/20080002_REV_00','0002/Q/2020_REV_00','0002/Q/2020_REV_00-002','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','oalah',20.0000,2.0000,'ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080003_REV_00-001','B001/PCO/20080003_REV_00','0002/Q/2020_REV_00','0002/Q/2020_REV_00-001','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','avg',1000.0000,1.0000,'ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080003_REV_00-002','B001/PCO/20080003_REV_00','0002/Q/2020_REV_00','0002/Q/2020_REV_00-002','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','firstin',20.0000,2.0000,'ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/PCO/20080001_REV_00-001','TRK/PCO/20080001_REV_00','0006/Q/2020_REV_00','0006/Q/2020_REV_00-001','CUS00001_BDYCTR00001_SV_ENAKKAN_OP','sarada',1000.0000,1.0000,'ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/PCO/20080001_REV_00-002','TRK/PCO/20080001_REV_00','0006/Q/2020_REV_00','0006/Q/2020_REV_00-002','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001','darasa',20.0000,2.0000,'ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_purchase_order_jn_sales_quotation` */

DROP TABLE IF EXISTS `sal_customer_purchase_order_jn_sales_quotation`;

CREATE TABLE `sal_customer_purchase_order_jn_sales_quotation` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_purchase_order_jn_sales_quotation` */

insert  into `sal_customer_purchase_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-001','B001/PCO/20080001_REV_00','0005/Q/2020_REV_00','ADMIN','2020-08-18 13:25:40','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-002','B001/PCO/20080001_REV_00','0004/Q/2020_REV_00','ADMIN','2020-08-18 13:25:40','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080002_REV_00-001','B001/PCO/20080002_REV_00','0002/Q/2020_REV_00','ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080003_REV_00-001','B001/PCO/20080003_REV_00','0002/Q/2020_REV_00','ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/PCO/20080001_REV_00-001','TRK/PCO/20080001_REV_00','0006/Q/2020_REV_00','ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_purchase_order_payment_term` */

DROP TABLE IF EXISTS `sal_customer_purchase_order_payment_term`;

CREATE TABLE `sal_customer_purchase_order_payment_term` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SortNo` decimal(18,0) DEFAULT NULL,
  `CustomerSortNo` varchar(250) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `Percentage` decimal(18,4) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_purchase_order_payment_term` */

insert  into `sal_customer_purchase_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`CustomerSortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-001','B001/PCO/20080001_REV_00',1,NULL,'7D',70.0000,'-','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`CustomerSortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080001_REV_00-002','B001/PCO/20080001_REV_00',2,NULL,'CASH',30.0000,'wahh','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`CustomerSortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080002_REV_00-001','B001/PCO/20080002_REV_00',1,NULL,'CASH',100.0000,'-','ADMIN','2020-08-18 13:55:39','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`CustomerSortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/PCO/20080003_REV_00-001','B001/PCO/20080003_REV_00',1,NULL,'CASH',100.0000,'-','ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_purchase_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`CustomerSortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/PCO/20080001_REV_00-001','TRK/PCO/20080001_REV_00',1,NULL,'CASH',100.0000,'-','ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_sales_order` */

DROP TABLE IF EXISTS `sal_customer_sales_order`;

CREATE TABLE `sal_customer_sales_order` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CUSTSONo` varchar(250) DEFAULT NULL,
  `Revision` char(2) DEFAULT NULL,
  `RefCUSTSOCode` varchar(250) DEFAULT NULL,
  `ValidStatus` tinyint(4) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `OrderType` enum('CPO-RL','CPO-SO') DEFAULT NULL,
  `BlanketOrderCode` varchar(250) DEFAULT NULL,
  `CustomerPurchaseOrderCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `RequestDeliveryDate` datetime DEFAULT NULL,
  `ExpiredDate` datetime DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `EndUserCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `SalesPersonCode` varchar(250) DEFAULT NULL,
  `ProjectCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `RevisionRemark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `TaxBaseAmount` decimal(18,4) DEFAULT NULL,
  `Vatpercent` decimal(18,4) DEFAULT NULL,
  `Vatamount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `ApprovalRemark` varchar(250) DEFAULT NULL,
  `ApprovalReasonCode` varchar(250) DEFAULT NULL,
  `ApprovalStatus` enum('PENDING','APPROVED','REJECTED') DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `ClosingStatus` enum('OPEN','CLOSED') DEFAULT NULL,
  `ClosingDate` datetime DEFAULT NULL,
  `ClosingBy` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_sales_order` */

insert  into `sal_customer_sales_order`(`Code`,`CUSTSONo`,`Revision`,`RefCUSTSOCode`,`ValidStatus`,`TransactionDate`,`OrderType`,`BlanketOrderCode`,`CustomerPurchaseOrderCode`,`BranchCode`,`RequestDeliveryDate`,`ExpiredDate`,`CustomerCode`,`EndUserCode`,`CurrencyCode`,`SalesPersonCode`,`ProjectCode`,`RefNo`,`Remark`,`RevisionRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`TaxBaseAmount`,`Vatpercent`,`Vatamount`,`GrandTotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('B001/SOD-POC/20080001_REV_00','B001/SOD-POC/20080001','00','',1,'2020-08-18 13:25:40','CPO-SO',NULL,'B001/PCO/20080001_REV_00','B001','2020-08-18 13:25:40','2020-08-18 13:25:40','CUS00001','CUS00002','IDR','S001',NULL,'-','-','',20008000.0000,0.0000,0.0000,20010000.0000,0.0000,0.0000,20010000.0000,'ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00','',NULL,'PENDING','1900-01-01 00:00:00','','OPEN','2020-08-18 17:04:29','ADMIN');
insert  into `sal_customer_sales_order`(`Code`,`CUSTSONo`,`Revision`,`RefCUSTSOCode`,`ValidStatus`,`TransactionDate`,`OrderType`,`BlanketOrderCode`,`CustomerPurchaseOrderCode`,`BranchCode`,`RequestDeliveryDate`,`ExpiredDate`,`CustomerCode`,`EndUserCode`,`CurrencyCode`,`SalesPersonCode`,`ProjectCode`,`RefNo`,`Remark`,`RevisionRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`TaxBaseAmount`,`Vatpercent`,`Vatamount`,`GrandTotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('B001/SOD-POC/20080002_REV_00','B001/SOD-POC/20080002','00','',1,'2020-08-18 14:38:54','CPO-RL','B001/BOD-POC/20080001_REV_00','B001/PCO/20080003_REV_00','B001','2020-08-18 14:38:54','2020-08-18 14:38:54','CUS00002','WAKWAW','IDR','S002',NULL,'-','-','',10004000.0000,20.0000,0.0000,10014000.0000,5.0000,0.0000,10014000.0000,'ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00','',NULL,'PENDING','1900-01-01 00:00:00','','CLOSED','2020-08-18 17:50:30','ADMIN');
insert  into `sal_customer_sales_order`(`Code`,`CUSTSONo`,`Revision`,`RefCUSTSOCode`,`ValidStatus`,`TransactionDate`,`OrderType`,`BlanketOrderCode`,`CustomerPurchaseOrderCode`,`BranchCode`,`RequestDeliveryDate`,`ExpiredDate`,`CustomerCode`,`EndUserCode`,`CurrencyCode`,`SalesPersonCode`,`ProjectCode`,`RefNo`,`Remark`,`RevisionRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`TaxBaseAmount`,`Vatpercent`,`Vatamount`,`GrandTotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingStatus`,`ClosingDate`,`ClosingBy`) values ('TRK/SOD-POC/20080001_REV_00','TRK/SOD-POC/20080001','00','',1,'2020-08-27 13:57:46','CPO-SO',NULL,'TRK/PCO/20080001_REV_00','TRK','2020-08-27 13:57:46','2020-08-27 13:57:46','CUS00001','CUS00002','IDR','S001','','-','-','',10004000.0000,0.0000,0.0000,10004000.0000,0.0000,0.0000,10004000.0000,'ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00','',NULL,'PENDING','1900-01-01 00:00:00','','OPEN','1900-01-01 00:00:00','');

/*Table structure for table `sal_customer_sales_order_additional_fee` */

DROP TABLE IF EXISTS `sal_customer_sales_order_additional_fee`;

CREATE TABLE `sal_customer_sales_order_additional_fee` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `AdditionalFeeCode` varchar(250) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `UnitCode` varchar(250) DEFAULT NULL,
  `Price` decimal(18,4) DEFAULT NULL,
  `Total` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_sales_order_additional_fee` */

insert  into `sal_customer_sales_order_additional_fee`(`Code`,`HeaderCode`,`AdditionalFeeCode`,`Remark`,`Quantity`,`UnitCode`,`Price`,`Total`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-001','B001/SOD-POC/20080001_REV_00','OPN','ku tak sanggup lagi',10.0000,'BTG',200.0000,2000.0000,'ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_additional_fee`(`Code`,`HeaderCode`,`AdditionalFeeCode`,`Remark`,`Quantity`,`UnitCode`,`Price`,`Total`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080002_REV_00-001','B001/SOD-POC/20080002_REV_00','OPN','Reason',100.0000,'BTG',100.0000,10000.0000,'ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_sales_order_item_delivery_date` */

DROP TABLE IF EXISTS `sal_customer_sales_order_item_delivery_date`;

CREATE TABLE `sal_customer_sales_order_item_delivery_date` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `DeliveryDate` datetime DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_sales_order_item_delivery_date` */

insert  into `sal_customer_sales_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-001','B001/SOD-POC/20080001_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',1000.0000,'2020-08-18 00:00:00','0004/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-002','B001/SOD-POC/20080001_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',20.0000,'2020-08-18 00:00:00','0005/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-003','B001/SOD-POC/20080001_REV_00','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001',1000.0000,'2020-08-18 00:00:00','0005/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-004','B001/SOD-POC/20080001_REV_00','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE_BORE_GANS_BALL00001_FIND_AA_ALONE_SEAL_ENAKKAN_OP',20.0000,'2020-08-18 00:00:00','0004/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080002_REV_00-001','B001/SOD-POC/20080002_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',1000.0000,'2020-08-18 00:00:00','0002/Q/2020_REV_00','ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080002_REV_00-002','B001/SOD-POC/20080002_REV_00','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE',20.0000,'2020-08-18 00:00:00','0002/Q/2020_REV_00','ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/SOD-POC/20080001_REV_00-001','TRK/SOD-POC/20080001_REV_00','CUS00001_BDYCTR00001_SV_ENAKKAN_OP',1000.0000,'2020-08-27 00:00:00','0006/Q/2020_REV_00','ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_delivery_date`(`Code`,`HeaderCode`,`ItemFinishGoodsCode`,`Quantity`,`DeliveryDate`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/SOD-POC/20080001_REV_00-002','TRK/SOD-POC/20080001_REV_00','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001',20.0000,'2020-08-27 00:00:00','0006/Q/2020_REV_00','ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_sales_order_item_detail` */

DROP TABLE IF EXISTS `sal_customer_sales_order_item_detail`;

CREATE TABLE `sal_customer_sales_order_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `SalesQuotationDetailCode` varchar(250) DEFAULT NULL,
  `ItemFinishGoodsCode` varchar(250) DEFAULT NULL,
  `ItemAlias` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CustomerPurchaseOrderSortNo` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_sales_order_item_detail` */

insert  into `sal_customer_sales_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-001','B001/SOD-POC/20080001_REV_00','0004/Q/2020_REV_00','0004/Q/2020_REV_00-001','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','',1000.0000,1.0000,'ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-002','B001/SOD-POC/20080001_REV_00','0005/Q/2020_REV_00','0005/Q/2020_REV_00-002','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','',20.0000,2.0000,'ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-003','B001/SOD-POC/20080001_REV_00','0005/Q/2020_REV_00','0005/Q/2020_REV_00-001','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001','',1000.0000,3.0000,'ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-004','B001/SOD-POC/20080001_REV_00','0004/Q/2020_REV_00','0004/Q/2020_REV_00-002','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE_BORE_GANS_BALL00001_FIND_AA_ALONE_SEAL_ENAKKAN_OP','',20.0000,4.0000,'ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080002_REV_00-001','B001/SOD-POC/20080002_REV_00','0002/Q/2020_REV_00','0002/Q/2020_REV_00-001','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','avg',1000.0000,1.0000,'ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080002_REV_00-002','B001/SOD-POC/20080002_REV_00','0002/Q/2020_REV_00','0002/Q/2020_REV_00-002','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','firstin',20.0000,2.0000,'ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/SOD-POC/20080001_REV_00-001','TRK/SOD-POC/20080001_REV_00','0006/Q/2020_REV_00','0006/Q/2020_REV_00-001','CUS00001_BDYCTR00001_SV_ENAKKAN_OP','sarada',1000.0000,1.0000,'ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_item_detail`(`Code`,`HeaderCode`,`SalesQuotationCode`,`SalesQuotationDetailCode`,`ItemFinishGoodsCode`,`ItemAlias`,`Quantity`,`CustomerPurchaseOrderSortNo`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/SOD-POC/20080001_REV_00-002','TRK/SOD-POC/20080001_REV_00','0006/Q/2020_REV_00','0006/Q/2020_REV_00-002','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001','darasa',20.0000,2.0000,'ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_sales_order_jn_sales_quotation` */

DROP TABLE IF EXISTS `sal_customer_sales_order_jn_sales_quotation`;

CREATE TABLE `sal_customer_sales_order_jn_sales_quotation` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SalesQuotationCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_sales_order_jn_sales_quotation` */

insert  into `sal_customer_sales_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-001','B001/SOD-POC/20080001_REV_00','0005/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-002','B001/SOD-POC/20080001_REV_00','0004/Q/2020_REV_00','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080002_REV_00-001','B001/SOD-POC/20080002_REV_00','0002/Q/2020_REV_00','ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_jn_sales_quotation`(`Code`,`HeaderCode`,`SalesQuotationCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/SOD-POC/20080001_REV_00-001','TRK/SOD-POC/20080001_REV_00','0006/Q/2020_REV_00','ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');

/*Table structure for table `sal_customer_sales_order_payment_term` */

DROP TABLE IF EXISTS `sal_customer_sales_order_payment_term`;

CREATE TABLE `sal_customer_sales_order_payment_term` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `SortNo` decimal(18,4) DEFAULT NULL,
  `PaymentTermCode` varchar(250) DEFAULT NULL,
  `Percentage` decimal(18,4) DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_customer_sales_order_payment_term` */

insert  into `sal_customer_sales_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-001','B001/SOD-POC/20080001_REV_00',1.0000,'7D',70.0000,'-','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080001_REV_00-002','B001/SOD-POC/20080001_REV_00',2.0000,'CASH',30.0000,'wahh','ADMIN','2020-08-18 13:25:41','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/SOD-POC/20080002_REV_00-001','B001/SOD-POC/20080002_REV_00',1.0000,'CASH',100.0000,'-','ADMIN','2020-08-18 14:38:55','','1900-01-01 00:00:00');
insert  into `sal_customer_sales_order_payment_term`(`Code`,`HeaderCode`,`SortNo`,`PaymentTermCode`,`Percentage`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('TRK/SOD-POC/20080001_REV_00-001','TRK/SOD-POC/20080001_REV_00',1.0000,'CASH',100.0000,'-','ADMIN','2020-08-27 13:57:46','','1900-01-01 00:00:00');

/*Table structure for table `sal_internal_memo` */

DROP TABLE IF EXISTS `sal_internal_memo`;

CREATE TABLE `sal_internal_memo` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `ProjectCode` varchar(250) DEFAULT NULL,
  `Subject` varchar(250) DEFAULT NULL,
  `IM_To` varchar(250) DEFAULT NULL,
  `Attention` varchar(250) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `SalesPersonCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_internal_memo` */

insert  into `sal_internal_memo`(`Code`,`BranchCode`,`TransactionDate`,`ProjectCode`,`Subject`,`IM_To`,`Attention`,`CustomerCode`,`SalesPersonCode`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('123','B001','2019-12-12 17:05:27','MEMORIES','123','231','12','WAKWAW','S001','-','haii','ADMIN','2019-12-12 00:00:00','ADMIN','2019-12-12 17:05:27');
insert  into `sal_internal_memo`(`Code`,`BranchCode`,`TransactionDate`,`ProjectCode`,`Subject`,`IM_To`,`Attention`,`CustomerCode`,`SalesPersonCode`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/Q/19120001','B001','2019-12-13 12:05:07','MEMORIES','-','-','-','WAKWAW','S001','-','-','ADMIN','2019-12-13 12:05:07','','1900-01-01 00:00:00');
insert  into `sal_internal_memo`(`Code`,`BranchCode`,`TransactionDate`,`ProjectCode`,`Subject`,`IM_To`,`Attention`,`CustomerCode`,`SalesPersonCode`,`RefNo`,`Remark`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/Q/20070001','B001','2020-07-07 15:07:51','','sad','-','-','CUS001','S001','-','-','ADMIN','2020-07-07 00:00:00','ADMIN','2020-07-07 15:07:51');

/*Table structure for table `sal_internal_memo_detail` */

DROP TABLE IF EXISTS `sal_internal_memo_detail`;

CREATE TABLE `sal_internal_memo_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Description` varchar(250) DEFAULT NULL,
  `ValveTag` varchar(250) DEFAULT NULL,
  `ValveDataSheet` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_internal_memo_detail` */

insert  into `sal_internal_memo_detail`(`Code`,`HeaderCode`,`ItemCode`,`Description`,`ValveTag`,`ValveDataSheet`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('123-001','123','WAKWAW_PIECES_FEEL_RATE_BORE_GANS_SV_ALONE_SEAL_FIND_AA_ENAKKAN_STH_OP',NULL,NULL,NULL,200.0000,'ADMIN','2019-12-12 17:05:27','ADMIN','2019-12-12 17:05:27');
insert  into `sal_internal_memo_detail`(`Code`,`HeaderCode`,`ItemCode`,`Description`,`ValveTag`,`ValveDataSheet`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/Q/19120001-001','B001/Q/19120001','WAKWAW_PIECES_FEEL_RATE_BORE_GANS_SV_ALONE_SEAL_FIND_AA_ENAKKAN_STH_OP',NULL,NULL,NULL,10000.0000,'ADMIN','2019-12-13 12:05:07','ADMIN','2019-12-13 12:05:07');
insert  into `sal_internal_memo_detail`(`Code`,`HeaderCode`,`ItemCode`,`Description`,`ValveTag`,`ValveDataSheet`,`Quantity`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/Q/20070001-001','B001/Q/20070001','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001','dia','aku','sad',100.0000,'ADMIN','2020-07-07 15:07:51','ADMIN','2020-07-07 15:07:51');

/*Table structure for table `sal_list_of_applicable_document` */

DROP TABLE IF EXISTS `sal_list_of_applicable_document`;

CREATE TABLE `sal_list_of_applicable_document` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `SalesOrderCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `PreparedBy` varchar(250) DEFAULT NULL,
  `ApprovedBy` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_list_of_applicable_document` */

insert  into `sal_list_of_applicable_document`(`Code`,`BranchCode`,`TransactionDate`,`SalesOrderCode`,`RefNo`,`Remark`,`PreparedBy`,`ApprovedBy`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/LAD/20080001','B001','2020-08-24 11:04:32','B001/SOD-POC/20080001_REV_00','-','-','-','-','ADMIN','2020-08-24 11:04:32','','1900-01-01 00:00:00');
insert  into `sal_list_of_applicable_document`(`Code`,`BranchCode`,`TransactionDate`,`SalesOrderCode`,`RefNo`,`Remark`,`PreparedBy`,`ApprovedBy`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/LAD/20080002','B001','2020-08-24 13:57:37','B001/SOD-POC/20080001_REV_00','-','-','-','-','ADMIN','2020-08-24 13:57:37','','1900-01-01 00:00:00');

/*Table structure for table `sal_list_of_applicable_document_detail` */

DROP TABLE IF EXISTS `sal_list_of_applicable_document_detail`;

CREATE TABLE `sal_list_of_applicable_document_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `NameOfDocument` varchar(250) DEFAULT NULL,
  `DocumentNo` varchar(250) DEFAULT NULL,
  `VersionEdition` varchar(250) DEFAULT NULL,
  `ShareFolderCode` varchar(250) DEFAULT NULL,
  `FileName` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_list_of_applicable_document_detail` */

insert  into `sal_list_of_applicable_document_detail`(`Code`,`HeaderCode`,`NameOfDocument`,`DocumentNo`,`VersionEdition`,`ShareFolderCode`,`FileName`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/LAD/20080001-001','B001/LAD/20080001','Sdr','Ega','Yuunnn',NULL,NULL,'ADMIN','2020-08-24 11:04:32','','1900-01-01 00:00:00');
insert  into `sal_list_of_applicable_document_detail`(`Code`,`HeaderCode`,`NameOfDocument`,`DocumentNo`,`VersionEdition`,`ShareFolderCode`,`FileName`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('B001/LAD/20080002-001','B001/LAD/20080002','Sdr','Ega','Yuunnn',NULL,NULL,'ADMIN','2020-08-24 13:57:37','','1900-01-01 00:00:00');

/*Table structure for table `sal_request_for_quotation` */

DROP TABLE IF EXISTS `sal_request_for_quotation`;

CREATE TABLE `sal_request_for_quotation` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `RFQNo` varchar(250) DEFAULT NULL,
  `Revision` varchar(250) DEFAULT NULL,
  `RefRFQCode` varchar(250) DEFAULT NULL,
  `TenderNo` varchar(250) DEFAULT NULL,
  `OrderStatus` enum('BLANKET_ORDER','SALES_ORDER') DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `RegisteredDate` datetime DEFAULT NULL,
  `ReviewedStatus` tinyint(1) DEFAULT NULL,
  `PreBidMeetingDate` datetime DEFAULT NULL,
  `SendToFactoryDate` datetime DEFAULT NULL,
  `SubmittedDate` datetime DEFAULT NULL,
  `ScopeOfSupply` text,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `EndUserCode` varchar(250) DEFAULT NULL,
  `Attn` varchar(250) DEFAULT NULL,
  `SalesPersonCode` varchar(250) DEFAULT NULL,
  `ProjectCode` varchar(250) DEFAULT NULL,
  `Subject` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `ValidStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `ApprovalRemark` varchar(250) DEFAULT NULL,
  `ApprovalReasonCode` varchar(250) DEFAULT NULL,
  `ApprovalStatus` enum('PENDING','APPROVED','DECLINED') DEFAULT NULL,
  `ApprovalDate` datetime DEFAULT NULL,
  `ApprovalBy` varchar(250) DEFAULT NULL,
  `ClosingStatus` enum('OPEN','CLOSED') DEFAULT NULL,
  `ClosingDate` datetime DEFAULT NULL,
  `ClosingBy` varchar(250) DEFAULT NULL,
  `PreventiveAction` text,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_request_for_quotation` */

insert  into `sal_request_for_quotation`(`Code`,`RFQNo`,`Revision`,`RefRFQCode`,`TenderNo`,`OrderStatus`,`BranchCode`,`TransactionDate`,`RegisteredDate`,`ReviewedStatus`,`PreBidMeetingDate`,`SendToFactoryDate`,`SubmittedDate`,`ScopeOfSupply`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`ProjectCode`,`Subject`,`RefNo`,`Remark`,`ValidStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingStatus`,`ClosingDate`,`ClosingBy`,`PreventiveAction`) values ('B001/RFQ20080001.00','B001/RFQ20080001','00','','hati','SALES_ORDER','B001','2020-08-11 11:35:40','2020-08-11 00:00:00',0,'1900-01-01 00:00:00','2020-08-11 00:00:00','2020-08-11 00:00:00','yang benar','IDR','CUS00001','CUS00002','Nafsu','S001','','-','-','-',1,'ADMIN','2020-08-11 11:35:40','','1990-01-01 00:00:00','buahahaha','','APPROVED','2020-09-14 11:18:56','ADMIN','OPEN','1900-01-01 00:00:00','','hiayaaaaaa');
insert  into `sal_request_for_quotation`(`Code`,`RFQNo`,`Revision`,`RefRFQCode`,`TenderNo`,`OrderStatus`,`BranchCode`,`TransactionDate`,`RegisteredDate`,`ReviewedStatus`,`PreBidMeetingDate`,`SendToFactoryDate`,`SubmittedDate`,`ScopeOfSupply`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`ProjectCode`,`Subject`,`RefNo`,`Remark`,`ValidStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingStatus`,`ClosingDate`,`ClosingBy`,`PreventiveAction`) values ('B001/RFQ20080002.00','B001/RFQ20080002','00','','Pancing','BLANKET_ORDER','B001','2020-08-11 11:36:49','2020-08-11 00:00:00',1,'1900-01-01 00:00:00','2020-08-11 00:00:00','2020-08-11 00:00:00','tunda','IDR','CUS00002','WAKWAW','Hahhhh','S002','','-','-','-',1,'ADMIN','2020-08-11 11:36:49','','1990-01-01 00:00:00','','','APPROVED','2020-08-11 11:41:00','ADMIN','OPEN','1900-01-01 00:00:00','','');
insert  into `sal_request_for_quotation`(`Code`,`RFQNo`,`Revision`,`RefRFQCode`,`TenderNo`,`OrderStatus`,`BranchCode`,`TransactionDate`,`RegisteredDate`,`ReviewedStatus`,`PreBidMeetingDate`,`SendToFactoryDate`,`SubmittedDate`,`ScopeOfSupply`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`ProjectCode`,`Subject`,`RefNo`,`Remark`,`ValidStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingStatus`,`ClosingDate`,`ClosingBy`,`PreventiveAction`) values ('B001/RFQ20080003.00','B001/RFQ20080003','00','','10000','SALES_ORDER','B001','2020-08-18 11:48:38','2020-08-18 00:00:00',0,'2020-08-18 00:00:00','2020-08-18 00:00:00','2020-08-18 00:00:00','im tired','IDR','CUS00001','CUS00002','revisi','S001','','-','-','-',1,'ADMIN','2020-08-18 11:48:38','','1990-01-01 00:00:00','-','','APPROVED','2020-08-18 11:49:17','ADMIN','OPEN','1900-01-01 00:00:00','','-');
insert  into `sal_request_for_quotation`(`Code`,`RFQNo`,`Revision`,`RefRFQCode`,`TenderNo`,`OrderStatus`,`BranchCode`,`TransactionDate`,`RegisteredDate`,`ReviewedStatus`,`PreBidMeetingDate`,`SendToFactoryDate`,`SubmittedDate`,`ScopeOfSupply`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`ProjectCode`,`Subject`,`RefNo`,`Remark`,`ValidStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`ApprovalRemark`,`ApprovalReasonCode`,`ApprovalStatus`,`ApprovalDate`,`ApprovalBy`,`ClosingStatus`,`ClosingDate`,`ClosingBy`,`PreventiveAction`) values ('TRK/RFQ20080001.00','TRK/RFQ20080001','00','','00','SALES_ORDER','TRK','2020-08-26 13:13:24','2020-08-26 00:00:00',0,'2020-08-26 00:00:00','2020-08-26 00:00:00','2020-08-26 00:00:00','-','IDR','CUS00001','CUS00002','-','S001','','-','-','-',1,'ADMIN','2020-08-26 13:13:24','','1990-01-01 00:00:00','-','','APPROVED','2020-08-26 13:13:41','ADMIN','OPEN','1900-01-01 00:00:00','','-');

/*Table structure for table `sal_sales_quotation` */

DROP TABLE IF EXISTS `sal_sales_quotation`;

CREATE TABLE `sal_sales_quotation` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `SalQUONo` varchar(250) DEFAULT NULL,
  `Revision` varchar(250) DEFAULT NULL,
  `RefSalQUOCode` varchar(250) DEFAULT NULL,
  `RFQCode` varchar(250) DEFAULT NULL,
  `OrderStatus` enum('BLANKET_ORDER','SALES_ORDER') DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `ProjectCode` varchar(250) DEFAULT NULL,
  `Subject` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `EndUserCode` varchar(250) DEFAULT NULL,
  `Attn` varchar(250) DEFAULT NULL,
  `SalesPersonCode` varchar(250) DEFAULT NULL,
  `TransactionDate` datetime DEFAULT NULL,
  `ShipToCode` varchar(250) DEFAULT NULL,
  `TermOfDeliveryCode` varchar(250) DEFAULT NULL,
  `RefNo` varchar(250) DEFAULT NULL,
  `Remark` text,
  `ValidStatus` tinyint(1) DEFAULT NULL,
  `SALQUOStatus` enum('APPROVED','REVIEWING','BUDGETING','FAILED','CANCELLED','PENDING','NO_STATUS') DEFAULT NULL,
  `SALQUOStatusReason` varchar(250) DEFAULT NULL,
  `SALQUOStatusRemark` text,
  `TotalTransactionAmount` decimal(18,4) DEFAULT NULL,
  `DiscountPercent` decimal(18,4) DEFAULT NULL,
  `DiscountAmount` decimal(18,4) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `TaxBaseAmount` decimal(18,4) DEFAULT NULL,
  `VatPercent` decimal(18,4) DEFAULT NULL,
  `VatAmount` decimal(18,4) DEFAULT NULL,
  `GrandTotalAmount` decimal(18,4) DEFAULT NULL,
  `PriceValidity` varchar(250) DEFAULT NULL,
  `CertificateDocumentation` text,
  `Testing` text,
  `Inspection` text,
  `Painting` text,
  `Packing` varchar(250) DEFAULT NULL,
  `Tagging` varchar(250) DEFAULT NULL,
  `Warranty` varchar(250) DEFAULT NULL,
  `Payment` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_quotation` */

insert  into `sal_sales_quotation`(`Code`,`SalQUONo`,`Revision`,`RefSalQUOCode`,`RFQCode`,`OrderStatus`,`BranchCode`,`ProjectCode`,`Subject`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`TransactionDate`,`ShipToCode`,`TermOfDeliveryCode`,`RefNo`,`Remark`,`ValidStatus`,`SALQUOStatus`,`SALQUOStatusReason`,`SALQUOStatusRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`UpdatedDate`,`TaxBaseAmount`,`VatPercent`,`VatAmount`,`GrandTotalAmount`,`PriceValidity`,`CertificateDocumentation`,`Testing`,`Inspection`,`Painting`,`Packing`,`Tagging`,`Warranty`,`Payment`,`CreatedBy`,`CreatedDate`,`UpdatedBy`) values ('0001/Q/2020_REV_00','0001/Q/2020','00','','B001/RFQ20080001.00','SALES_ORDER','B001','','-','IDR','CUS00001','CUS00002','Nafsu','S001','2020-08-11 11:45:28','BDG','BABE','rindu','kamu',1,'APPROVED','','undefined',10004000.0000,20.0000,2000800.0000,'1900-01-01 00:00:00',8003200.0000,1.0000,80032.0000,8083232.0000,'Tak berdaya','menahan','rasa','ingin','jumpaaa','percayalah','padaku','aku','pun','ADMIN','2020-08-11 11:45:28','');
insert  into `sal_sales_quotation`(`Code`,`SalQUONo`,`Revision`,`RefSalQUOCode`,`RFQCode`,`OrderStatus`,`BranchCode`,`ProjectCode`,`Subject`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`TransactionDate`,`ShipToCode`,`TermOfDeliveryCode`,`RefNo`,`Remark`,`ValidStatus`,`SALQUOStatus`,`SALQUOStatusReason`,`SALQUOStatusRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`UpdatedDate`,`TaxBaseAmount`,`VatPercent`,`VatAmount`,`GrandTotalAmount`,`PriceValidity`,`CertificateDocumentation`,`Testing`,`Inspection`,`Painting`,`Packing`,`Tagging`,`Warranty`,`Payment`,`CreatedBy`,`CreatedDate`,`UpdatedBy`) values ('0002/Q/2020_REV_00','0002/Q/2020','00','','B001/RFQ20080002.00','BLANKET_ORDER','B001','','-','IDR','CUS00002','WAKWAW','Hahhhh','S002','2020-08-11 11:46:51','BDG','BABE','dan','demi waktuuuu',1,'APPROVED','','undefined',10004000.0000,30.0000,3001200.0000,'1900-01-01 00:00:00',7002800.0000,10.0000,700280.0000,7703080.0000,'maafkan','aku','menduakan','cintamu','lelah','rasa','hatiku','berpaling','denganmu','ADMIN','2020-08-11 11:46:51','');
insert  into `sal_sales_quotation`(`Code`,`SalQUONo`,`Revision`,`RefSalQUOCode`,`RFQCode`,`OrderStatus`,`BranchCode`,`ProjectCode`,`Subject`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`TransactionDate`,`ShipToCode`,`TermOfDeliveryCode`,`RefNo`,`Remark`,`ValidStatus`,`SALQUOStatus`,`SALQUOStatusReason`,`SALQUOStatusRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`UpdatedDate`,`TaxBaseAmount`,`VatPercent`,`VatAmount`,`GrandTotalAmount`,`PriceValidity`,`CertificateDocumentation`,`Testing`,`Inspection`,`Painting`,`Packing`,`Tagging`,`Warranty`,`Payment`,`CreatedBy`,`CreatedDate`,`UpdatedBy`) values ('0003/Q/2020_REV_00','0003/Q/2020','00','','B001/RFQ20080001.00','SALES_ORDER','B001','','-','IDR','CUS00001','CUS00002','Nafsu','S001','2020-08-11 23:00:37','BDG','BABE','','',1,'REVIEWING','','undefined',50000.0000,20.0000,10000.0000,'2020-08-11 23:00:37',40000.0000,5.0000,2000.0000,42000.0000,'','','','','','','','','','ADMIN','2020-08-11 00:00:00','ADMIN');
insert  into `sal_sales_quotation`(`Code`,`SalQUONo`,`Revision`,`RefSalQUOCode`,`RFQCode`,`OrderStatus`,`BranchCode`,`ProjectCode`,`Subject`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`TransactionDate`,`ShipToCode`,`TermOfDeliveryCode`,`RefNo`,`Remark`,`ValidStatus`,`SALQUOStatus`,`SALQUOStatusReason`,`SALQUOStatusRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`UpdatedDate`,`TaxBaseAmount`,`VatPercent`,`VatAmount`,`GrandTotalAmount`,`PriceValidity`,`CertificateDocumentation`,`Testing`,`Inspection`,`Painting`,`Packing`,`Tagging`,`Warranty`,`Payment`,`CreatedBy`,`CreatedDate`,`UpdatedBy`) values ('0004/Q/2020_REV_00','0004/Q/2020','00','','B001/RFQ20080001.00','SALES_ORDER','B001','','-','IDR','CUS00001','CUS00002','Nafsu','S001','2020-08-14 11:09:11','BDG','BABE','','',1,'APPROVED','','',10004000.0000,20.0000,2000800.0000,'1900-01-01 00:00:00',8003200.0000,10.0000,800320.0000,8803520.0000,'','','','','','','','','','ADMIN','2020-08-14 11:09:11','');
insert  into `sal_sales_quotation`(`Code`,`SalQUONo`,`Revision`,`RefSalQUOCode`,`RFQCode`,`OrderStatus`,`BranchCode`,`ProjectCode`,`Subject`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`TransactionDate`,`ShipToCode`,`TermOfDeliveryCode`,`RefNo`,`Remark`,`ValidStatus`,`SALQUOStatus`,`SALQUOStatusReason`,`SALQUOStatusRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`UpdatedDate`,`TaxBaseAmount`,`VatPercent`,`VatAmount`,`GrandTotalAmount`,`PriceValidity`,`CertificateDocumentation`,`Testing`,`Inspection`,`Painting`,`Packing`,`Tagging`,`Warranty`,`Payment`,`CreatedBy`,`CreatedDate`,`UpdatedBy`) values ('0005/Q/2020_REV_00','0005/Q/2020','00','','B001/RFQ20080001.00','SALES_ORDER','B001','','-','IDR','CUS00001','CUS00002','Nafsu','S001','2020-08-18 11:53:15','BDG','BABE','','',1,'APPROVED','MENARILAH','dan penuh semangat',10004000.0000,30.0000,3001200.0000,'1900-01-01 00:00:00',7002800.0000,10.0000,700280.0000,7703080.0000,'validasi','wah bocor','','','','','','','','ADMIN','2020-08-18 11:53:15','');
insert  into `sal_sales_quotation`(`Code`,`SalQUONo`,`Revision`,`RefSalQUOCode`,`RFQCode`,`OrderStatus`,`BranchCode`,`ProjectCode`,`Subject`,`CurrencyCode`,`CustomerCode`,`EndUserCode`,`Attn`,`SalesPersonCode`,`TransactionDate`,`ShipToCode`,`TermOfDeliveryCode`,`RefNo`,`Remark`,`ValidStatus`,`SALQUOStatus`,`SALQUOStatusReason`,`SALQUOStatusRemark`,`TotalTransactionAmount`,`DiscountPercent`,`DiscountAmount`,`UpdatedDate`,`TaxBaseAmount`,`VatPercent`,`VatAmount`,`GrandTotalAmount`,`PriceValidity`,`CertificateDocumentation`,`Testing`,`Inspection`,`Painting`,`Packing`,`Tagging`,`Warranty`,`Payment`,`CreatedBy`,`CreatedDate`,`UpdatedBy`) values ('0006/Q/2020_REV_00','0006/Q/2020','00','','TRK/RFQ20080001.00','SALES_ORDER','TRK','','-','IDR','CUS00001','CUS00002','-','S001','2020-08-26 13:17:49','BKS','BABE','uhhh','ahhh',1,'APPROVED','MENARILAH','-',10004000.0000,30.0000,3001200.0000,'1900-01-01 00:00:00',7002800.0000,40.0000,2801120.0000,9803920.0000,'duh','aku','suka','kamu','nih','banget','parah','sih','ihh','ADMIN','2020-08-26 13:17:49','');

/*Table structure for table `sal_sales_quotation_detail` */

DROP TABLE IF EXISTS `sal_sales_quotation_detail`;

CREATE TABLE `sal_sales_quotation_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ValveTypeCode` varchar(250) DEFAULT NULL,
  `ValveTag` varchar(250) DEFAULT NULL,
  `DataSheet` varchar(250) DEFAULT NULL,
  `Description` varchar(250) DEFAULT NULL,
  `BodyConstruction` varchar(250) DEFAULT NULL,
  `TypeDesign` varchar(250) DEFAULT NULL,
  `SeatDesign` varchar(250) DEFAULT NULL,
  `Size` varchar(250) DEFAULT NULL,
  `Rating` varchar(250) DEFAULT NULL,
  `Bore` varchar(250) DEFAULT NULL,
  `EndCon` varchar(250) DEFAULT NULL,
  `Body` varchar(250) DEFAULT NULL,
  `Ball` varchar(250) DEFAULT NULL,
  `Seat` varchar(250) DEFAULT NULL,
  `SeatInsert` varchar(250) DEFAULT NULL,
  `Stem` varchar(250) DEFAULT NULL,
  `Seal` varchar(250) DEFAULT NULL,
  `Bolting` varchar(250) DEFAULT NULL,
  `Oper` varchar(250) DEFAULT NULL,
  `Disc` varchar(250) DEFAULT NULL,
  `Plates` varchar(250) DEFAULT NULL,
  `Shaft` varchar(250) DEFAULT NULL,
  `Spring` varchar(250) DEFAULT NULL,
  `ArmPin` varchar(250) DEFAULT NULL,
  `Backseat` varchar(250) DEFAULT NULL,
  `Arm` varchar(250) DEFAULT NULL,
  `HingePin` varchar(250) DEFAULT NULL,
  `StopPin` varchar(250) DEFAULT NULL,
  `Note` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `UnitPrice` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_quotation_detail` */

insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0001/Q/2020_REV_00-001','0001/Q/2020_REV_00','BALL','asd','klj','hj','hj','aaa','sss','dd','ss','cmd','cf','','asd','ewq','k','jhhjk','wqe','xxx','as','','','','','','','','','','sad',1000.0000,10000.0000,10000000.0000,'ADMIN','2020-08-11 11:45:28','ADMIN','2020-08-11 11:45:28');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0001/Q/2020_REV_00-002','0001/Q/2020_REV_00','BALL','abc','dsa','fds','fds','zzz','dd','fda','wqe','sad','fsa','','sad','tnvc','lk','qwex','xzc','ccc','sd','','','','','','','','','','as',20.0000,200.0000,4000.0000,'ADMIN','2020-08-11 11:45:28','ADMIN','2020-08-11 11:45:28');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0002/Q/2020_REV_00-001','0002/Q/2020_REV_00','BALL','asd','klj','hj','hj','aaa','sss','dd','ss','cmd','cf','','asd','ewq','k','jhhjk','wqe','xxx','as','','','','','','','','','','sad',1000.0000,10000.0000,10000000.0000,'ADMIN','2020-08-11 11:46:51','ADMIN','2020-08-11 11:46:51');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0002/Q/2020_REV_00-002','0002/Q/2020_REV_00','BALL','abc','dsa','fds','fds','zzz','dd','fda','wqe','sad','fsa','','sad','tnvc','lk','qwex','xzc','ccc','sd','','','','','','','','','','as',20.0000,200.0000,4000.0000,'ADMIN','2020-08-11 11:46:51','ADMIN','2020-08-11 11:46:51');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0003/Q/2020_REV_00-001','0003/Q/2020_REV_00','GATE','waduh','giman a nih','dih','dih','','','aku','ingin','lagi','maka','bagaimana','','bisa','','begitu','','dih','jah','duh','','','','','','','','','huf',10.0000,1000.0000,10000.0000,'ADMIN','2020-08-11 23:00:37','ADMIN','2020-08-11 23:00:37');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0003/Q/2020_REV_00-002','0003/Q/2020_REV_00','GATE','giman a nih','waduh','jika','jika','','','ingin','bagaimana','maka','lagi','bisa','','begitu','','dih','','huhu','huf','jah','','','','','','','','','jah',20.0000,2000.0000,40000.0000,'ADMIN','2020-08-11 23:00:37','ADMIN','2020-08-11 23:00:37');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0004/Q/2020_REV_00-001','0004/Q/2020_REV_00','BALL','asd','klj','hj','hj','aaa','sss','dd','ss','cmd','cf','','asd','ewq','k','jhhjk','wqe','xxx','as','','','','','','','','','','sad',1000.0000,10000.0000,10000000.0000,'ADMIN','2020-08-14 11:09:11','ADMIN','2020-08-14 11:09:11');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0004/Q/2020_REV_00-002','0004/Q/2020_REV_00','BALL','abc','dsa','fds','fds','zzz','dd','fda','wqe','sad','fsa','','sad','tnvc','lk','qwex','xzc','ccc','sd','','','','','','','','','','as',20.0000,200.0000,4000.0000,'ADMIN','2020-08-14 11:09:12','ADMIN','2020-08-14 11:09:12');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0005/Q/2020_REV_00-001','0005/Q/2020_REV_00','BALL','asd','klj','hj','hj','aaa','sss','dd','ss','cmd','cf','','asd','ewq','k','jhhjk','wqe','xxx','as','','','','','','','','','','sad',1000.0000,10000.0000,10000000.0000,'ADMIN','2020-08-18 11:53:15','ADMIN','2020-08-18 11:53:15');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0005/Q/2020_REV_00-002','0005/Q/2020_REV_00','BALL','abc','dsa','fds','fds','zzz','dd','fda','wqe','sad','fsa','','sad','tnvc','lk','qwex','xzc','ccc','sd','','','','','','','','','','as',20.0000,200.0000,4000.0000,'ADMIN','2020-08-18 11:53:15','ADMIN','2020-08-18 11:53:15');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0006/Q/2020_REV_00-001','0006/Q/2020_REV_00','BALL','asd','klj','hj','hj','aaa','sss','dd','ss','cmd','cf','','asd','ewq','k','jhhjk','wqe','xxx','as','','','','','','','','','','sad',1000.0000,10000.0000,10000000.0000,'ADMIN','2020-08-26 13:17:49','ADMIN','2020-08-26 13:17:49');
insert  into `sal_sales_quotation_detail`(`Code`,`HeaderCode`,`ValveTypeCode`,`ValveTag`,`DataSheet`,`Description`,`BodyConstruction`,`TypeDesign`,`SeatDesign`,`Size`,`Rating`,`Bore`,`EndCon`,`Body`,`Ball`,`Seat`,`SeatInsert`,`Stem`,`Seal`,`Bolting`,`Oper`,`Disc`,`Plates`,`Shaft`,`Spring`,`ArmPin`,`Backseat`,`Arm`,`HingePin`,`StopPin`,`Note`,`Quantity`,`UnitPrice`,`TotalAmount`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('0006/Q/2020_REV_00-002','0006/Q/2020_REV_00','BALL','abc','dsa','fds','fds','zzz','dd','fda','wqe','sad','fsa','','sad','tnvc','lk','qwex','xzc','ccc','sd','','','','','','','','','','as',20.0000,200.0000,4000.0000,'ADMIN','2020-08-26 13:17:49','ADMIN','2020-08-26 13:17:49');

/*Table structure for table `sal_sales_return_by_customer` */

DROP TABLE IF EXISTS `sal_sales_return_by_customer`;

CREATE TABLE `sal_sales_return_by_customer` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `Transactiondate` datetime DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `Refno` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_return_by_customer` */

/*Table structure for table `sal_sales_return_by_customer_cogs` */

DROP TABLE IF EXISTS `sal_sales_return_by_customer_cogs`;

CREATE TABLE `sal_sales_return_by_customer_cogs` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `InTransactionNo` varchar(250) DEFAULT NULL,
  `InDocumentType` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_return_by_customer_cogs` */

/*Table structure for table `sal_sales_return_by_customer_trade_item_detail` */

DROP TABLE IF EXISTS `sal_sales_return_by_customer_trade_item_detail`;

CREATE TABLE `sal_sales_return_by_customer_trade_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `InvoiceCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_return_by_customer_trade_item_detail` */

/*Table structure for table `sal_sales_return_by_delivery_note` */

DROP TABLE IF EXISTS `sal_sales_return_by_delivery_note`;

CREATE TABLE `sal_sales_return_by_delivery_note` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `Transactiondate` datetime DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `DeliveryNoteCode` varchar(250) DEFAULT NULL,
  `SalesOrderCode` varchar(250) DEFAULT NULL,
  `Refno` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_return_by_delivery_note` */

/*Table structure for table `sal_sales_return_by_delivery_note_cogs` */

DROP TABLE IF EXISTS `sal_sales_return_by_delivery_note_cogs`;

CREATE TABLE `sal_sales_return_by_delivery_note_cogs` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `InTransactionNo` varchar(250) DEFAULT NULL,
  `InDocumentType` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_return_by_delivery_note_cogs` */

/*Table structure for table `sal_sales_return_by_delivery_note_trade_item_detail` */

DROP TABLE IF EXISTS `sal_sales_return_by_delivery_note_trade_item_detail`;

CREATE TABLE `sal_sales_return_by_delivery_note_trade_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_return_by_delivery_note_trade_item_detail` */

/*Table structure for table `sal_sales_return_by_picking_list` */

DROP TABLE IF EXISTS `sal_sales_return_by_picking_list`;

CREATE TABLE `sal_sales_return_by_picking_list` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `BranchCode` varchar(250) DEFAULT NULL,
  `WarehouseCode` varchar(250) DEFAULT NULL,
  `Transactiondate` datetime DEFAULT NULL,
  `CustomerCode` varchar(250) DEFAULT NULL,
  `ShipToCode` varchar(250) DEFAULT NULL,
  `SalesOrderCode` varchar(250) DEFAULT NULL,
  `Refno` varchar(250) DEFAULT NULL,
  `Remark` text,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_return_by_picking_list` */

/*Table structure for table `sal_sales_return_by_picking_list_cogs` */

DROP TABLE IF EXISTS `sal_sales_return_by_picking_list_cogs`;

CREATE TABLE `sal_sales_return_by_picking_list_cogs` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(100) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `InTransactionNo` varchar(250) DEFAULT NULL,
  `InDocumentType` varchar(250) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_return_by_picking_list_cogs` */

/*Table structure for table `sal_sales_return_by_picking_list_trade_item_detail` */

DROP TABLE IF EXISTS `sal_sales_return_by_picking_list_trade_item_detail`;

CREATE TABLE `sal_sales_return_by_picking_list_trade_item_detail` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `PickingListSODetailCode` varchar(250) DEFAULT NULL,
  `Quantity` decimal(18,4) DEFAULT NULL,
  `COGSIDR` decimal(18,4) DEFAULT NULL,
  `TotalAmount` decimal(18,4) DEFAULT NULL,
  `RackCode` varchar(250) DEFAULT NULL,
  `ItemCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sal_sales_return_by_picking_list_trade_item_detail` */

/*Table structure for table `scr_authorization` */

DROP TABLE IF EXISTS `scr_authorization`;

CREATE TABLE `scr_authorization` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `ModuleCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `scr_authorization` */

insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_HISTORY','001_PUR_PURCHASE_HISTORY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_ORDER','001_PUR_PURCHASE_ORDER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_ORDER_APPROVAL','001_PUR_PURCHASE_ORDER_APPROVAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_ORDER_CLOSING','001_PUR_PURCHASE_ORDER_CLOSING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST','001_PUR_PURCHASE_REQUEST','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST_CLOSING','001_PUR_PURCHASE_REQUEST_CLOSING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR','001_PUR_PURCHASE_REQUEST_NON_IMR','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR_APPROVAL','001_PUR_PURCHASE_REQUEST_NON_IMR_APPROVAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR_CLOSING','001_PUR_PURCHASE_REQUEST_NON_IMR_CLOSING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_RETURN','001_PUR_PURCHASE_RETURN','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CONTRACT_REVIEW','002_SAL_CONTRACT_REVIEW',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_BLANKET_ORDER','002_SAL_CUSTOMER_BLANKET_ORDER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_BLANKET_ORDER_CLOSING','002_SAL_CUSTOMER_BLANKET_ORDER_CLOSING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_SALES_ORDER','002_SAL_CUSTOMER_SALES_ORDER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING','002_SAL_CUSTOMER_SALES_ORDER_CLOSING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_SALES_ORDER_UNPRICE','002_SAL_CUSTOMER_SALES_ORDER_UNPRICE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT','002_SAL_LIST_OF_APPLICABLE_DOCUMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT_UPLOAD','002_SAL_LIST_OF_APPLICABLE_DOCUMENT_UPLOAD',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_REQUEST_FOR_QUOTATION','002_SAL_REQUEST_FOR_QUOTATION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_SALES_ORDER_APPROVAL','002_SAL_SALES_ORDER_APPROVAL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_SALES_QUOTATION','002_SAL_SALES_QUOTATION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_SALES_QUOTATION_STATUS','002_SAL_SALES_QUOTATION_STATUS',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ADJUSTMENT_IN','003_IVT_ADJUSTMENT_IN','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ADJUSTMENT_IN_APPROVAL','003_IVT_ADJUSTMENT_IN_APPROVAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ADJUSTMENT_OUT','003_IVT_ADJUSTMENT_OUT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ADJUSTMENT_OUT_APPROVAL','003_IVT_ADJUSTMENT_OUT_APPROVAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ASSEMBLY_JOB_ORDER','003_IVT_ASSEMBLY_JOB_ORDER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ASSEMBLY_REALIZATION','003_IVT_ASSEMBLY_REALIZATION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_DELIVERY_NOTE','003_IVT_DELIVERY_NOTE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_DOCK_STOCK','003_IVT_DOCK_STOCK','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_GOODS_RECEIVED_NOTE','003_IVT_GOODS_RECEIVED_NOTE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_PICKING_LIST','003_IVT_PICKING_LIST',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_PICKING_LIST_CONFIRMATION','003_IVT_PICKING_LIST_CONFIRMATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_RACK_MUTATION','003_IVT_RACK_MUTATION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_STOCK_CLOSING','003_IVT_STOCK_CLOSING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_WAREHOUSE_TRANSFER_IN','003_IVT_WAREHOUSE_TRANSFER_IN','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_WAREHOUSE_TRANSFER_OUT','003_IVT_WAREHOUSE_TRANSFER_OUT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_BANK_PAYMENT','004_FIN_BANK_PAYMENT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_BANK_RECEIVED','004_FIN_BANK_RECEIVED','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CASH_PAYMENT','004_FIN_CASH_PAYMENT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CASH_RECEIVED','004_FIN_CASH_RECEIVED','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_CREDIT_NOTE','004_FIN_CUSTOMER_CREDIT_NOTE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_DEBIT_NOTE','004_FIN_CUSTOMER_DEBIT_NOTE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_DEPOSIT_ASSIGNMENT','004_FIN_CUSTOMER_DEPOSIT_ASSIGNMENT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_DOWN_PAYMENT','004_FIN_CUSTOMER_DOWN_PAYMENT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_INVOICE','004_FIN_CUSTOMER_INVOICE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_FINANCE_RECALCULATING','004_FIN_FINANCE_RECALCULATING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GENERAL_JOURNAL','004_FIN_GENERAL_JOURNAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_PAYMENT','004_FIN_GIRO_PAYMENT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_PAYMENT_INQUIRY','004_FIN_GIRO_PAYMENT_INQUIRY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_PAYMENT_REJECT','004_FIN_GIRO_PAYMENT_REJECT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_RECEIVED','004_FIN_GIRO_RECEIVED','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_RECEIVED_INQUIRY','004_FIN_GIRO_RECEIVED_INQUIRY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_RECEIVED_REJECT','004_FIN_GIRO_RECEIVED_REJECT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE','004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE_POSTING','004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE_POSTING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_PAYMENT_HISTORY','004_FIN_PAYMENT_HISTORY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_PAYMENT_REQUEST','004_FIN_PAYMENT_REQUEST','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_PAYMENT_REQUEST_APPROVAL','004_FIN_PAYMENT_REQUEST_APPROVAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_CREDIT_NOTE','004_FIN_VENDOR_CREDIT_NOTE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_DEBIT_NOTE','004_FIN_VENDOR_DEBIT_NOTE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_DEPOSIT_ASSIGNMENT','004_FIN_VENDOR_DEPOSIT_ASSIGNMENT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_DOWN_PAYMENT','004_FIN_VENDOR_DOWN_PAYMENT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_INVOICE','004_FIN_VENDOR_INVOICE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_DEPRECIATION_CLOSING','005_ACC_AMS_ASSET_DEPRECIATION_CLOSING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_DEPRECIATION_POSTING','005_ACC_AMS_ASSET_DEPRECIATION_POSTING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_DISPOSAL','005_ACC_AMS_ASSET_DISPOSAL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_INQUIRY','005_ACC_AMS_ASSET_INQUIRY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_REGISTRATION','005_ACC_AMS_ASSET_REGISTRATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_REGISTRATION_APPROVAL','005_ACC_AMS_ASSET_REGISTRATION_APPROVAL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_KELUARAN','005_ACC_E_FAK_KELUARAN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_MASUKAN','005_ACC_E_FAK_MASUKAN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_TAX_INVOICE_ASSIGNMENT','005_ACC_E_FAK_TAX_INVOICE_ASSIGNMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_TAX_INVOICE_REGISTRATION','005_ACC_E_FAK_TAX_INVOICE_REGISTRATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_UPDATE_TAX_INVOICE','005_ACC_E_FAK_UPDATE_TAX_INVOICE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_VOID_TAX_INVOICE','005_ACC_E_FAK_VOID_TAX_INVOICE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_ACCOUNTING_CLOSING','005_ACC_FIN_STAT_ACCOUNTING_CLOSING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_JOURNAL_POSTING','005_ACC_FIN_STAT_JOURNAL_POSTING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_JOURNAL_QUERY','005_ACC_FIN_STAT_JOURNAL_QUERY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_UN_BALANCE_JOURNAL','005_ACC_FIN_STAT_UN_BALANCE_JOURNAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_UN_DETAIL_JOURNAL','005_ACC_FIN_STAT_UN_DETAIL_JOURNAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_UN_HEADER_JOURNAL','005_ACC_FIN_STAT_UN_HEADER_JOURNAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_VAT_IN','005_ACC_FIN_STAT_VAT_IN','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_VAT_OUT','005_ACC_FIN_STAT_VAT_OUT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ADDITIONAL_FEE','006_MST_ADDITIONAL_FEE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ASSET_CATEGORY','006_MST_ASSET_CATEGORY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_BANK','006_MST_BANK','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_BANK_ACCOUNT','006_MST_BANK_ACCOUNT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_BILL_OF_MATERIAL','006_MST_BILL_OF_MATERIAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_BRANCH','006_MST_BRANCH','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CAD_DOCUMENT_FOR_APPROVAL','006_MST_CAD_DOCUMENT_FOR_APPROVAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CASH_ACCOUNT','006_MST_CASH_ACCOUNT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CHART_OF_ACCOUNT','006_MST_CHART_OF_ACCOUNT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CITY','006_MST_CITY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_COUNTRY','006_MST_COUNTRY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CO_DRIVER','006_MST_CO_DRIVER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CURRENCY','006_MST_CURRENCY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CURRENT_STOCK_COGSIDR','006_MST_CURRENT_STOCK_COGSIDR','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CURRENT_STOCK_QUANTITY','006_MST_CURRENT_STOCK_QUANTITY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CUSTOMER','006_MST_CUSTOMER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CUSTOMER_ADDRESS','006_MST_CUSTOMER_ADDRESS','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CUSTOMER_CATEGORY','006_MST_CUSTOMER_CATEGORY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CUSTOMER_CONTACT','006_MST_CUSTOMER_CONTACT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_DESIGN','006_MST_DCAS_DESIGN','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_FIRE_SAFE_BY_DESIGN','006_MST_DCAS_FIRE_SAFE_BY_DESIGN','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_HYDRO_TEST','006_MST_DCAS_HYDRO_TEST','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_LEGAL_REQUIREMENTS','006_MST_DCAS_LEGAL_REQUIREMENTS','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_MARKING','006_MST_DCAS_MARKING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_NDE','006_MST_DCAS_NDE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_TESTING','006_MST_DCAS_TESTING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_VISUAL_EXAMINATION','006_MST_DCAS_VISUAL_EXAMINATION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DEPARTMENT','006_MST_DEPARTMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DRIVER','006_MST_DRIVER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EDUCATION','006_MST_EDUCATION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE','006_MST_EMPLOYEE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE_ATTRIBUTES','006_MST_EMPLOYEE_ATTRIBUTES',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE_BANK_ACCOUNT','006_MST_EMPLOYEE_BANK_ACCOUNT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE_CATEGORY_STATUS','006_MST_EMPLOYEE_CATEGORY_STATUS',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE_LEVEL','006_MST_EMPLOYEE_LEVEL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EXCHANGE_RATE','006_MST_EXCHANGE_RATE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EXPEDITION','006_MST_EXPEDITION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ISLAND','006_MST_ISLAND','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_ARM_PIN','006_MST_ITEM_ARM_PIN','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BACKSEAT','006_MST_ITEM_BACKSEAT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BALL','006_MST_ITEM_BALL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BODY','006_MST_ITEM_BODY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BODY_CONSTRUCTION','006_MST_ITEM_BODY_CONSTRUCTION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BOLT','006_MST_ITEM_BOLT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BORE','006_MST_ITEM_BORE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BRAND','006_MST_ITEM_BRAND','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_CATEGORY','006_MST_ITEM_CATEGORY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_DISC','006_MST_ITEM_DISC',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_DIVISION','006_MST_ITEM_DIVISION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_END_CON','006_MST_ITEM_END_CON',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_FINISH_GOODS','006_MST_ITEM_FINISH_GOODS','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_MATERIAL','006_MST_ITEM_MATERIAL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_OPERATOR','006_MST_ITEM_OPERATOR','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_PLATES','006_MST_ITEM_PLATES','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_RATING','006_MST_ITEM_RATING','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SEAL','006_MST_ITEM_SEAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SEAT','006_MST_ITEM_SEAT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SEAT_DESIGN','006_MST_ITEM_SEAT_DESIGN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SEAT_INSERT','006_MST_ITEM_SEAT_INSERT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SHAFT','006_MST_ITEM_SHAFT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SIZE','006_MST_ITEM_SIZE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SPRING','006_MST_ITEM_SPRING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_STEM','006_MST_ITEM_STEM','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SUB_CATEGORY','006_MST_ITEM_SUB_CATEGORY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_TYPE_DESIGN','006_MST_ITEM_TYPE_DESIGN','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_JOB_POSITION','006_MST_JOB_POSITION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_JOURNAL','006_MST_JOURNAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_MARITAL_STATUS','006_MST_MARITAL_STATUS',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_PAYMENT_TERM','006_MST_PAYMENT_TERM','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_PROJECT','006_MST_PROJECT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_PROVINCE','006_MST_PROVINCE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_PURCHASE_DESTINATION','006_MST_PURCHASE_DESTINATION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_RACK','006_MST_RACK','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_RACK_ITEM','006_MST_RACK_ITEM','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_RACK_TYPE','006_MST_RACK_TYPE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_REASON','006_MST_REASON','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_RELIGION','006_MST_RELIGION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_SALES_PERSON','006_MST_SALES_PERSON','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_TERM_OF_DELIVERY','006_MST_TERM_OF_DELIVERY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_UNIT_OF_MEASURE','006_MST_UNIT_OF_MEASURE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VALVE_TYPE','006_MST_VALVE_TYPE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VALVE_TYPE_COMPONENT','006_MST_VALVE_TYPE_COMPONENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VENDOR','006_MST_VENDOR','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VENDOR_CATEGORY','006_MST_VENDOR_CATEGORY','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VENDOR_CONTACT','006_MST_VENDOR_CONTACT','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_WAREHOUSE','006_MST_WAREHOUSE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_CHANGE_PASSWORD','007_SCR_CHANGE_PASSWORD','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_DATA_PROTECTION','007_SCR_DATA_PROTECTION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_ROLE','007_SCR_ROLE','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_ROLE_AUTHORIZATION','007_SCR_ROLE_AUTHORIZATION','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_TRANSACTION_LOG','007_SCR_TRANSACTION_LOG','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_USER','007_SCR_USER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER','009_PPIC_PRODUCTION_PLANNING_ORDER','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER_APPROVAL','009_PPIC_PRODUCTION_PLANNING_ORDER_APPROVAL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER_ITEM_BILL_OF_MATERIAL','009_PPIC_PRODUCTION_PLANNING_ORDER_ITEM_BILL_OF_MATERIAL','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('011_ENG_INTERNAL_MEMO','011_ENG_INTERNAL_MEMO','ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_OVERTIME_CALCULATION','012_HRD_PYRL_OVERTIME_CALCULATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_OVERTIME_RECEIPT','012_HRD_PYRL_OVERTIME_RECEIPT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_PERSONAL_CALENDAR','012_HRD_PYRL_PERSONAL_CALENDAR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_CALCULATION','012_HRD_PYRL_SALARY_CALCULATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_EDITING','012_HRD_PYRL_SALARY_EDITING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_PERIOD_CLOSING','012_HRD_PYRL_SALARY_PERIOD_CLOSING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_PERIOD_OPEN','012_HRD_PYRL_SALARY_PERIOD_OPEN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_RECEIPT','012_HRD_PYRL_SALARY_RECEIPT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_WITH_OVERTIME_RECEIPT','012_HRD_PYRL_SALARY_WITH_OVERTIME_RECEIPT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_BALANCE_SHEET__NERACA','051_RPT_ACC_FIN_STAT_BALANCE_SHEET__NERACA',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_GENERAL_LEDGER__BUKU_BESAR','051_RPT_ACC_FIN_STAT_GENERAL_LEDGER__BUKU_BESAR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_JOURNAL_RECAPITULATION','051_RPT_ACC_FIN_STAT_JOURNAL_RECAPITULATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_PROFIT_AND_LOSS__RUGI_LABA','051_RPT_ACC_FIN_STAT_PROFIT_AND_LOSS__RUGI_LABA',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_TRIAL_BALANCE__NERACA_PERCOBAAN','051_RPT_ACC_FIN_STAT_TRIAL_BALANCE__NERACA_PERCOBAAN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_VAT_IN_RECAPITULATION','051_RPT_ACC_FIN_STAT_VAT_IN_RECAPITULATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_VAT_OUT_RECAPITULATION','051_RPT_ACC_FIN_STAT_VAT_OUT_RECAPITULATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT__VOUCHER_RECAPITULATION','051_RPT_ACC_FIN_STAT__VOUCHER_RECAPITULATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_AGING','051_RPT_FIN_AP_AGING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_AGING_PER_VENDOR','051_RPT_FIN_AP_AGING_PER_VENDOR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_BALANCE','051_RPT_FIN_AP_BALANCE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_BALANCE_PER_VENDOR','051_RPT_FIN_AP_BALANCE_PER_VENDOR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_PAYMENT','051_RPT_FIN_AP_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_PAYMENT_PER_VENDOR','051_RPT_FIN_AP_PAYMENT_PER_VENDOR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_AGING','051_RPT_FIN_AR_AGING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_AGING_PER_CUSTOMER','051_RPT_FIN_AR_AGING_PER_CUSTOMER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_AGING_PER_SALESMAN','051_RPT_FIN_AR_AGING_PER_SALESMAN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_BALANCE','051_RPT_FIN_AR_BALANCE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_BALANCE_PER_CUSTOMER','051_RPT_FIN_AR_BALANCE_PER_CUSTOMER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_BALANCE_PER_SALESMAN','051_RPT_FIN_AR_BALANCE_PER_SALESMAN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_SETTLEMENT','051_RPT_FIN_AR_SETTLEMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_SETTLEMENT_PER_CUSTOMER','051_RPT_FIN_AR_SETTLEMENT_PER_CUSTOMER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_SETTLEMENT_PER_SALESMAN','051_RPT_FIN_AR_SETTLEMENT_PER_SALESMAN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_MUTATION','051_RPT_FIN_BANK_MUTATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_PAYMENT','051_RPT_FIN_BANK_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_PAYMENT_PER_BANK_ACCOUNT','051_RPT_FIN_BANK_PAYMENT_PER_BANK_ACCOUNT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_PAYMENT_PER_CHART_OF_ACCOUNT','051_RPT_FIN_BANK_PAYMENT_PER_CHART_OF_ACCOUNT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_RECEIVING','051_RPT_FIN_BANK_RECEIVING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_RECEIVING_PER_BANK_ACCOUNT','051_RPT_FIN_BANK_RECEIVING_PER_BANK_ACCOUNT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_RECEIVING_PER_CHART_OF_ACCOUNT','051_RPT_FIN_BANK_RECEIVING_PER_CHART_OF_ACCOUNT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_MUTATION','051_RPT_FIN_CASH_MUTATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_PAYMENT','051_RPT_FIN_CASH_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_PAYMENT_PER_CASH_ACCOUNT','051_RPT_FIN_CASH_PAYMENT_PER_CASH_ACCOUNT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_PAYMENT_PER_CHART_OF_ACCOUNT','051_RPT_FIN_CASH_PAYMENT_PER_CHART_OF_ACCOUNT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_RECEIVING','051_RPT_FIN_CASH_RECEIVING',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_RECEIVING_PER_CASH_ACCOUNT','051_RPT_FIN_CASH_RECEIVING_PER_CASH_ACCOUNT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_RECEIVING_PER_CHART_OF_ACCOUNT','051_RPT_FIN_CASH_RECEIVING_PER_CHART_OF_ACCOUNT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_BANK_PAYMENT_DOWN_PAYMENT','051_RPT_FIN_OUTSTANDING_BANK_PAYMENT_DOWN_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_BANK_RECEIVED_DOWN_PAYMENT','051_RPT_FIN_OUTSTANDING_BANK_RECEIVED_DOWN_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_CASH_PAYMENT_DOWN_PAYMENT','051_RPT_FIN_OUTSTANDING_CASH_PAYMENT_DOWN_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_CASH_RECEIVED_DOWN_PAYMENT','051_RPT_FIN_OUTSTANDING_CASH_RECEIVED_DOWN_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_DELIVERY_NOTE','051_RPT_FIN_OUTSTANDING_DELIVERY_NOTE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_GOODS_RECEIVED_NOTE','051_RPT_FIN_OUTSTANDING_GOODS_RECEIVED_NOTE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_UNASSIGNED_BANK_PAYMENT_DOWN_PAYMENT','051_RPT_FIN_UNASSIGNED_BANK_PAYMENT_DOWN_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_UNASSIGNED_BANK_RECEIVED_DOWN_PAYMENT','051_RPT_FIN_UNASSIGNED_BANK_RECEIVED_DOWN_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_UNASSIGNED_CASH_PAYMENT_DOWN_PAYMENT','051_RPT_FIN_UNASSIGNED_CASH_PAYMENT_DOWN_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_UNASSIGNED_CASH_RECEIVED_DOWN_PAYMENT','051_RPT_FIN_UNASSIGNED_CASH_RECEIVED_DOWN_PAYMENT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_HRD_PYRL_OVERTIME','051_RPT_HRD_PYRL_OVERTIME',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_HRD_PYRL_SALARY','051_RPT_HRD_PYRL_SALARY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_ASSEMBLY','051_RPT_IVT_ASSEMBLY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DELIVERY_NOTE','051_RPT_IVT_DELIVERY_NOTE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DELIVERY_NOTE_BY_ITEM','051_RPT_IVT_DELIVERY_NOTE_BY_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DELIVERY_NOTE_PER_CUSTOMER','051_RPT_IVT_DELIVERY_NOTE_PER_CUSTOMER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DETAIL_STOCK_BY_COGS_IDR','051_RPT_IVT_DETAIL_STOCK_BY_COGS_IDR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DETAIL_STOCK_BY_QUANTITY','051_RPT_IVT_DETAIL_STOCK_BY_QUANTITY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_GOODS_RECEIVED_NOTE','051_RPT_IVT_GOODS_RECEIVED_NOTE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_ITEM','051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_VENDOR','051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_VENDOR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_IN','051_RPT_IVT_INVENTORY_IN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_IN_PER_ITEM','051_RPT_IVT_INVENTORY_IN_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_IN_PER_REASON','051_RPT_IVT_INVENTORY_IN_PER_REASON',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_OUT','051_RPT_IVT_INVENTORY_OUT',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_OUT_PER_ITEM','051_RPT_IVT_INVENTORY_OUT_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_OUT_PER_REASON','051_RPT_IVT_INVENTORY_OUT_PER_REASON',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_CARD_BY_COGS_IDR','051_RPT_IVT_STOCK_CARD_BY_COGS_IDR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_CARD_BY_QUANTITY','051_RPT_IVT_STOCK_CARD_BY_QUANTITY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_CARD_MINUS_QUANTITY','051_RPT_IVT_STOCK_CARD_MINUS_QUANTITY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_HISTORY_DETAIL','051_RPT_IVT_STOCK_HISTORY_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_HISTORY_GLOBAL','051_RPT_IVT_STOCK_HISTORY_GLOBAL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_NON_SAFE','051_RPT_IVT_STOCK_NON_SAFE',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_OPNAME','051_RPT_IVT_STOCK_OPNAME',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_WAREHOUSE_MUTATION','051_RPT_IVT_WAREHOUSE_MUTATION',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_QUANTITY','051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_QUANTITY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_VALUE_AND_QUANTITY','051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_VALUE_AND_QUANTITY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_DETAIL','051_RPT_PUR_PURCHASE_ORDER_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_HEADER','051_RPT_PUR_PURCHASE_ORDER_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_PER_ITEM','051_RPT_PUR_PURCHASE_ORDER_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_DETAIL','051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_HEADER','051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_QUANTITY','051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_QUANTITY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_VALUE_AND_QUANTITY','051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_VALUE_AND_QUANTITY',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RECAPITULATION_PER_ITEM','051_RPT_PUR_PURCHASE_RECAPITULATION_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RECAPITULATION_PER_VENDOR','051_RPT_PUR_PURCHASE_RECAPITULATION_PER_VENDOR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_REQUEST','051_RPT_PUR_PURCHASE_REQUEST',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_DETAIL','051_RPT_PUR_PURCHASE_RETURN_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_HEADER','051_RPT_PUR_PURCHASE_RETURN_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_PER_ITEM','051_RPT_PUR_PURCHASE_RETURN_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_DETAIL','051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_HEADER','051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_DETAIL','051_RPT_PUR_VENDOR_CREDIT_NOTE_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_HEADER','051_RPT_PUR_VENDOR_CREDIT_NOTE_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_DETAIL','051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_HEADER','051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_DETAIL','051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_HEADER','051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE__DETAIL','051_RPT_PUR_VENDOR_DEBIT_NOTE__DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE__HEADER','051_RPT_PUR_VENDOR_DEBIT_NOTE__HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_DETAIL_','051_RPT_PUR_VENDOR_INVOICE_DETAIL_',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_HEADER','051_RPT_PUR_VENDOR_INVOICE_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_PER_ITEM','051_RPT_PUR_VENDOR_INVOICE_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_DETAIL','051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_HEADER','051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_DETAIL','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_HEADER','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_DETAIL','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_HEADER','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_DETAIL','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_HEADER','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_DETAIL','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_HEADER','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_OUTSTANDING_SALES_ORDER','051_RPT_SAL_OUTSTANDING_SALES_ORDER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_CUSTOMER','051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_CUSTOMER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_ITEM','051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_BY_COGS_IDR_DETAIL','051_RPT_SAL_SALES_BY_COGS_IDR_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_BY_COGS_IDR_HEADER','051_RPT_SAL_SALES_BY_COGS_IDR_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_NON_COGS_IDR_DETAIL','051_RPT_SAL_SALES_NON_COGS_IDR_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_NON_COGS_IDR_HEADER','051_RPT_SAL_SALES_NON_COGS_IDR_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_DETAIL','051_RPT_SAL_SALES_ORDER_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_HEADER','051_RPT_SAL_SALES_ORDER_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_DETAIL','051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_HEADER','051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_PER_ITEM','051_RPT_SAL_SALES_ORDER_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_DETAIL','051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_HEADER','051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_DETAIL','051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_HEADER','051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_ITEM_BY_COGS_IDR','051_RPT_SAL_SALES_PER_ITEM_BY_COGS_IDR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_ITEM_NON_COGS_IDR','051_RPT_SAL_SALES_PER_ITEM_NON_COGS_IDR',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RECAPITULATION_PER_CUSTOMER','051_RPT_SAL_SALES_RECAPITULATION_PER_CUSTOMER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RECAPITULATION_PER_ITEM','051_RPT_SAL_SALES_RECAPITULATION_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RECAPITULATION_PER_SALESMAN','051_RPT_SAL_SALES_RECAPITULATION_PER_SALESMAN',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_DETAIL','051_RPT_SAL_SALES_RETURN_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_HEADER','051_RPT_SAL_SALES_RETURN_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_DETAIL','051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_HEADER','051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_HEADER',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_ITEM','051_RPT_SAL_SALES_RETURN_PER_ITEM',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_SALESMAN_DETAIL','051_RPT_SAL_SALES_RETURN_PER_SALESMAN_DETAIL',NULL,NULL,NULL,NULL);
insert  into `scr_authorization`(`Code`,`ModuleCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_SALESMAN_HEADER','051_RPT_SAL_SALES_RETURN_PER_SALESMAN_HEADER',NULL,NULL,NULL,NULL);

/*Table structure for table `scr_menu` */

DROP TABLE IF EXISTS `scr_menu`;

CREATE TABLE `scr_menu` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Classes` varchar(250) DEFAULT NULL,
  `ParentCode` varchar(250) DEFAULT NULL,
  `Text` varchar(250) DEFAULT NULL,
  `Link` varchar(250) DEFAULT NULL,
  `SortNo` decimal(18,0) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `scr_menu` */

insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR','folder','','PURCHASE','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_HISTORY','file','001_PUR','PURCHASE_HISTORY','purchasing/purchase-history',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_ORDER','file','001_PUR','PURCHASE_ORDER','purchasing/purchase-order',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_ORDER_APPROVAL','file','001_PUR','PURCHASE_ORDER_APPROVAL','purchasing/purchase-order-approval',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_ORDER_CLOSING','file','001_PUR','PURCHASE_ORDER_CLOSING','purchasing/purchase-order-closing',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_REQUEST','file','001_PUR','PURCHASE_REQUEST','purchasing/purchase-request',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_REQUEST_APPROVAL','file','001_PUR','PURCHASE_REQUEST_APPROVAL','purchasing/purchase-request-approval',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_REQUEST_CLOSING','file','001_PUR','PURCHASE_REQUEST_CLOSING','purchasing/purchase-request-closing',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR','file','001_PUR','PURCHASE_REQUEST_NON_IMR','purchasing/purchase-request-non-item-material-request',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR_APPROVAL','file','001_PUR','PURCHASE_REQUEST_NON_IMR_APPROVAL','purchasing/purchase-request-non-item-material-request-approval',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR_CLOSING','file','001_PUR','PURCHASE_REQUEST_NON_IMR_CLOSING','purchasing/purchase-request-non-item-material-request-closing',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('001_PUR_PURCHASE_RETURN','file','001_PUR','PURCHASE_RETURN','purchasing/purchase-return',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL','folder','','SALES','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_CONTRACT_REVIEW','file','002_SAL','CONTRACT_REVIEW','sales/contract-review',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_CUSTOMER_BLANKET_ORDER','file','002_SAL','BLANKET_ORDER','sales/customer-blanket-order',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_CUSTOMER_BLANKET_ORDER_CLOSING','file','002_SAL','BLANKET_ORDER_CLOSING','sales/customer-blanket-order-closing',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','file','002_SAL','CUSTOMER_PURCHASE_ORDER_RELEASE','sales/customer-purchase-order-release',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','file','002_SAL','CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','sales/customer-purchase-order-to-blanket-order',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','file','002_SAL','CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','sales/customer-purchase-order-to-sales-order',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_CUSTOMER_SALES_ORDER','file','002_SAL','SALES_ORDER','sales/customer-sales-order',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING','file','002_SAL','SALES_ORDER_CLOSING','sales/customer-sales-order-closing',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_CUSTOMER_SALES_ORDER_UNPRICE','file','002_SAL','SALES_ORDER_UNPRICE','sales/customer-sales-order-unprice',13);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT','file','002_SAL','LIST_OF_APPLICABLE_DOCUMENT','sales/list-of-applicable-document',14);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT_UPLOAD','file','002_SAL','LIST_OF_APPLICABLE_DOCUMENT_UPLOAD','sales/list-of-applicable-document-upload',15);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_REQUEST_FOR_QUOTATION','file','002_SAL','REQUEST_FOR_QUOTATION','sales/request-for-quotation',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','file','002_SAL','REQUEST_FOR_QUOTATION_APPROVAL','sales/request-for-quotation-approval',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_SALES_QUOTATION','file','002_SAL','SALES_QUOTATION','sales/sales-quotation',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('002_SAL_SALES_QUOTATION_STATUS','file','002_SAL','SALES_QUOTATION_STATUS','sales/sales-quotation-status',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT','folder','','INVENTORY','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_ADJUSTMENT_IN','file','003_IVT','ADJUSTMENT_IN','inventory/adjustment-in',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_ADJUSTMENT_IN_APPROVAL','file','003_IVT','ADJUSTMENT_IN_APPROVAL','inventory/adjustment-in-approval',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_ADJUSTMENT_OUT','file','003_IVT','ADJUSTMENT_OUT','inventory/adjustment-out',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_ADJUSTMENT_OUT_APPROVAL','file','003_IVT','ADJUSTMENT_OUT_APPROVAL','inventory/adjustment-out-approval',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_ASSEMBLY_JOB_ORDER','file','003_IVT','ASSEMBLY_JOB_ORDER','inventory/assembly-job-order',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_ASSEMBLY_REALIZATION','file','003_IVT','ASSEMBLY_REALIZATION','inventory/assembly-realization',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_DELIVERY_NOTE','file','003_IVT','DELIVERY_NOTE','inventory/delivery-note',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_DOCK_STOCK','file','003_IVT','DOCK_STOCK','inventory/dock-stock',15);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_GOODS_RECEIVED_NOTE','file','003_IVT','GOODS_RECEIVED_NOTE','inventory/goods-received-note',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','file','003_IVT','GOODS_RECEIVED_NOTE_CONFIRMATION','inventory/goods-received-note-confirmation',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_PICKING_LIST','file','003_IVT','PICKING_LIST','inventory/picking-list',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_PICKING_LIST_CONFIRMATION','file','003_IVT','PICKING_LIST_CONFIRMATION','inventory/picking-list-confirmation',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_RACK_MUTATION','file','003_IVT','RACK_MUTATION','inventory/rack-mutation',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_STOCK_CLOSING','file','003_IVT','STOCK_CLOSING','inventory/stock-closing',16);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_WAREHOUSE_TRANSFER_IN','file','003_IVT','WAREHOUSE_TRANSFER_IN','inventory/warehouse-transfer-in',14);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('003_IVT_WAREHOUSE_TRANSFER_OUT','file','003_IVT','WAREHOUSE_TRANSFER_OUT','inventory/warehouse-transfer-out',13);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN','folder','','FINANCE','',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_AP','folder','004_FIN','ACCOUNT_PAYABLE','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_AR','folder','004_FIN','ACCOUNT_RECEIVABLE','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_BANK_PAYMENT','file','004_FIN_AP','BANK_PAYMENT','finance/bank-payment',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_BANK_RECEIVED','file','004_FIN_AR','BANK_RECEIVED','finance/bank-received',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_CASH_PAYMENT','file','004_FIN_AP','CASH_PAYMENT','finance/cash-payment',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_CASH_RECEIVED','file','004_FIN_AR','CASH_RECEIVED','finance/cash-received',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_CUSTOMER_CREDIT_NOTE','file','004_FIN_AR','CUSTOMER_CREDIT_NOTE','finance/customer-credit-note',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_CUSTOMER_DEBIT_NOTE','file','004_FIN_AR','CUSTOMER_DEBIT_NOTE','finance/customer-debit-note',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_CUSTOMER_DEPOSIT_ASSIGNMENT','file','004_FIN_AR','CUSTOMER_DEPOSIT_ASSIGNMENT','finance/customer-deposit-assignment',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_CUSTOMER_DOWN_PAYMENT','file','004_FIN_AR','CUSTOMER_DOWN_PAYMENT','finance/customer-down-payment',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_CUSTOMER_INVOICE','file','004_FIN_AR','CUSTOMER_INVOICE','finance/customer-invoice',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_FINANCE_RECALCULATING','file','004_FIN','FINANCE_RECALCULATING','finance/finance-recalculating',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_GENERAL_JOURNAL','file','004_FIN','GENERAL_JOURNAL','finance/general-journal',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_GIRO_PAYMENT','file','004_FIN_AP','GIRO_PAYMENT','finance/giro-payment',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_GIRO_PAYMENT_INQUIRY','file','004_FIN_AP','GIRO_PAYMENT_INQUIRY','finance/giro-payment-inquiry',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_GIRO_PAYMENT_REJECT','file','004_FIN_AP','GIRO_PAYMENT_REJECT','finance/giro-payment-reject',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_GIRO_RECEIVED','file','004_FIN_AR','GIRO_RECEIVED','finance/giro-received',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_GIRO_RECEIVED_INQUIRY','file','004_FIN_AR','GIRO_RECEIVED_INQUIRY','finance/giro-received-inquiry',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_GIRO_RECEIVED_REJECT','file','004_FIN_AR','GIRO_RECEIVED_REJECT','finance/giro-received-reject',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE','file','004_FIN_AP','GOODS_RECEIVED_NOTE_ADD_FEE','finance/goods-received-note-add-fee',13);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE_POSTING','file','004_FIN_AP','GOODS_RECEIVED_NOTE_ADD_FEE_POSTING','finance/goods-received-note-add-fee-posting',14);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_PAYMENT_HISTORY','file','004_FIN','PAYMENT_HISTORY','finance/payment-history',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_PAYMENT_REQUEST','file','004_FIN_AP','PAYMENT_REQUEST','finance/payment-request',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_PAYMENT_REQUEST_APPROVAL','file','004_FIN_AP','PAYMENT_REQUEST_APPROVAL','finance/payment-request-approval',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_VENDOR_CREDIT_NOTE','file','004_FIN_AP','VENDOR_CREDIT_NOTE','finance/vendor-credit-note',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_VENDOR_DEBIT_NOTE','file','004_FIN_AP','VENDOR_DEBIT_NOTE','finance/vendor-debit-note',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_VENDOR_DEPOSIT_ASSIGNMENT','file','004_FIN_AP','VENDOR_DEPOSIT_ASSIGNMENT','finance/vendor-deposit-assignment',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_VENDOR_DOWN_PAYMENT','file','004_FIN_AP','VENDOR_DOWN_PAYMENT','finance/vendor-down-payment',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('004_FIN_VENDOR_INVOICE','file','004_FIN_AP','VENDOR_INVOICE','finance/vendor-invoice',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC','folder','','ACCOUNTING','',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_AMS','folder','005_ACC','ASSET_MANAGEMENT','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_AMS_ASSET_DEPRECIATION_CLOSING','file','005_ACC_AMS','ASSET_DEPRECIATION_CLOSING','asset-management/asset-depreciation-closing',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_AMS_ASSET_DEPRECIATION_POSTING','file','005_ACC_AMS','ASSET_DEPRECIATION_POSTING','asset-management/asset-depreciation-posting',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_AMS_ASSET_DISPOSAL','file','005_ACC_AMS','ASSET_DISPOSAL','asset-management/asset-disposal',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_AMS_ASSET_INQUIRY','file','005_ACC_AMS','ASSET_INQUIRY','asset-management/asset-inquiry',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_AMS_ASSET_REGISTRATION','file','005_ACC_AMS','ASSET_REGISTRATION','asset-management/asset-registration',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_AMS_ASSET_REGISTRATION_APPROVAL','file','005_ACC_AMS','ASSET_REGISTRATION_APPROVAL','asset-management/asset-registration-approval',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_E_FAK','folder','005_ACC','E-FAKTUR','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_E_FAK_KELUARAN','file','005_ACC_E_FAK','KELUARAN','e-faktur/keluaran',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_E_FAK_MASUKAN','file','005_ACC_E_FAK','MASUKAN','e-faktur/masukan',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_E_FAK_TAX_INVOICE_ASSIGNMENT','file','005_ACC_E_FAK','TAX_INVOICE_ASSIGNMENT','e-faktur/tax-invoice-assignment',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_E_FAK_TAX_INVOICE_REGISTRATION','file','005_ACC_E_FAK','TAX_INVOICE_REGISTRATION','e-faktur/tax-invoice-registration',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_E_FAK_UPDATE_TAX_INVOICE','file','005_ACC_E_FAK','UPDATE_TAX_INVOICE','e-faktur/update-tax-invoice',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_E_FAK_VOID_TAX_INVOICE','file','005_ACC_E_FAK','VOID_TAX_INVOICE','e-faktur/void-tax-invoice',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_FIN_STAT','folder','005_ACC','FINANCIAL_STATEMENTS','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_FIN_STAT_ACCOUNTING_CLOSING','file','005_ACC_FIN_STAT','ACCOUNTING_CLOSING','accounting/accounting-closing',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_FIN_STAT_JOURNAL_POSTING','file','005_ACC_FIN_STAT','JOURNAL_POSTING','accounting/journal-posting',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_FIN_STAT_JOURNAL_QUERY','file','005_ACC_FIN_STAT','JOURNAL_QUERY','accounting/journal-query',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_FIN_STAT_UN_BALANCE_JOURNAL','file','005_ACC_FIN_STAT','UN_BALANCE_JOURNAL','accounting/journal-un-balance',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_FIN_STAT_UN_DETAIL_JOURNAL','file','005_ACC_FIN_STAT','UN_DETAIL_JOURNAL','accounting/journal-un-detail',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_FIN_STAT_UN_HEADER_JOURNAL','file','005_ACC_FIN_STAT','UN_HEADER_JOURNAL','accounting/journal-un-header',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_FIN_STAT_VAT_IN','file','005_ACC_FIN_STAT','VAT_IN','accounting/vat-in',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('005_ACC_FIN_STAT_VAT_OUT','file','005_ACC_FIN_STAT','VAT_OUT','accounting/vat-out',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST','folder','','MASTER','',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ACC','folder','006_MST','ACCOUNTING','',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ADDITIONAL_FEE','file','006_MST_ACC','ADDITIONAL_FEE','master/additional-fee',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ASSET_CATEGORY','file','006_MST_ACC','ASSET_CATEGORY','master/asset-category',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_BANK','file','006_MST_FIN','BANK','master/bank',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_BANK_ACCOUNT','file','006_MST_FIN','BANK_ACCOUNT','master/bank-account',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_BILL_OF_MATERIAL','file','006_MST_ENG','BILL_OF_MATERIAL','master/bill-of-material',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_BRANCH','file','006_MST_IT','BRANCH','master/branch',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CAD_DOCUMENT_FOR_APPROVAL','file','006_MST_SAL','CAD_DOCUMENT_FOR_APPROVAL','master/cad-document-for-approval',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CASH_ACCOUNT','file','006_MST_FIN','CASH_ACCOUNT','master/cash-account',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CHART_OF_ACCOUNT','file','006_MST_ACC','CHART_OF_ACCOUNT','master/chart-of-account',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CITY','file','006_MST_IT','CITY','master/city',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_COUNTRY','file','006_MST_IT','COUNTRY','master/country',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CO_DRIVER','file','006_MST_HRD','CO_DRIVER','master/co-driver',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CURRENCY','file','006_MST_IT','CURRENCY','master/currency',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CURRENT_STOCK_COGSIDR','file','006_MST_IVT','CURRENT_STOCK_COGSIDR','master/current-stock-cogsidr',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CURRENT_STOCK_QUANTITY','file','006_MST_IVT','CURRENT_STOCK_QUANTITY','master/current-stock-quantity',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CUSTOMER','file','006_MST_SAL','CUSTOMER','master/customer',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CUSTOMER_ADDRESS','file','006_MST_SAL','CUSTOMER_ADDRESS','master/customer-address',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CUSTOMER_CATEGORY','file','006_MST_SAL','CUSTOMER_CATEGORY','master/customer-category',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_CUSTOMER_CONTACT','file','006_MST_SAL','CUSTOMER_CONTACT','master/customer-contact',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DCAS_DESIGN','file','006_MST_SAL','DCAS_DESIGN','master/dcas-design',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DCAS_FIRE_SAFE_BY_DESIGN','file','006_MST_SAL','DCAS_FIRE_SAFE_BY_DESIGN','master/dcas-fire-safe-by-design',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DCAS_HYDRO_TEST','file','006_MST_SAL','DCAS_HYDRO_TEST','master/dcas-hydro-test',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DCAS_LEGAL_REQUIREMENTS','file','006_MST_SAL','DCAS_LEGAL_REQUIREMENTS','master/dcas-legal-requirements',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DCAS_MARKING','file','006_MST_SAL','DCAS_MARKING','master/dcas-marking',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DCAS_NDE','file','006_MST_SAL','DCAS_NDE','master/dcas-nde',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DCAS_TESTING','file','006_MST_SAL','DCAS_TESTING','master/dcas-testing',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DCAS_VISUAL_EXAMINATION','file','006_MST_SAL','DCAS_VISUAL_EXAMINATION','master/dcas-visual-examination',13);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DEPARTMENT','file','006_MST_HRD','DEPARTMENT','master/department',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_DRIVER','file','006_MST_HRD','DRIVER','master/driver',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_EDUCATION','file','006_MST_HRD','EDUCATION','master/education',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_EMPLOYEE','file','006_MST_HRD','EMPLOYEE','master/employee',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_EMPLOYEE_ATTRIBUTES','file','006_MST_HRD','EMPLOYEE_ATTRIBUTES','master/employee-attributes',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_EMPLOYEE_BANK_ACCOUNT','file','006_MST_HRD','EMPLOYEE_BANK_ACCOUNT','master/employee-bank-account',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_EMPLOYEE_CATEGORY_STATUS','file','006_MST_HRD','EMPLOYEE_CATEGORY_STATUS','master/employee-category-status',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_EMPLOYEE_LEVEL','file','006_MST_HRD','EMPLOYEE_LEVEL','master/employee-level',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ENG','folder','006_MST','ENGINEERING','',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_EXCHANGE_RATE','file','006_MST_FIN','EXCHANGE_RATE','master/exchange-rate',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_EXPEDITION','file','006_MST_PUR','EXPEDITION','master/expedition',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_FIN','folder','006_MST','FINANCE','',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_HRD','folder','006_MST','HUMAN_RESOURCE','',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ISLAND','file','006_MST_IT','ISLAND','master/island',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_IT','folder','006_MST','INFORMATION_TECHNOLOGY','',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_ARM','file','006_MST_ENG','ITEM_ARM','master/item-arm',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_ARM_PIN','file','006_MST_ENG','ITEM_ARM_PIN','master/item-arm-pin',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_BACKSEAT','file','006_MST_ENG','ITEM_BACKSEAT','master/item-backseat',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_BALL','file','006_MST_ENG','ITEM_BALL','master/item-ball',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_BODY','file','006_MST_ENG','ITEM_BODY','master/item-body',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_BODY_CONSTRUCTION','file','006_MST_ENG','ITEM_BODY_CONSTRUCTION','master/item-body-construction',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_BOLT','file','006_MST_ENG','ITEM_BOLT','master/item-bolt',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_BORE','file','006_MST_ENG','ITEM_BORE','master/item-bore',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_BRAND','file','006_MST_PUR','ITEM_BRAND','master/item-brand',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_CATEGORY','file','006_MST_PUR','ITEM_CATEGORY','master/item-category',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_DISC','file','006_MST_ENG','ITEM_DISC','master/item-disc',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_DIVISION','file','006_MST_PUR','ITEM_DIVISION','master/item-division',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_END_CON','file','006_MST_ENG','ITEM_END_CON','master/item-end-con',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_FINISH_GOODS','file','006_MST_ENG','ITEM_FINISH_GOODS','master/item-finish-goods',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_HINGE_PIN','file','006_MST_ENG','ITEM_HINGE_PIN','master/item-hinge-pin',13);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_MATERIAL','file','006_MST_PUR','ITEM_MATERIAL','master/item-material',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_OPERATOR','file','006_MST_ENG','ITEM_OPERATOR','master/item-operator',14);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_PLATES','file','006_MST_ENG','ITEM_PLATES','master/item-plates',15);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_RATING','file','006_MST_ENG','ITEM_RATING','master/item-rating',16);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_SEAL','file','006_MST_ENG','ITEM_SEAL','master/item-seal',17);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_SEAT','file','006_MST_ENG','ITEM_SEAT','master/item-seat',18);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_SEAT_DESIGN','file','006_MST_ENG','ITEM_SEAT_DESIGN','master/item-seat-design',19);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_SEAT_INSERT','file','006_MST_ENG','ITEM_SEAT_INSERT','master/item-seat-insert',20);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_SHAFT','file','006_MST_ENG','ITEM_SHAFT','master/item-shaft',21);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_SIZE','file','006_MST_ENG','ITEM_SIZE','master/item-size',22);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_SPRING','file','006_MST_ENG','ITEM_SPRING','master/item-spring',23);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_STEM','file','006_MST_ENG','ITEM_STEM','master/item-stem',24);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_STOP_PIN','file','006_MST_ENG','ITEM_STOP_PIN','master/item-stop-pin',25);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_SUB_CATEGORY','file','006_MST_PUR','ITEM_SUB_CATEGORY','master/item-sub-category',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_ITEM_TYPE_DESIGN','file','006_MST_ENG','ITEM_TYPE_DESIGN','master/item-type-design',26);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_IVT','folder','006_MST','INVENTORY','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_JOB_POSITION','file','006_MST_HRD','JOB_POSITION','master/job-position',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_JOURNAL','file','006_MST_ACC','JOURNAL','master/journal',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_MARITAL_STATUS','file','006_MST_HRD','MARITAL_STATUS','master/marital-status',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_MNF','folder','006_MST','MANUFACTURE','',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_PAYMENT_TERM','file','006_MST_IT','PAYMENT_TERM','master/payment-term',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_PPIC','folder','006_MST','PPIC','',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_PROJECT','file','006_MST_SAL','PROJECT','master/project',14);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_PROVINCE','file','006_MST_IT','PROVINCE','master/province',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_PUR','folder','006_MST','PURCHASE','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_PURCHASE_DESTINATION','file','006_MST_PUR','PURCHASE_DESTINATION','master/purchase-destination',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_RACK','file','006_MST_IVT','RACK','master/rack',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_RACK_ITEM','file','006_MST_IVT','RACK_ITEM','master/rack-item',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_RACK_TYPE','file','006_MST_IVT','RACK_TYPE','master/rack-type',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_REASON','file','006_MST_IT','REASON','master/reason',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_RELIGION','file','006_MST_HRD','RELIGION','master/religion',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_SAL','folder','006_MST','SALES','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_SALES_PERSON','file','006_MST_SAL','SALES_PERSON','master/sales-person',15);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_TERM_OF_DELIVERY','file','006_MST_SAL','TERM_OF_DELIVERY','master/term-of-delivery',16);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_UNIT_OF_MEASURE','file','006_MST_IT','UNIT_OF_MEASURE','master/unit-of-measure',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_VALVE_TYPE','file','006_MST_ENG','VALVE_TYPE','master/valve-type',27);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_VALVE_TYPE_COMPONENT','file','006_MST_ENG','VALVE_TYPE_COMPONENT','master/valve-type-component',28);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_VENDOR','file','006_MST_PUR','VENDOR','master/vendor',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_VENDOR_CATEGORY','file','006_MST_PUR','VENDOR_CATEGORY','master/vendor-category',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_VENDOR_CONTACT','file','006_MST_PUR','VENDOR_CONTACT','master/vendor-contact',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('006_MST_WAREHOUSE','file','006_MST_IVT','WAREHOUSE','master/warehouse',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('007_SCR','folder','','SECURITY','',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('007_SCR_CHANGE_PASSWORD','file','007_SCR','CHANGE_PASSWORD','security/change-password',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('007_SCR_DATA_PROTECTION','file','007_SCR','DATA_PROTECTION','security/data-protection',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('007_SCR_ROLE','file','007_SCR','ROLE','security/role',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('007_SCR_ROLE_AUTHORIZATION','file','007_SCR','ROLE_AUTHORIZATION','security/role-authorization',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('007_SCR_TRANSACTION_LOG','file','007_SCR','TRANSACTION_LOG','security/transaction-log',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('007_SCR_USER','file','007_SCR','USER','security/user',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('009_PPIC','folder','','PPIC','',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER','file','009_PPIC','PRODUCTION_PLANNING_ORDER','ppic/production-planning-order',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER_APPROVAL','file','009_PPIC','PRODUCTION_PLANNING_ORDER_APPROVAL','ppic/production-planning-order-approval',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER_ITEM_BILL_OF_MATERIAL','file','009_PPIC','PRODUCTION_PLANNING_ORDER_ITEM_BILL_OF_MATERIAL','ppic/production-planning-order-item-bill-of-material',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER_ITEM_BILL_OF_MATERIAL_PART','file','009_PPIC','PRODUCTION_PLANNING_ORDER_ITEM_BILL_OF_MATERIAL_PART','ppic/production-planning-order-item-bill-of-material-part',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('010_MNF','folder','','MANUFACTURE','',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('011_ENG','folder','','ENGINEERING','',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('011_ENG_INTERNAL_MEMO','file','011_ENG','INTERNAL_MEMO','engineering/internal-memo',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD','folder','','HUMAN_RESOURCE','',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL','folder','012_HRD','PAYROLL','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_OVERTIME_CALCULATION','file','012_HRD_PYRL','OVERTIME_CALCULATION','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_OVERTIME_RECEIPT','file','012_HRD_PYRL_RECEIPT','OVERTIME','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_PERSONAL_CALENDAR','file','012_HRD_PYRL','PERSONAL_CALENDAR','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_RECEIPT','folder','012_HRD_PYRL','RECEIPT','',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_SALARY_CALCULATION','file','012_HRD_PYRL','SALARY_CALCULATION','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_SALARY_EDITING','file','012_HRD_PYRL','SALARY_EDITING','',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_SALARY_PERIOD_CLOSING','file','012_HRD_PYRL','SALARY_PERIOD_CLOSING','',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_SALARY_PERIOD_OPEN','file','012_HRD_PYRL','SALARY_PERIOD_OPEN','',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_SALARY_RECEIPT','file','012_HRD_PYRL_RECEIPT','SALARY','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('012_HRD_PYRL_SALARY_WITH_OVERTIME_RECEIPT','file','012_HRD_PYRL_RECEIPT','SALARY_WITH_OVERTIME','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT','folder','','REPORTS','',21);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC','folder','051_RPT','ACCOUNTING','',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_AMS','folder','051_RPT_ACC','ASSET MANAGEMENT','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_FIN_STAT','folder','051_RPT_ACC','FINANCIAL_STATEMENTS','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_FIN_STAT_BALANCE_SHEET__NERACA','file','051_RPT_ACC_FIN_STAT','BALANCE_SHEET_/_NERACA','',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_FIN_STAT_GENERAL_LEDGER__BUKU_BESAR','file','051_RPT_ACC_FIN_STAT','GENERAL_LEDGER_/_BUKU_BESAR','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_FIN_STAT_JOURNAL_RECAPITULATION','file','051_RPT_ACC_FIN_STAT','JOURNAL_RECAPITULATION','',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_FIN_STAT_PROFIT_AND_LOSS__RUGI_LABA','file','051_RPT_ACC_FIN_STAT','PROFIT_AND_LOSS_/_RUGI_LABA','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_FIN_STAT_TRIAL_BALANCE__NERACA_PERCOBAAN','file','051_RPT_ACC_FIN_STAT','TRIAL_BALANCE_/_NERACA_PERCOBAAN','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_FIN_STAT_VAT_IN_RECAPITULATION','file','051_RPT_ACC_FIN_STAT','VAT_IN_RECAPITULATION','',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_FIN_STAT_VAT_OUT_RECAPITULATION','file','051_RPT_ACC_FIN_STAT','VAT_OUT_RECAPITULATION','',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ACC_FIN_STAT__VOUCHER_RECAPITULATION','file','051_RPT_ACC_FIN_STAT','_VOUCHER_RECAPITULATION','',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_ENG','folder','051_RPT','ENGINEERING','',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN','folder','051_RPT','FINANCE','',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AP_AGING','file','051_RPT_FIN','A/P_AGING','',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AP_AGING_PER_VENDOR','file','051_RPT_FIN','A/P_AGING_PER_VENDOR','',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AP_BALANCE','file','051_RPT_FIN','A/P_BALANCE','',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AP_BALANCE_PER_VENDOR','file','051_RPT_FIN','A/P_BALANCE_PER_VENDOR','',13);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AP_PAYMENT','file','051_RPT_FIN','A/P_PAYMENT','',14);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AP_PAYMENT_PER_VENDOR','file','051_RPT_FIN','A/P_PAYMENT_PER_VENDOR','',15);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AR_AGING','file','051_RPT_FIN','A/R_AGING','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AR_AGING_PER_CUSTOMER','file','051_RPT_FIN','A/R_AGING_PER_CUSTOMER','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AR_AGING_PER_SALESMAN','file','051_RPT_FIN','A/R_AGING_PER_SALESMAN','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AR_BALANCE','file','051_RPT_FIN','A/R_BALANCE','',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AR_BALANCE_PER_CUSTOMER','file','051_RPT_FIN','A/R_BALANCE_PER_CUSTOMER','',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AR_BALANCE_PER_SALESMAN','file','051_RPT_FIN','A/R_BALANCE_PER_SALESMAN','',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AR_SETTLEMENT','file','051_RPT_FIN','A/R_SETTLEMENT','',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AR_SETTLEMENT_PER_CUSTOMER','file','051_RPT_FIN','A/R_SETTLEMENT_PER_CUSTOMER','',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_AR_SETTLEMENT_PER_SALESMAN','file','051_RPT_FIN','A/R_SETTLEMENT_PER_SALESMAN','',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_BANK_MUTATION','file','051_RPT_FIN','BANK_MUTATION','',28);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_BANK_PAYMENT','file','051_RPT_FIN','BANK_PAYMENT','',25);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_BANK_PAYMENT_PER_BANK_ACCOUNT','file','051_RPT_FIN','BANK_PAYMENT_PER_BANK_ACCOUNT','',26);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_BANK_PAYMENT_PER_CHART_OF_ACCOUNT','file','051_RPT_FIN','BANK_PAYMENT_PER_CHART_OF_ACCOUNT','',27);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_BANK_RECEIVING','file','051_RPT_FIN','BANK_RECEIVING','',19);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_BANK_RECEIVING_PER_BANK_ACCOUNT','file','051_RPT_FIN','BANK_RECEIVING_PER_BANK_ACCOUNT','',20);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_BANK_RECEIVING_PER_CHART_OF_ACCOUNT','file','051_RPT_FIN','BANK_RECEIVING_PER_CHART_OF_ACCOUNT','',21);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_CASH_MUTATION','file','051_RPT_FIN','CASH_MUTATION','',29);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_CASH_PAYMENT','file','051_RPT_FIN','CASH_PAYMENT','',22);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_CASH_PAYMENT_PER_CASH_ACCOUNT','file','051_RPT_FIN','CASH_PAYMENT_PER_CASH_ACCOUNT','',23);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_CASH_PAYMENT_PER_CHART_OF_ACCOUNT','file','051_RPT_FIN','CASH_PAYMENT_PER_CHART_OF_ACCOUNT','',24);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_CASH_RECEIVING','file','051_RPT_FIN','CASH_RECEIVING','',16);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_CASH_RECEIVING_PER_CASH_ACCOUNT','file','051_RPT_FIN','CASH_RECEIVING_PER_CASH_ACCOUNT','',17);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_CASH_RECEIVING_PER_CHART_OF_ACCOUNT','file','051_RPT_FIN','CASH_RECEIVING_PER_CHART_OF_ACCOUNT','',18);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_OUTSTANDING_BANK_PAYMENT_DOWN_PAYMENT','file','051_RPT_FIN','OUTSTANDING_BANK_PAYMENT_DOWN_PAYMENT','',33);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_OUTSTANDING_BANK_RECEIVED_DOWN_PAYMENT','file','051_RPT_FIN','OUTSTANDING_BANK_RECEIVED_DOWN_PAYMENT','',32);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_OUTSTANDING_CASH_PAYMENT_DOWN_PAYMENT','file','051_RPT_FIN','OUTSTANDING_CASH_PAYMENT_DOWN_PAYMENT','',35);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_OUTSTANDING_CASH_RECEIVED_DOWN_PAYMENT','file','051_RPT_FIN','OUTSTANDING_CASH_RECEIVED_DOWN_PAYMENT','',34);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_OUTSTANDING_DELIVERY_NOTE','file','051_RPT_FIN','OUTSTANDING_DELIVERY_NOTE','',31);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_OUTSTANDING_GOODS_RECEIVED_NOTE','file','051_RPT_FIN','OUTSTANDING_GOODS_RECEIVED_NOTE','',30);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_UNASSIGNED_BANK_PAYMENT_DOWN_PAYMENT','file','051_RPT_FIN','UNASSIGNED_BANK_PAYMENT_DOWN_PAYMENT','',37);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_UNASSIGNED_BANK_RECEIVED_DOWN_PAYMENT','file','051_RPT_FIN','UNASSIGNED_BANK_RECEIVED_DOWN_PAYMENT','',36);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_UNASSIGNED_CASH_PAYMENT_DOWN_PAYMENT','file','051_RPT_FIN','UNASSIGNED_CASH_PAYMENT_DOWN_PAYMENT','',39);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_FIN_UNASSIGNED_CASH_RECEIVED_DOWN_PAYMENT','file','051_RPT_FIN','UNASSIGNED_CASH_RECEIVED_DOWN_PAYMENT','',38);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_HRD','folder','051_RPT','HRD','',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_HRD_PYRL','folder','051_RPT_HRD','PAYROLL','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_HRD_PYRL_OVERTIME','file','051_RPT_HRD_PYRL','OVERTIME','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_HRD_PYRL_SALARY','file','051_RPT_HRD_PYRL','SALARY','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT','folder','051_RPT','INVENTORY','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_ASSEMBLY','file','051_RPT_IVT','ASSEMBLY','',16);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_DELIVERY_NOTE','file','051_RPT_IVT','DELIVERY_NOTE','',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_DELIVERY_NOTE_BY_ITEM','file','051_RPT_IVT','DELIVERY_NOTE_BY_ITEM','',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_DELIVERY_NOTE_PER_CUSTOMER','file','051_RPT_IVT','DELIVERY_NOTE_PER_CUSTOMER','',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_DETAIL_STOCK_BY_COGS_IDR','file','051_RPT_IVT','DETAIL_STOCK_BY_COGS_IDR','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_DETAIL_STOCK_BY_QUANTITY','file','051_RPT_IVT','DETAIL_STOCK_BY_QUANTITY','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_GOODS_RECEIVED_NOTE','file','051_RPT_IVT','GOODS_RECEIVED_NOTE','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_ITEM','file','051_RPT_IVT','GOODS_RECEIVED_NOTE_BY_ITEM','',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_VENDOR','file','051_RPT_IVT','GOODS_RECEIVED_NOTE_BY_VENDOR','',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_INVENTORY_IN','file','051_RPT_IVT','INVENTORY_IN','',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_INVENTORY_IN_PER_ITEM','file','051_RPT_IVT','INVENTORY_IN_PER_ITEM','',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_INVENTORY_IN_PER_REASON','file','051_RPT_IVT','INVENTORY_IN_PER_REASON','',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_INVENTORY_OUT','file','051_RPT_IVT','INVENTORY_OUT','',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_INVENTORY_OUT_PER_ITEM','file','051_RPT_IVT','INVENTORY_OUT_PER_ITEM','',14);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_INVENTORY_OUT_PER_REASON','file','051_RPT_IVT','INVENTORY_OUT_PER_REASON','',13);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_STOCK_CARD_BY_COGS_IDR','file','051_RPT_IVT','STOCK_CARD_BY_COGS_IDR','',21);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_STOCK_CARD_BY_QUANTITY','file','051_RPT_IVT','STOCK_CARD_BY_QUANTITY','',20);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_STOCK_CARD_MINUS_QUANTITY','file','051_RPT_IVT','STOCK_CARD_MINUS_QUANTITY','',23);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_STOCK_HISTORY_DETAIL','file','051_RPT_IVT','STOCK_HISTORY_DETAIL','',18);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_STOCK_HISTORY_GLOBAL','file','051_RPT_IVT','STOCK_HISTORY_GLOBAL','',19);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_STOCK_NON_SAFE','file','051_RPT_IVT','STOCK_NON_SAFE','',22);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_STOCK_OPNAME','file','051_RPT_IVT','STOCK_OPNAME','',17);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_IVT_WAREHOUSE_MUTATION','file','051_RPT_IVT','WAREHOUSE_MUTATION','',15);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_MNF','folder','051_RPT','MANUFACTURE','',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PPIC','folder','051_RPT','PPIC','',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR','folder','051_RPT','PURCHASE','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_QUANTITY','file','051_RPT_PUR','OUTSTANDING_PURCHASE_ORDER_-_QUANTITY','',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_VALUE_AND_QUANTITY','file','051_RPT_PUR','OUTSTANDING_PURCHASE_ORDER_-_VALUE_AND_QUANTITY','',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_ORDER_DETAIL','file','051_RPT_PUR','PURCHASE_ORDER_(DETAIL)','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_ORDER_HEADER','file','051_RPT_PUR','PURCHASE_ORDER_(HEADER)','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_ORDER_PER_ITEM','file','051_RPT_PUR','PURCHASE_ORDER_PER_ITEM','',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_DETAIL','file','051_RPT_PUR','PURCHASE_ORDER_PER_VENDOR_(DETAIL)','',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_HEADER','file','051_RPT_PUR','PURCHASE_ORDER_PER_VENDOR_(HEADER)','',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_QUANTITY','file','051_RPT_PUR','PURCHASE_ORDER_REALIZATION_-_QUANTITY','',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_VALUE_AND_QUANTITY','file','051_RPT_PUR','PURCHASE_ORDER_REALIZATION_-_VALUE_AND_QUANTITY','',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_RECAPITULATION_PER_ITEM','file','051_RPT_PUR','PURCHASE_RECAPITULATION_PER_ITEM','',18);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_RECAPITULATION_PER_VENDOR','file','051_RPT_PUR','PURCHASE_RECAPITULATION_PER_VENDOR','',17);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_REQUEST','file','051_RPT_PUR','PURCHASE_REQUEST','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_RETURN_DETAIL','file','051_RPT_PUR','PURCHASE_RETURN_(DETAIL)','',28);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_RETURN_HEADER','file','051_RPT_PUR','PURCHASE_RETURN_(HEADER)','',27);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_RETURN_PER_ITEM','file','051_RPT_PUR','PURCHASE_RETURN_PER_ITEM','',31);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_DETAIL','file','051_RPT_PUR','PURCHASE_RETURN_PER_VENDOR_(DETAIL)','',30);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_HEADER','file','051_RPT_PUR','PURCHASE_RETURN_PER_VENDOR_(HEADER)','',29);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_DETAIL','file','051_RPT_PUR','VENDOR_CREDIT_NOTE_(DETAIL)','',20);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_HEADER','file','051_RPT_PUR','VENDOR_CREDIT_NOTE_(HEADER)','',19);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_DETAIL','file','051_RPT_PUR','VENDOR_CREDIT_NOTE_PER_VENDOR_(DETAIL)','',22);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_HEADER','file','051_RPT_PUR','VENDOR_CREDIT_NOTE_PER_VENDOR_(HEADER)','',21);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_DETAIL','file','051_RPT_PUR','VENDOR_DEBIT_NOTE_PER_VENDOR_(DETAIL)','',26);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_HEADER','file','051_RPT_PUR','VENDOR_DEBIT_NOTE_PER_VENDOR_(HEADER)','',25);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE__DETAIL','file','051_RPT_PUR','VENDOR_DEBIT_NOTE__(DETAIL)','',24);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE__HEADER','file','051_RPT_PUR','VENDOR_DEBIT_NOTE__(HEADER)','',23);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_INVOICE_DETAIL_','file','051_RPT_PUR','VENDOR_INVOICE_(DETAIL)_','',13);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_INVOICE_HEADER','file','051_RPT_PUR','VENDOR_INVOICE_(HEADER)','',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_INVOICE_PER_ITEM','file','051_RPT_PUR','VENDOR_INVOICE_PER_ITEM','',16);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_DETAIL','file','051_RPT_PUR','VENDOR_INVOICE_PER_VENDOR_(DETAIL)','',15);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_HEADER','file','051_RPT_PUR','VENDOR_INVOICE_PER_VENDOR_(HEADER)','',14);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL','folder','051_RPT','SALES','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_DETAIL','file','051_RPT_SAL','CUSTOMER_CREDIT_NOTE_DETAIL','',30);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_HEADER','file','051_RPT_SAL','CUSTOMER_CREDIT_NOTE_HEADER','',29);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_DETAIL','file','051_RPT_SAL','CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_DETAIL','',32);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_HEADER','file','051_RPT_SAL','CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_HEADER','',31);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_DETAIL','file','051_RPT_SAL','CUSTOMER_DEBIT_NOTE_DETAIL','',34);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_HEADER','file','051_RPT_SAL','CUSTOMER_DEBIT_NOTE_HEADER','',33);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_DETAIL','file','051_RPT_SAL','CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_DETAIL','',36);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_HEADER','file','051_RPT_SAL','CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_HEADER','',35);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_OUTSTANDING_SALES_ORDER','file','051_RPT_SAL','OUTSTANDING_SALES_ORDER','',6);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_CUSTOMER','file','051_RPT_SAL','OUTSTANDING_SALES_ORDER_PER_CUSTOMER','',7);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_ITEM','file','051_RPT_SAL','OUTSTANDING_SALES_ORDER_PER_ITEM','',8);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_BY_COGS_IDR_DETAIL','file','051_RPT_SAL','SALES_BY_COGS_IDR_DETAIL','',15);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_BY_COGS_IDR_HEADER','file','051_RPT_SAL','SALES_BY_COGS_IDR_HEADER','',14);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_NON_COGS_IDR_DETAIL','file','051_RPT_SAL','SALES_NON_COGS_IDR_DETAIL','',10);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_NON_COGS_IDR_HEADER','file','051_RPT_SAL','SALES_NON_COGS_IDR_HEADER','',9);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_ORDER_DETAIL','file','051_RPT_SAL','SALES_ORDER_DETAIL','',2);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_ORDER_HEADER','file','051_RPT_SAL','SALES_ORDER_HEADER','',1);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_DETAIL','file','051_RPT_SAL','SALES_ORDER_PER_CUSTOMER_DETAIL','',4);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_HEADER','file','051_RPT_SAL','SALES_ORDER_PER_CUSTOMER_HEADER','',3);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_ORDER_PER_ITEM','file','051_RPT_SAL','SALES_ORDER_PER_ITEM','',5);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_DETAIL','file','051_RPT_SAL','SALES_PER_CUSTOMER_BY_COGS_IDR_DETAIL','',17);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_HEADER','file','051_RPT_SAL','SALES_PER_CUSTOMER_BY_COGS_IDR_HEADER','',16);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_DETAIL','file','051_RPT_SAL','SALES_PER_CUSTOMER_NON_COGS_IDR_DETAIL','',12);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_HEADER','file','051_RPT_SAL','SALES_PER_CUSTOMER_NON_COGS_IDR_HEADER','',11);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_PER_ITEM_BY_COGS_IDR','file','051_RPT_SAL','SALES_PER_ITEM_BY_COGS_IDR','',18);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_PER_ITEM_NON_COGS_IDR','file','051_RPT_SAL','SALES_PER_ITEM_NON_COGS_IDR','',13);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RECAPITULATION_PER_CUSTOMER','file','051_RPT_SAL','SALES_RECAPITULATION_PER_CUSTOMER','',26);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RECAPITULATION_PER_ITEM','file','051_RPT_SAL','SALES_RECAPITULATION_PER_ITEM','',28);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RECAPITULATION_PER_SALESMAN','file','051_RPT_SAL','SALES_RECAPITULATION_PER_SALESMAN','',27);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RETURN_DETAIL','file','051_RPT_SAL','SALES_RETURN_DETAIL','',20);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RETURN_HEADER','file','051_RPT_SAL','SALES_RETURN_HEADER','',19);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_DETAIL','file','051_RPT_SAL','SALES_RETURN_PER_CUSTOMER_DETAIL','',22);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_HEADER','file','051_RPT_SAL','SALES_RETURN_PER_CUSTOMER_HEADER','',21);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RETURN_PER_ITEM','file','051_RPT_SAL','SALES_RETURN_PER_ITEM','',25);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RETURN_PER_SALESMAN_DETAIL','file','051_RPT_SAL','SALES_RETURN_PER_SALESMAN_DETAIL','',24);
insert  into `scr_menu`(`Code`,`Classes`,`ParentCode`,`Text`,`Link`,`SortNo`) values ('051_RPT_SAL_SALES_RETURN_PER_SALESMAN_HEADER','file','051_RPT_SAL','SALES_RETURN_PER_SALESMAN_HEADER','',23);

/*Table structure for table `scr_role` */

DROP TABLE IF EXISTS `scr_role`;

CREATE TABLE `scr_role` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `createdDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `scr_role` */

insert  into `scr_role`(`Code`,`Name`,`CreatedBy`,`createdDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM','Admin','','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `scr_role_authorization` */

DROP TABLE IF EXISTS `scr_role_authorization`;

CREATE TABLE `scr_role_authorization` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `HeaderCode` varchar(250) DEFAULT NULL,
  `AuthorizationCode` varchar(250) DEFAULT NULL,
  `AssignAuthority` tinyint(1) DEFAULT NULL,
  `SaveAuthority` tinyint(1) DEFAULT NULL,
  `UpdateAuthority` tinyint(1) DEFAULT NULL,
  `DeleteAuthority` tinyint(1) DEFAULT NULL,
  `PrintAuthority` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `scr_role_authorization` */

insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00002','ADM','001_PUR_PURCHASE_ORDER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00003','ADM','001_PUR_PURCHASE_ORDER_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00004','ADM','001_PUR_PURCHASE_ORDER_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00005','ADM','001_PUR_PURCHASE_REQUEST',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00006','ADM','001_PUR_PURCHASE_REQUEST_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00007','ADM','001_PUR_PURCHASE_REQUEST_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00008','ADM','001_PUR_PURCHASE_RETURN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00009','ADM','002_SAL_CUSTOMER_BLANKET_ORDER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00011','ADM','002_SAL_CUSTOMER_BLANKET_ORDER_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00012','ADM','002_SAL_CONTRACT_REVIEW',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00013','ADM','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00014','ADM','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00015','ADM','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00016','ADM','002_SAL_LIST_OF_APPLICABLE_DOCUMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00017','ADM','002_SAL_LIST_OF_APPLICABLE_DOCUMENT_UPLOAD',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00018','ADM','002_SAL_REQUEST_FOR_QUOTATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00019','ADM','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00020','ADM','002_SAL_CUSTOMER_SALES_ORDER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00021','ADM','002_SAL_SALES_ORDER_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00022','ADM','002_SAL_CUSTOMER_SALES_ORDER_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00023','ADM','002_SAL_CUSTOMER_SALES_ORDER_UNPRICE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00024','ADM','002_SAL_SALES_QUOTATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00025','ADM','002_SAL_SALES_QUOTATION_STATUS',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00026','ADM','003_IVT_ADJUSTMENT_IN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00027','ADM','003_IVT_ADJUSTMENT_IN_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00028','ADM','003_IVT_ADJUSTMENT_OUT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00029','ADM','003_IVT_ADJUSTMENT_OUT_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00030','ADM','003_IVT_ASSEMBLY_JOB_ORDER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00031','ADM','003_IVT_ASSEMBLY_REALIZATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00032','ADM','003_IVT_DELIVERY_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00033','ADM','003_IVT_DOCK_STOCK',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00034','ADM','003_IVT_GOODS_RECEIVED_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00035','ADM','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00036','ADM','003_IVT_PICKING_LIST',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00037','ADM','003_IVT_PICKING_LIST_CONFIRMATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00038','ADM','003_IVT_RACK_MUTATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00039','ADM','003_IVT_STOCK_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00040','ADM','003_IVT_WAREHOUSE_TRANSFER_IN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00041','ADM','003_IVT_WAREHOUSE_TRANSFER_OUT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00042','ADM','004_FIN_BANK_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00043','ADM','004_FIN_BANK_RECEIVED',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00044','ADM','004_FIN_CASH_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00045','ADM','004_FIN_CASH_RECEIVED',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00046','ADM','004_FIN_CUSTOMER_CREDIT_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00047','ADM','004_FIN_CUSTOMER_DEBIT_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00048','ADM','004_FIN_CUSTOMER_DEPOSIT_ASSIGNMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00049','ADM','004_FIN_CUSTOMER_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00050','ADM','004_FIN_CUSTOMER_INVOICE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00051','ADM','004_FIN_FINANCE_RECALCULATING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00052','ADM','004_FIN_GENERAL_JOURNAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00053','ADM','004_FIN_GIRO_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00054','ADM','004_FIN_GIRO_PAYMENT_INQUIRY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00055','ADM','004_FIN_GIRO_PAYMENT_REJECT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00056','ADM','004_FIN_GIRO_RECEIVED',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00057','ADM','004_FIN_GIRO_RECEIVED_INQUIRY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00058','ADM','004_FIN_GIRO_RECEIVED_REJECT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00059','ADM','004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00060','ADM','004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE_POSTING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00061','ADM','004_FIN_PAYMENT_HISTORY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00062','ADM','004_FIN_PAYMENT_REQUEST',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00063','ADM','004_FIN_PAYMENT_REQUEST_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00064','ADM','004_FIN_VENDOR_CREDIT_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00065','ADM','004_FIN_VENDOR_DEBIT_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00066','ADM','004_FIN_VENDOR_DEPOSIT_ASSIGNMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00067','ADM','004_FIN_VENDOR_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00068','ADM','004_FIN_VENDOR_INVOICE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00069','ADM','005_ACC_AMS_ASSET_DEPRECIATION_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00070','ADM','005_ACC_AMS_ASSET_DEPRECIATION_POSTING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00071','ADM','005_ACC_AMS_ASSET_DISPOSAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00072','ADM','005_ACC_AMS_ASSET_INQUIRY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00073','ADM','005_ACC_AMS_ASSET_REGISTRATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00074','ADM','005_ACC_AMS_ASSET_REGISTRATION_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00075','ADM','005_ACC_E_FAK_KELUARAN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00076','ADM','005_ACC_E_FAK_MASUKAN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00077','ADM','005_ACC_E_FAK_TAX_INVOICE_ASSIGNMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00078','ADM','005_ACC_E_FAK_TAX_INVOICE_REGISTRATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00079','ADM','005_ACC_E_FAK_UPDATE_TAX_INVOICE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00080','ADM','005_ACC_E_FAK_VOID_TAX_INVOICE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00081','ADM','005_ACC_FIN_STAT_ACCOUNTING_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00082','ADM','005_ACC_FIN_STAT_JOURNAL_POSTING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00083','ADM','005_ACC_FIN_STAT_JOURNAL_QUERY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00084','ADM','005_ACC_FIN_STAT_UN_BALANCE_JOURNAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00085','ADM','005_ACC_FIN_STAT_UN_DETAIL_JOURNAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00086','ADM','005_ACC_FIN_STAT_UN_HEADER_JOURNAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00087','ADM','005_ACC_FIN_STAT_VAT_IN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00088','ADM','005_ACC_FIN_STAT_VAT_OUT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00089','ADM','006_MST_ASSET_CATEGORY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00090','ADM','006_MST_BANK',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00091','ADM','006_MST_BANK_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00092','ADM','006_MST_BILL_OF_MATERIAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00093','ADM','006_MST_BRANCH',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00094','ADM','006_MST_CAD_DOCUMENT_FOR_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00095','ADM','006_MST_CASH_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00096','ADM','006_MST_CHART_OF_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00097','ADM','006_MST_CITY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00098','ADM','006_MST_COUNTRY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00099','ADM','006_MST_CO_DRIVER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00100','ADM','006_MST_CURRENCY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00101','ADM','006_MST_CURRENT_STOCK_COGSIDR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00102','ADM','006_MST_CURRENT_STOCK_QUANTITY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00103','ADM','006_MST_CUSTOMER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00104','ADM','006_MST_CUSTOMER_ADDRESS',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00105','ADM','006_MST_CUSTOMER_CATEGORY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00106','ADM','006_MST_CUSTOMER_CONTACT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00107','ADM','006_MST_DCAS_DESIGN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00108','ADM','006_MST_DCAS_FIRE_SAFE_BY_DESIGN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00109','ADM','006_MST_DCAS_HYDRO_TEST',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00110','ADM','006_MST_DCAS_LEGAL_REQUIREMENTS',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00111','ADM','006_MST_DCAS_MARKING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00112','ADM','006_MST_DCAS_NDE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00113','ADM','006_MST_DCAS_TESTING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00114','ADM','006_MST_DCAS_VISUAL_EXAMINATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00115','ADM','006_MST_DEPARTMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00116','ADM','006_MST_DRIVER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00117','ADM','006_MST_EDUCATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00118','ADM','006_MST_EMPLOYEE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00119','ADM','006_MST_EMPLOYEE_ATTRIBUTES',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00120','ADM','006_MST_EMPLOYEE_BANK_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00121','ADM','006_MST_EMPLOYEE_CATEGORY_STATUS',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00122','ADM','006_MST_EMPLOYEE_LEVEL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00123','ADM','006_MST_EXCHANGE_RATE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00124','ADM','006_MST_EXPEDITION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00125','ADM','006_MST_ISLAND',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00126','ADM','006_MST_ITEM_ARM_PIN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00127','ADM','006_MST_ITEM_BACKSEAT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00128','ADM','006_MST_ITEM_BALL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00129','ADM','006_MST_ITEM_BODY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00130','ADM','006_MST_ITEM_BODY_CONSTRUCTION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00131','ADM','006_MST_ITEM_BOLT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00132','ADM','006_MST_ITEM_BORE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00133','ADM','006_MST_ITEM_BRAND',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00134','ADM','006_MST_ITEM_CATEGORY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00135','ADM','006_MST_ITEM_DISC',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00136','ADM','006_MST_ITEM_DIVISION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00137','ADM','006_MST_ITEM_END_CON',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00138','ADM','006_MST_ITEM_FINISH_GOODS',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00139','ADM','006_MST_ITEM_MATERIAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00140','ADM','006_MST_ITEM_OPERATOR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00141','ADM','006_MST_ITEM_PLATES',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00142','ADM','006_MST_ITEM_RATING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00143','ADM','006_MST_ITEM_SEAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00144','ADM','006_MST_ITEM_SEAT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00145','ADM','006_MST_ITEM_SEAT_DESIGN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00146','ADM','006_MST_ITEM_SEAT_INSERT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00147','ADM','006_MST_ITEM_SHAFT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00148','ADM','006_MST_ITEM_SIZE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00149','ADM','006_MST_ITEM_SPRING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00150','ADM','006_MST_ITEM_STEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00151','ADM','006_MST_ITEM_SUB_CATEGORY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00152','ADM','006_MST_ITEM_TYPE_DESIGN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00153','ADM','006_MST_JOB_POSITION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00154','ADM','006_MST_JOURNAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00155','ADM','006_MST_MARITAL_STATUS',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00156','ADM','006_MST_PAYMENT_TERM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00157','ADM','006_MST_PROJECT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00158','ADM','006_MST_PROVINCE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00159','ADM','006_MST_PURCHASE_DESTINATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00160','ADM','006_MST_RACK',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00161','ADM','006_MST_RACK_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00162','ADM','006_MST_RACK_TYPE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00163','ADM','006_MST_REASON',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00164','ADM','006_MST_RELIGION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00165','ADM','006_MST_SALES_PERSON',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00166','ADM','006_MST_TERM_OF_DELIVERY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00167','ADM','006_MST_UNIT_OF_MEASURE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00168','ADM','006_MST_VALVE_TYPE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00169','ADM','006_MST_VALVE_TYPE_COMPONENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00170','ADM','006_MST_VENDOR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00171','ADM','006_MST_VENDOR_CATEGORY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00172','ADM','006_MST_VENDOR_CONTACT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00173','ADM','006_MST_WAREHOUSE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00174','ADM','007_SCR_CHANGE_PASSWORD',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00175','ADM','007_SCR_DATA_PROTECTION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00176','ADM','007_SCR_ROLE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00177','ADM','007_SCR_ROLE_AUTHORIZATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00178','ADM','007_SCR_TRANSACTION_LOG',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00179','ADM','007_SCR_USER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00180','ADM','011_ENG_INTERNAL_MEMO',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00181','ADM','012_HRD_PYRL_OVERTIME_CALCULATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00182','ADM','012_HRD_PYRL_OVERTIME_RECEIPT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00183','ADM','012_HRD_PYRL_PERSONAL_CALENDAR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00184','ADM','012_HRD_PYRL_SALARY_CALCULATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00185','ADM','012_HRD_PYRL_SALARY_EDITING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00186','ADM','012_HRD_PYRL_SALARY_PERIOD_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00187','ADM','012_HRD_PYRL_SALARY_PERIOD_OPEN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00188','ADM','012_HRD_PYRL_SALARY_RECEIPT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00189','ADM','012_HRD_PYRL_SALARY_WITH_OVERTIME_RECEIPT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00190','ADM','051_RPT_ACC_FIN_STAT_BALANCE_SHEET__NERACA',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00191','ADM','051_RPT_ACC_FIN_STAT_GENERAL_LEDGER__BUKU_BESAR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00192','ADM','051_RPT_ACC_FIN_STAT_JOURNAL_RECAPITULATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00193','ADM','051_RPT_ACC_FIN_STAT_PROFIT_AND_LOSS__RUGI_LABA',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00194','ADM','051_RPT_ACC_FIN_STAT_TRIAL_BALANCE__NERACA_PERCOBAAN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00195','ADM','051_RPT_ACC_FIN_STAT_VAT_IN_RECAPITULATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00196','ADM','051_RPT_ACC_FIN_STAT_VAT_OUT_RECAPITULATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00197','ADM','051_RPT_ACC_FIN_STAT__VOUCHER_RECAPITULATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00198','ADM','051_RPT_FIN_AP_AGING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00199','ADM','051_RPT_FIN_AP_AGING_PER_VENDOR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00200','ADM','051_RPT_FIN_AP_BALANCE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00201','ADM','051_RPT_FIN_AP_BALANCE_PER_VENDOR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00202','ADM','051_RPT_FIN_AP_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00203','ADM','051_RPT_FIN_AP_PAYMENT_PER_VENDOR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00204','ADM','051_RPT_FIN_AR_AGING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00205','ADM','051_RPT_FIN_AR_AGING_PER_CUSTOMER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00206','ADM','051_RPT_FIN_AR_AGING_PER_SALESMAN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00207','ADM','051_RPT_FIN_AR_BALANCE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00208','ADM','051_RPT_FIN_AR_BALANCE_PER_CUSTOMER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00209','ADM','051_RPT_FIN_AR_BALANCE_PER_SALESMAN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00210','ADM','051_RPT_FIN_AR_SETTLEMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00211','ADM','051_RPT_FIN_AR_SETTLEMENT_PER_CUSTOMER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00212','ADM','051_RPT_FIN_AR_SETTLEMENT_PER_SALESMAN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00213','ADM','051_RPT_FIN_BANK_MUTATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00214','ADM','051_RPT_FIN_BANK_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00215','ADM','051_RPT_FIN_BANK_PAYMENT_PER_BANK_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00216','ADM','051_RPT_FIN_BANK_PAYMENT_PER_CHART_OF_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00217','ADM','051_RPT_FIN_BANK_RECEIVING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00218','ADM','051_RPT_FIN_BANK_RECEIVING_PER_BANK_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00219','ADM','051_RPT_FIN_BANK_RECEIVING_PER_CHART_OF_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00220','ADM','051_RPT_FIN_CASH_MUTATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00221','ADM','051_RPT_FIN_CASH_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00222','ADM','051_RPT_FIN_CASH_PAYMENT_PER_CASH_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00223','ADM','051_RPT_FIN_CASH_PAYMENT_PER_CHART_OF_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00224','ADM','051_RPT_FIN_CASH_RECEIVING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00225','ADM','051_RPT_FIN_CASH_RECEIVING_PER_CASH_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00226','ADM','051_RPT_FIN_CASH_RECEIVING_PER_CHART_OF_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00227','ADM','051_RPT_FIN_OUTSTANDING_BANK_PAYMENT_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00228','ADM','051_RPT_FIN_OUTSTANDING_BANK_RECEIVED_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00229','ADM','051_RPT_FIN_OUTSTANDING_CASH_PAYMENT_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00230','ADM','051_RPT_FIN_OUTSTANDING_CASH_RECEIVED_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00231','ADM','051_RPT_FIN_OUTSTANDING_DELIVERY_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00232','ADM','051_RPT_FIN_OUTSTANDING_GOODS_RECEIVED_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00233','ADM','051_RPT_FIN_UNASSIGNED_BANK_PAYMENT_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00234','ADM','051_RPT_FIN_UNASSIGNED_BANK_RECEIVED_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00235','ADM','051_RPT_FIN_UNASSIGNED_CASH_PAYMENT_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00236','ADM','051_RPT_FIN_UNASSIGNED_CASH_RECEIVED_DOWN_PAYMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00237','ADM','051_RPT_HRD_PYRL_OVERTIME',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00238','ADM','051_RPT_HRD_PYRL_SALARY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00239','ADM','051_RPT_IVT_ASSEMBLY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00240','ADM','051_RPT_IVT_DELIVERY_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00241','ADM','051_RPT_IVT_DELIVERY_NOTE_BY_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00242','ADM','051_RPT_IVT_DELIVERY_NOTE_PER_CUSTOMER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00243','ADM','051_RPT_IVT_DETAIL_STOCK_BY_COGS_IDR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00244','ADM','051_RPT_IVT_DETAIL_STOCK_BY_QUANTITY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00245','ADM','051_RPT_IVT_GOODS_RECEIVED_NOTE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00246','ADM','051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00247','ADM','051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_VENDOR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00248','ADM','051_RPT_IVT_INVENTORY_IN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00249','ADM','051_RPT_IVT_INVENTORY_IN_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00250','ADM','051_RPT_IVT_INVENTORY_IN_PER_REASON',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00251','ADM','051_RPT_IVT_INVENTORY_OUT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00252','ADM','051_RPT_IVT_INVENTORY_OUT_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00253','ADM','051_RPT_IVT_INVENTORY_OUT_PER_REASON',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00254','ADM','051_RPT_IVT_STOCK_CARD_BY_COGS_IDR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00255','ADM','051_RPT_IVT_STOCK_CARD_BY_QUANTITY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00256','ADM','051_RPT_IVT_STOCK_CARD_MINUS_QUANTITY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00257','ADM','051_RPT_IVT_STOCK_HISTORY_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00258','ADM','051_RPT_IVT_STOCK_HISTORY_GLOBAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00259','ADM','051_RPT_IVT_STOCK_NON_SAFE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00260','ADM','051_RPT_IVT_STOCK_OPNAME',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00261','ADM','051_RPT_IVT_WAREHOUSE_MUTATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00262','ADM','051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_QUANTITY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00263','ADM','051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_VALUE_AND_QUANTITY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00264','ADM','051_RPT_PUR_PURCHASE_ORDER_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00265','ADM','051_RPT_PUR_PURCHASE_ORDER_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00266','ADM','051_RPT_PUR_PURCHASE_ORDER_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00267','ADM','051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00268','ADM','051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00269','ADM','051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_QUANTITY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00270','ADM','051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_VALUE_AND_QUANTITY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00271','ADM','051_RPT_PUR_PURCHASE_RECAPITULATION_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00272','ADM','051_RPT_PUR_PURCHASE_RECAPITULATION_PER_VENDOR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00273','ADM','051_RPT_PUR_PURCHASE_REQUEST',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00274','ADM','051_RPT_PUR_PURCHASE_RETURN_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00275','ADM','051_RPT_PUR_PURCHASE_RETURN_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00276','ADM','051_RPT_PUR_PURCHASE_RETURN_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00277','ADM','051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00278','ADM','051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00279','ADM','051_RPT_PUR_VENDOR_CREDIT_NOTE_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00280','ADM','051_RPT_PUR_VENDOR_CREDIT_NOTE_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00281','ADM','051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00282','ADM','051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00283','ADM','051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00284','ADM','051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00285','ADM','051_RPT_PUR_VENDOR_DEBIT_NOTE__DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00286','ADM','051_RPT_PUR_VENDOR_DEBIT_NOTE__HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00287','ADM','051_RPT_PUR_VENDOR_INVOICE_DETAIL_',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00288','ADM','051_RPT_PUR_VENDOR_INVOICE_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00289','ADM','051_RPT_PUR_VENDOR_INVOICE_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00290','ADM','051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00291','ADM','051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00292','ADM','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00293','ADM','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00294','ADM','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00295','ADM','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00296','ADM','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00297','ADM','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00298','ADM','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00299','ADM','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00300','ADM','051_RPT_SAL_OUTSTANDING_SALES_ORDER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00301','ADM','051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_CUSTOMER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00302','ADM','051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00303','ADM','051_RPT_SAL_SALES_BY_COGS_IDR_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00304','ADM','051_RPT_SAL_SALES_BY_COGS_IDR_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00305','ADM','051_RPT_SAL_SALES_NON_COGS_IDR_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00306','ADM','051_RPT_SAL_SALES_NON_COGS_IDR_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00307','ADM','051_RPT_SAL_SALES_ORDER_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00308','ADM','051_RPT_SAL_SALES_ORDER_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00309','ADM','051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00310','ADM','051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00311','ADM','051_RPT_SAL_SALES_ORDER_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00312','ADM','051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00313','ADM','051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00314','ADM','051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00315','ADM','051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00316','ADM','051_RPT_SAL_SALES_PER_ITEM_BY_COGS_IDR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00317','ADM','051_RPT_SAL_SALES_PER_ITEM_NON_COGS_IDR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00318','ADM','051_RPT_SAL_SALES_RECAPITULATION_PER_CUSTOMER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00319','ADM','051_RPT_SAL_SALES_RECAPITULATION_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00320','ADM','051_RPT_SAL_SALES_RECAPITULATION_PER_SALESMAN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00321','ADM','051_RPT_SAL_SALES_RETURN_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00322','ADM','051_RPT_SAL_SALES_RETURN_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00323','ADM','051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00324','ADM','051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00325','ADM','051_RPT_SAL_SALES_RETURN_PER_ITEM',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00326','ADM','051_RPT_SAL_SALES_RETURN_PER_SALESMAN_DETAIL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00327','ADM','051_RPT_SAL_SALES_RETURN_PER_SALESMAN_HEADER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00328','ADM','001_PUR_PURCHASE_REQUEST_NON_IMR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00329','ADM','001_PUR_PURCHASE_REQUEST_NON_IMR_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00330','ADM','001_PUR_PURCHASE_REQUEST_NON_IMR_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00331','ADM','009_PPIC_PRODUCTION_PLANNING_ORDER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00332','ADM','009_PPIC_PRODUCTION_PLANNING_ORDER_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00333','ADM','009_PPIC_PRODUCTION_PLANNING_ORDER_ITEM_BILL_OF_MATERIAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ADM-00334','ADM','006_MST_ADDITIONAL_FEE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00001','HRD_MGR','001_PUR_PURCHASE_HISTORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00002','HRD_MGR','001_PUR_PURCHASE_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00003','HRD_MGR','001_PUR_PURCHASE_ORDER_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00004','HRD_MGR','001_PUR_PURCHASE_ORDER_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00005','HRD_MGR','001_PUR_PURCHASE_REQUEST',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00006','HRD_MGR','001_PUR_PURCHASE_REQUEST_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00007','HRD_MGR','001_PUR_PURCHASE_REQUEST_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00008','HRD_MGR','001_PUR_PURCHASE_RETURN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00009','HRD_MGR','002_SAL_BLANKET_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00011','HRD_MGR','002_SAL_BLANKET_ORDER_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00012','HRD_MGR','002_SAL_CONTRACT_REVIEW',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00013','HRD_MGR','002_SAL_CUSTOMER_PURCHASE_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00014','HRD_MGR','002_SAL_LIST_OF_APPLICABLE_DOCUMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00015','HRD_MGR','002_SAL_LIST_OF_APPLICABLE_DOCUMENT_UPLOAD',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00016','HRD_MGR','002_SAL_REQUEST_FOR_QUOTATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00017','HRD_MGR','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00018','HRD_MGR','002_SAL_SALES_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00019','HRD_MGR','002_SAL_SALES_ORDER_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00020','HRD_MGR','002_SAL_SALES_ORDER_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00021','HRD_MGR','002_SAL_SALES_ORDER_UNPRICE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00022','HRD_MGR','002_SAL_SALES_QUOTATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00023','HRD_MGR','002_SAL_SALES_QUOTATION_STATUS',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00024','HRD_MGR','003_IVT_ADJUSTMENT_IN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00025','HRD_MGR','003_IVT_ADJUSTMENT_IN_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00026','HRD_MGR','003_IVT_ADJUSTMENT_OUT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00027','HRD_MGR','003_IVT_ADJUSTMENT_OUT_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00028','HRD_MGR','003_IVT_ASSEMBLY_JOB_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00029','HRD_MGR','003_IVT_ASSEMBLY_REALIZATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00030','HRD_MGR','003_IVT_DELIVERY_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00031','HRD_MGR','003_IVT_DOCK_STOCK',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00032','HRD_MGR','003_IVT_GOODS_RECEIVED_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00033','HRD_MGR','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00034','HRD_MGR','003_IVT_PICKING_LIST',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00035','HRD_MGR','003_IVT_PICKING_LIST_CONFIRMATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00036','HRD_MGR','003_IVT_RACK_MUTATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00037','HRD_MGR','003_IVT_STOCK_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00038','HRD_MGR','003_IVT_WAREHOUSE_TRANSFER_IN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00039','HRD_MGR','003_IVT_WAREHOUSE_TRANSFER_OUT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00040','HRD_MGR','004_FIN_BANK_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00041','HRD_MGR','004_FIN_BANK_RECEIVED',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00042','HRD_MGR','004_FIN_CASH_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00043','HRD_MGR','004_FIN_CASH_RECEIVED',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00044','HRD_MGR','004_FIN_CUSTOMER_CREDIT_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00045','HRD_MGR','004_FIN_CUSTOMER_DEBIT_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00046','HRD_MGR','004_FIN_CUSTOMER_DEPOSIT_ASSIGNMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00047','HRD_MGR','004_FIN_CUSTOMER_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00048','HRD_MGR','004_FIN_CUSTOMER_INVOICE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00049','HRD_MGR','004_FIN_FINANCE_RECALCULATING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00050','HRD_MGR','004_FIN_GENERAL_JOURNAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00051','HRD_MGR','004_FIN_GIRO_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00052','HRD_MGR','004_FIN_GIRO_PAYMENT_INQUIRY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00053','HRD_MGR','004_FIN_GIRO_PAYMENT_REJECT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00054','HRD_MGR','004_FIN_GIRO_RECEIVED',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00055','HRD_MGR','004_FIN_GIRO_RECEIVED_INQUIRY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00056','HRD_MGR','004_FIN_GIRO_RECEIVED_REJECT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00057','HRD_MGR','004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00058','HRD_MGR','004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE_POSTING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00059','HRD_MGR','004_FIN_PAYMENT_HISTORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00060','HRD_MGR','004_FIN_PAYMENT_REQUEST',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00061','HRD_MGR','004_FIN_PAYMENT_REQUEST_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00062','HRD_MGR','004_FIN_VENDOR_CREDIT_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00063','HRD_MGR','004_FIN_VENDOR_DEBIT_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00064','HRD_MGR','004_FIN_VENDOR_DEPOSIT_ASSIGNMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00065','HRD_MGR','004_FIN_VENDOR_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00066','HRD_MGR','004_FIN_VENDOR_INVOICE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00067','HRD_MGR','005_ACC_AMS_ASSET_DEPRECIATION_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00068','HRD_MGR','005_ACC_AMS_ASSET_DEPRECIATION_POSTING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00069','HRD_MGR','005_ACC_AMS_ASSET_DISPOSAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00070','HRD_MGR','005_ACC_AMS_ASSET_INQUIRY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00071','HRD_MGR','005_ACC_AMS_ASSET_REGISTRATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00072','HRD_MGR','005_ACC_AMS_ASSET_REGISTRATION_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00073','HRD_MGR','005_ACC_E_FAK_KELUARAN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00074','HRD_MGR','005_ACC_E_FAK_MASUKAN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00075','HRD_MGR','005_ACC_E_FAK_TAX_INVOICE_ASSIGNMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00076','HRD_MGR','005_ACC_E_FAK_TAX_INVOICE_REGISTRATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00077','HRD_MGR','005_ACC_E_FAK_UPDATE_TAX_INVOICE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00078','HRD_MGR','005_ACC_E_FAK_VOID_TAX_INVOICE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00079','HRD_MGR','005_ACC_FIN_STAT_ACCOUNTING_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00080','HRD_MGR','005_ACC_FIN_STAT_JOURNAL_POSTING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00081','HRD_MGR','005_ACC_FIN_STAT_JOURNAL_QUERY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00082','HRD_MGR','005_ACC_FIN_STAT_UN_BALANCE_JOURNAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00083','HRD_MGR','005_ACC_FIN_STAT_UN_DETAIL_JOURNAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00084','HRD_MGR','005_ACC_FIN_STAT_UN_HEADER_JOURNAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00085','HRD_MGR','005_ACC_FIN_STAT_VAT_IN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00086','HRD_MGR','005_ACC_FIN_STAT_VAT_OUT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00087','HRD_MGR','006_MST_ASSET_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00088','HRD_MGR','006_MST_BANK',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00089','HRD_MGR','006_MST_BANK_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00090','HRD_MGR','006_MST_BILL_OF_MATERIAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00091','HRD_MGR','006_MST_BRANCH',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00092','HRD_MGR','006_MST_CAD_DOCUMENT_FOR_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00093','HRD_MGR','006_MST_CASH_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00094','HRD_MGR','006_MST_CHART_OF_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00095','HRD_MGR','006_MST_CITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00096','HRD_MGR','006_MST_COUNTRY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00097','HRD_MGR','006_MST_CO_DRIVER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00098','HRD_MGR','006_MST_CURRENCY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00099','HRD_MGR','006_MST_CURRENT_STOCK_COGSIDR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00100','HRD_MGR','006_MST_CURRENT_STOCK_QUANTITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00101','HRD_MGR','006_MST_CUSTOMER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00102','HRD_MGR','006_MST_CUSTOMER_ADDRESS',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00103','HRD_MGR','006_MST_CUSTOMER_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00104','HRD_MGR','006_MST_CUSTOMER_CONTACT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00105','HRD_MGR','006_MST_DCAS_DESIGN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00106','HRD_MGR','006_MST_DCAS_FIRE_SAFE_BY_DESIGN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00107','HRD_MGR','006_MST_DCAS_HYDRO_TEST',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00108','HRD_MGR','006_MST_DCAS_LEGAL_REQUIREMENTS',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00109','HRD_MGR','006_MST_DCAS_MARKING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00110','HRD_MGR','006_MST_DCAS_NDE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00111','HRD_MGR','006_MST_DCAS_TESTING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00112','HRD_MGR','006_MST_DCAS_VISUAL_EXAMINATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00113','HRD_MGR','006_MST_DEPARTMENT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00114','HRD_MGR','006_MST_DRIVER',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00115','HRD_MGR','006_MST_EDUCATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00116','HRD_MGR','006_MST_EMPLOYEE',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00117','HRD_MGR','006_MST_EMPLOYEE_ATTRIBUTES',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00118','HRD_MGR','006_MST_EMPLOYEE_BANK_ACCOUNT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00119','HRD_MGR','006_MST_EMPLOYEE_CATEGORY_STATUS',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00120','HRD_MGR','006_MST_EMPLOYEE_LEVEL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00121','HRD_MGR','006_MST_EXCHANGE_RATE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00122','HRD_MGR','006_MST_EXPEDITION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00123','HRD_MGR','006_MST_ISLAND',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00124','HRD_MGR','006_MST_ITEM_ARM_PIN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00125','HRD_MGR','006_MST_ITEM_BACKSEAT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00126','HRD_MGR','006_MST_ITEM_BALL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00127','HRD_MGR','006_MST_ITEM_BODY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00128','HRD_MGR','006_MST_ITEM_BODY_CONSTRUCTION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00129','HRD_MGR','006_MST_ITEM_BOLT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00130','HRD_MGR','006_MST_ITEM_BORE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00131','HRD_MGR','006_MST_ITEM_BRAND',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00132','HRD_MGR','006_MST_ITEM_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00133','HRD_MGR','006_MST_ITEM_DISC',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00134','HRD_MGR','006_MST_ITEM_DIVISION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00135','HRD_MGR','006_MST_ITEM_END_CON',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00136','HRD_MGR','006_MST_ITEM_FINISH_GOODS',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00137','HRD_MGR','006_MST_ITEM_MATERIAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00138','HRD_MGR','006_MST_ITEM_OPERATOR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00139','HRD_MGR','006_MST_ITEM_PLATES',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00140','HRD_MGR','006_MST_ITEM_RATING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00141','HRD_MGR','006_MST_ITEM_SEAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00142','HRD_MGR','006_MST_ITEM_SEAT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00143','HRD_MGR','006_MST_ITEM_SEAT_DESIGN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00144','HRD_MGR','006_MST_ITEM_SEAT_INSERT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00145','HRD_MGR','006_MST_ITEM_SHAFT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00146','HRD_MGR','006_MST_ITEM_SIZE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00147','HRD_MGR','006_MST_ITEM_SPRING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00148','HRD_MGR','006_MST_ITEM_STEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00149','HRD_MGR','006_MST_ITEM_SUB_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00150','HRD_MGR','006_MST_ITEM_TYPE_DESIGN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00151','HRD_MGR','006_MST_JOB_POSITION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00152','HRD_MGR','006_MST_JOURNAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00153','HRD_MGR','006_MST_MARITAL_STATUS',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00154','HRD_MGR','006_MST_PAYMENT_TERM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00155','HRD_MGR','006_MST_PROJECT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00156','HRD_MGR','006_MST_PROVINCE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00157','HRD_MGR','006_MST_PURCHASE_DESTINATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00158','HRD_MGR','006_MST_RACK',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00159','HRD_MGR','006_MST_RACK_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00160','HRD_MGR','006_MST_RACK_TYPE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00161','HRD_MGR','006_MST_REASON',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00162','HRD_MGR','006_MST_RELIGION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00163','HRD_MGR','006_MST_SALES_PERSON',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00164','HRD_MGR','006_MST_TERM_OF_DELIVERY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00165','HRD_MGR','006_MST_UNIT_OF_MEASURE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00166','HRD_MGR','006_MST_VALVE_TYPE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00167','HRD_MGR','006_MST_VALVE_TYPE_COMPONENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00168','HRD_MGR','006_MST_VENDOR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00169','HRD_MGR','006_MST_VENDOR_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00170','HRD_MGR','006_MST_VENDOR_CONTACT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00171','HRD_MGR','006_MST_WAREHOUSE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00172','HRD_MGR','007_SCR_CHANGE_PASSWORD',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00173','HRD_MGR','007_SCR_DATA_PROTECTION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00174','HRD_MGR','007_SCR_ROLE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00175','HRD_MGR','007_SCR_ROLE_AUTHORIZATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00176','HRD_MGR','007_SCR_TRANSACTION_LOG',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00177','HRD_MGR','007_SCR_USER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00178','HRD_MGR','011_ENG_INTERNAL_MEMO',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00179','HRD_MGR','012_HRD_PYRL_OVERTIME_CALCULATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00180','HRD_MGR','012_HRD_PYRL_OVERTIME_RECEIPT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00181','HRD_MGR','012_HRD_PYRL_PERSONAL_CALENDAR',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00182','HRD_MGR','012_HRD_PYRL_SALARY_CALCULATION',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00183','HRD_MGR','012_HRD_PYRL_SALARY_EDITING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00184','HRD_MGR','012_HRD_PYRL_SALARY_PERIOD_CLOSING',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00185','HRD_MGR','012_HRD_PYRL_SALARY_PERIOD_OPEN',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00186','HRD_MGR','012_HRD_PYRL_SALARY_RECEIPT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00187','HRD_MGR','012_HRD_PYRL_SALARY_WITH_OVERTIME_RECEIPT',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00188','HRD_MGR','051_RPT_ACC_FIN_STAT_BALANCE_SHEET__NERACA',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00189','HRD_MGR','051_RPT_ACC_FIN_STAT_GENERAL_LEDGER__BUKU_BESAR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00190','HRD_MGR','051_RPT_ACC_FIN_STAT_JOURNAL_RECAPITULATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00191','HRD_MGR','051_RPT_ACC_FIN_STAT_PROFIT_AND_LOSS__RUGI_LABA',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00192','HRD_MGR','051_RPT_ACC_FIN_STAT_TRIAL_BALANCE__NERACA_PERCOBAAN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00193','HRD_MGR','051_RPT_ACC_FIN_STAT_VAT_IN_RECAPITULATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00194','HRD_MGR','051_RPT_ACC_FIN_STAT_VAT_OUT_RECAPITULATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00195','HRD_MGR','051_RPT_ACC_FIN_STAT__VOUCHER_RECAPITULATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00196','HRD_MGR','051_RPT_FIN_AP_AGING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00197','HRD_MGR','051_RPT_FIN_AP_AGING_PER_VENDOR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00198','HRD_MGR','051_RPT_FIN_AP_BALANCE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00199','HRD_MGR','051_RPT_FIN_AP_BALANCE_PER_VENDOR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00200','HRD_MGR','051_RPT_FIN_AP_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00201','HRD_MGR','051_RPT_FIN_AP_PAYMENT_PER_VENDOR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00202','HRD_MGR','051_RPT_FIN_AR_AGING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00203','HRD_MGR','051_RPT_FIN_AR_AGING_PER_CUSTOMER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00204','HRD_MGR','051_RPT_FIN_AR_AGING_PER_SALESMAN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00205','HRD_MGR','051_RPT_FIN_AR_BALANCE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00206','HRD_MGR','051_RPT_FIN_AR_BALANCE_PER_CUSTOMER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00207','HRD_MGR','051_RPT_FIN_AR_BALANCE_PER_SALESMAN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00208','HRD_MGR','051_RPT_FIN_AR_SETTLEMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00209','HRD_MGR','051_RPT_FIN_AR_SETTLEMENT_PER_CUSTOMER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00210','HRD_MGR','051_RPT_FIN_AR_SETTLEMENT_PER_SALESMAN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00211','HRD_MGR','051_RPT_FIN_BANK_MUTATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00212','HRD_MGR','051_RPT_FIN_BANK_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00213','HRD_MGR','051_RPT_FIN_BANK_PAYMENT_PER_BANK_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00214','HRD_MGR','051_RPT_FIN_BANK_PAYMENT_PER_CHART_OF_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00215','HRD_MGR','051_RPT_FIN_BANK_RECEIVING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00216','HRD_MGR','051_RPT_FIN_BANK_RECEIVING_PER_BANK_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00217','HRD_MGR','051_RPT_FIN_BANK_RECEIVING_PER_CHART_OF_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00218','HRD_MGR','051_RPT_FIN_CASH_MUTATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00219','HRD_MGR','051_RPT_FIN_CASH_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00220','HRD_MGR','051_RPT_FIN_CASH_PAYMENT_PER_CASH_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00221','HRD_MGR','051_RPT_FIN_CASH_PAYMENT_PER_CHART_OF_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00222','HRD_MGR','051_RPT_FIN_CASH_RECEIVING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00223','HRD_MGR','051_RPT_FIN_CASH_RECEIVING_PER_CASH_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00224','HRD_MGR','051_RPT_FIN_CASH_RECEIVING_PER_CHART_OF_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00225','HRD_MGR','051_RPT_FIN_OUTSTANDING_BANK_PAYMENT_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00226','HRD_MGR','051_RPT_FIN_OUTSTANDING_BANK_RECEIVED_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00227','HRD_MGR','051_RPT_FIN_OUTSTANDING_CASH_PAYMENT_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00228','HRD_MGR','051_RPT_FIN_OUTSTANDING_CASH_RECEIVED_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00229','HRD_MGR','051_RPT_FIN_OUTSTANDING_DELIVERY_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00230','HRD_MGR','051_RPT_FIN_OUTSTANDING_GOODS_RECEIVED_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00231','HRD_MGR','051_RPT_FIN_UNASSIGNED_BANK_PAYMENT_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00232','HRD_MGR','051_RPT_FIN_UNASSIGNED_BANK_RECEIVED_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00233','HRD_MGR','051_RPT_FIN_UNASSIGNED_CASH_PAYMENT_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00234','HRD_MGR','051_RPT_FIN_UNASSIGNED_CASH_RECEIVED_DOWN_PAYMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00235','HRD_MGR','051_RPT_HRD_PYRL_OVERTIME',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00236','HRD_MGR','051_RPT_HRD_PYRL_SALARY',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00237','HRD_MGR','051_RPT_IVT_ASSEMBLY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00238','HRD_MGR','051_RPT_IVT_DELIVERY_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00239','HRD_MGR','051_RPT_IVT_DELIVERY_NOTE_BY_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00240','HRD_MGR','051_RPT_IVT_DELIVERY_NOTE_PER_CUSTOMER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00241','HRD_MGR','051_RPT_IVT_DETAIL_STOCK_BY_COGS_IDR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00242','HRD_MGR','051_RPT_IVT_DETAIL_STOCK_BY_QUANTITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00243','HRD_MGR','051_RPT_IVT_GOODS_RECEIVED_NOTE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00244','HRD_MGR','051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00245','HRD_MGR','051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_VENDOR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00246','HRD_MGR','051_RPT_IVT_INVENTORY_IN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00247','HRD_MGR','051_RPT_IVT_INVENTORY_IN_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00248','HRD_MGR','051_RPT_IVT_INVENTORY_IN_PER_REASON',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00249','HRD_MGR','051_RPT_IVT_INVENTORY_OUT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00250','HRD_MGR','051_RPT_IVT_INVENTORY_OUT_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00251','HRD_MGR','051_RPT_IVT_INVENTORY_OUT_PER_REASON',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00252','HRD_MGR','051_RPT_IVT_STOCK_CARD_BY_COGS_IDR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00253','HRD_MGR','051_RPT_IVT_STOCK_CARD_BY_QUANTITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00254','HRD_MGR','051_RPT_IVT_STOCK_CARD_MINUS_QUANTITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00255','HRD_MGR','051_RPT_IVT_STOCK_HISTORY_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00256','HRD_MGR','051_RPT_IVT_STOCK_HISTORY_GLOBAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00257','HRD_MGR','051_RPT_IVT_STOCK_NON_SAFE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00258','HRD_MGR','051_RPT_IVT_STOCK_OPNAME',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00259','HRD_MGR','051_RPT_IVT_WAREHOUSE_MUTATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00260','HRD_MGR','051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_QUANTITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00261','HRD_MGR','051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_VALUE_AND_QUANTITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00262','HRD_MGR','051_RPT_PUR_PURCHASE_ORDER_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00263','HRD_MGR','051_RPT_PUR_PURCHASE_ORDER_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00264','HRD_MGR','051_RPT_PUR_PURCHASE_ORDER_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00265','HRD_MGR','051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00266','HRD_MGR','051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00267','HRD_MGR','051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_QUANTITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00268','HRD_MGR','051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_VALUE_AND_QUANTITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00269','HRD_MGR','051_RPT_PUR_PURCHASE_RECAPITULATION_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00270','HRD_MGR','051_RPT_PUR_PURCHASE_RECAPITULATION_PER_VENDOR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00271','HRD_MGR','051_RPT_PUR_PURCHASE_REQUEST',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00272','HRD_MGR','051_RPT_PUR_PURCHASE_RETURN_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00273','HRD_MGR','051_RPT_PUR_PURCHASE_RETURN_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00274','HRD_MGR','051_RPT_PUR_PURCHASE_RETURN_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00275','HRD_MGR','051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00276','HRD_MGR','051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00277','HRD_MGR','051_RPT_PUR_VENDOR_CREDIT_NOTE_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00278','HRD_MGR','051_RPT_PUR_VENDOR_CREDIT_NOTE_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00279','HRD_MGR','051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00280','HRD_MGR','051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00281','HRD_MGR','051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00282','HRD_MGR','051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00283','HRD_MGR','051_RPT_PUR_VENDOR_DEBIT_NOTE__DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00284','HRD_MGR','051_RPT_PUR_VENDOR_DEBIT_NOTE__HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00285','HRD_MGR','051_RPT_PUR_VENDOR_INVOICE_DETAIL_',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00286','HRD_MGR','051_RPT_PUR_VENDOR_INVOICE_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00287','HRD_MGR','051_RPT_PUR_VENDOR_INVOICE_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00288','HRD_MGR','051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00289','HRD_MGR','051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00290','HRD_MGR','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00291','HRD_MGR','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00292','HRD_MGR','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00293','HRD_MGR','051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00294','HRD_MGR','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00295','HRD_MGR','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00296','HRD_MGR','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00297','HRD_MGR','051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00298','HRD_MGR','051_RPT_SAL_OUTSTANDING_SALES_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00299','HRD_MGR','051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_CUSTOMER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00300','HRD_MGR','051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00301','HRD_MGR','051_RPT_SAL_SALES_BY_COGS_IDR_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00302','HRD_MGR','051_RPT_SAL_SALES_BY_COGS_IDR_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00303','HRD_MGR','051_RPT_SAL_SALES_NON_COGS_IDR_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00304','HRD_MGR','051_RPT_SAL_SALES_NON_COGS_IDR_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00305','HRD_MGR','051_RPT_SAL_SALES_ORDER_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00306','HRD_MGR','051_RPT_SAL_SALES_ORDER_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00307','HRD_MGR','051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00308','HRD_MGR','051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00309','HRD_MGR','051_RPT_SAL_SALES_ORDER_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00310','HRD_MGR','051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00311','HRD_MGR','051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00312','HRD_MGR','051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00313','HRD_MGR','051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00314','HRD_MGR','051_RPT_SAL_SALES_PER_ITEM_BY_COGS_IDR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00315','HRD_MGR','051_RPT_SAL_SALES_PER_ITEM_NON_COGS_IDR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00316','HRD_MGR','051_RPT_SAL_SALES_RECAPITULATION_PER_CUSTOMER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00317','HRD_MGR','051_RPT_SAL_SALES_RECAPITULATION_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00318','HRD_MGR','051_RPT_SAL_SALES_RECAPITULATION_PER_SALESMAN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00319','HRD_MGR','051_RPT_SAL_SALES_RETURN_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00320','HRD_MGR','051_RPT_SAL_SALES_RETURN_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00321','HRD_MGR','051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00322','HRD_MGR','051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00323','HRD_MGR','051_RPT_SAL_SALES_RETURN_PER_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00324','HRD_MGR','051_RPT_SAL_SALES_RETURN_PER_SALESMAN_DETAIL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('HRD_MGR-00325','HRD_MGR','051_RPT_SAL_SALES_RETURN_PER_SALESMAN_HEADER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00001','MKT_MNG','002_SAL_BLANKET_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00003','MKT_MNG','002_SAL_BLANKET_ORDER_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00004','MKT_MNG','002_SAL_CONTRACT_REVIEW',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00005','MKT_MNG','002_SAL_CUSTOMER_PURCHASE_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00006','MKT_MNG','002_SAL_INTERNAL_MEMO',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00007','MKT_MNG','002_SAL_LIST_OF_APPLICABLE_DOCUMENT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00008','MKT_MNG','002_SAL_LIST_OF_APPLICABLE_DOCUMENT_UPLOAD',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00009','MKT_MNG','002_SAL_REQUEST_FOR_QUOTATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00010','MKT_MNG','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL',1,1,1,1,1,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00011','MKT_MNG','002_SAL_SALES_ORDER_BY_BLANKET_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00012','MKT_MNG','002_SAL_SALES_ORDER_BY_BLANKET_ORDER_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00013','MKT_MNG','002_SAL_SALES_ORDER_BY_BLANKET_ORDER_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00014','MKT_MNG','002_SAL_SALES_ORDER_BY_BLANKET_ORDER_UNPRICE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00015','MKT_MNG','002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00016','MKT_MNG','002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00017','MKT_MNG','002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER_CLOSING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00018','MKT_MNG','002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER_UNPRICE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00019','MKT_MNG','002_SAL_SALES_QUOTATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00020','MKT_MNG','002_SAL_SALES_QUOTATION_STATUS',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00021','MKT_MNG','006_MST_ASSET_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00022','MKT_MNG','006_MST_BANK',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00023','MKT_MNG','006_MST_BANK_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00024','MKT_MNG','006_MST_BILL_OF_MATERIAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00025','MKT_MNG','006_MST_BRANCH',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00026','MKT_MNG','006_MST_CAD_DOCUMENT_FOR_APPROVAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00027','MKT_MNG','006_MST_CASH_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00028','MKT_MNG','006_MST_CHART_OF_ACCOUNT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00029','MKT_MNG','006_MST_CITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00030','MKT_MNG','006_MST_COUNTRY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00031','MKT_MNG','006_MST_CO_DRIVER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00032','MKT_MNG','006_MST_CURRENCY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00033','MKT_MNG','006_MST_CURRENT_STOCK_COGSIDR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00034','MKT_MNG','006_MST_CURRENT_STOCK_QUANTITY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00035','MKT_MNG','006_MST_CUSTOMER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00036','MKT_MNG','006_MST_CUSTOMER_ADDRESS',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00037','MKT_MNG','006_MST_CUSTOMER_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00038','MKT_MNG','006_MST_CUSTOMER_CONTACT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00039','MKT_MNG','006_MST_DCAS_DESIGN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00040','MKT_MNG','006_MST_DCAS_FIRE_SAFE_BY_DESIGN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00041','MKT_MNG','006_MST_DCAS_HYDRO_TEST',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00042','MKT_MNG','006_MST_DCAS_LEGAL_REQUIREMENTS',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00043','MKT_MNG','006_MST_DCAS_MARKING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00044','MKT_MNG','006_MST_DCAS_NDE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00045','MKT_MNG','006_MST_DCAS_TESTING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00046','MKT_MNG','006_MST_DCAS_VISUAL_EXAMINATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00047','MKT_MNG','006_MST_DRIVER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00048','MKT_MNG','006_MST_EDUCATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00049','MKT_MNG','006_MST_EMPLOYEE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00050','MKT_MNG','006_MST_EXCHANGE_RATE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00051','MKT_MNG','006_MST_EXPEDITION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00052','MKT_MNG','006_MST_ISLAND',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00053','MKT_MNG','006_MST_ITEM_BODY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00054','MKT_MNG','006_MST_ITEM_BOLT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00055','MKT_MNG','006_MST_ITEM_BORE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00056','MKT_MNG','006_MST_ITEM_BRAND',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00057','MKT_MNG','006_MST_ITEM_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00058','MKT_MNG','006_MST_ITEM_DIVISION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00059','MKT_MNG','006_MST_ITEM_FINISH_GOODS',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00060','MKT_MNG','006_MST_ITEM_MATERIAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00061','MKT_MNG','006_MST_ITEM_OPERATOR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00062','MKT_MNG','006_MST_ITEM_RATING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00063','MKT_MNG','006_MST_ITEM_SEAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00064','MKT_MNG','006_MST_ITEM_SEAT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00065','MKT_MNG','006_MST_ITEM_SIZE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00066','MKT_MNG','006_MST_ITEM_STEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00067','MKT_MNG','006_MST_ITEM_SUB_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00068','MKT_MNG','006_MST_ITEM_TYPE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00069','MKT_MNG','006_MST_JOB_POSITION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00070','MKT_MNG','006_MST_JOURNAL',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00071','MKT_MNG','006_MST_PAYMENT_TERM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00073','MKT_MNG','006_MST_PROJECT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00074','MKT_MNG','006_MST_PROVINCE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00075','MKT_MNG','006_MST_PURCHASE_DESTINATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00076','MKT_MNG','006_MST_RACK',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00077','MKT_MNG','006_MST_RACK_ITEM',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00078','MKT_MNG','006_MST_RACK_TYPE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00079','MKT_MNG','006_MST_REASON',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00080','MKT_MNG','006_MST_RELIGION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00081','MKT_MNG','006_MST_SALES_PERSON',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00082','MKT_MNG','006_MST_TERM_OF_DELIVERY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00083','MKT_MNG','006_MST_UNIT_OF_MEASURE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00084','MKT_MNG','006_MST_VALVE_TYPE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00085','MKT_MNG','006_MST_VENDOR',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00086','MKT_MNG','006_MST_VENDOR_CATEGORY',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00087','MKT_MNG','006_MST_VENDOR_CONTACT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00088','MKT_MNG','006_MST_WAREHOUSE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00089','MKT_MNG','007_SCR_CHANGE_PASSWORD',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00090','MKT_MNG','007_SCR_DATA_PROTECTION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00091','MKT_MNG','007_SCR_ROLE',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00092','MKT_MNG','007_SCR_ROLE_AUTHORIZATION',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00093','MKT_MNG','007_SCR_USER',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00094','MKT_MNG','006_MST_ITEM_DISC',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00095','MKT_MNG','006_MST_ITEM_PLATES',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00096','MKT_MNG','006_MST_ITEM_SHAFT',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00097','MKT_MNG','006_MST_ITEM_SPRING',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00098','MKT_MNG','006_MST_ITEM_ARM_PIN',0,0,0,0,0,NULL,NULL,NULL,NULL);
insert  into `scr_role_authorization`(`Code`,`HeaderCode`,`AuthorizationCode`,`AssignAuthority`,`SaveAuthority`,`UpdateAuthority`,`DeleteAuthority`,`PrintAuthority`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('MKT_MNG-00099','MKT_MNG','006_MST_ITEM_BACKSEAT',0,0,0,0,0,NULL,NULL,NULL,NULL);

/*Table structure for table `scr_user` */

DROP TABLE IF EXISTS `scr_user`;

CREATE TABLE `scr_user` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Password` varchar(250) DEFAULT NULL,
  `Username` varchar(250) DEFAULT NULL,
  `FullName` varchar(250) DEFAULT NULL,
  `EmployeeCode` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `RoleCode` varchar(250) DEFAULT NULL,
  `DefaultBranchCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `InActiveBy` varchar(250) DEFAULT NULL,
  `InActiveDate` datetime DEFAULT NULL,
  `Remark` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `scr_user` */

insert  into `scr_user`(`Code`,`Password`,`Username`,`FullName`,`EmployeeCode`,`ActiveStatus`,`RoleCode`,`DefaultBranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ABC','a859cb0544a77c8802d6e610b2abf648','ABC',NULL,NULL,1,'ADM','B002','','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `scr_user`(`Code`,`Password`,`Username`,`FullName`,`EmployeeCode`,`ActiveStatus`,`RoleCode`,`DefaultBranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ADMIN','21232f297a57a5a743894a0e4a801fc3','ADMIN',NULL,NULL,1,'ADM','B001','ADMIN','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `scr_user`(`Code`,`Password`,`Username`,`FullName`,`EmployeeCode`,`ActiveStatus`,`RoleCode`,`DefaultBranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('ARIES','a859cb0544a77c8802d6e610b2abf648','ARIES',NULL,NULL,1,'ADM','B002','','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','-');
insert  into `scr_user`(`Code`,`Password`,`Username`,`FullName`,`EmployeeCode`,`ActiveStatus`,`RoleCode`,`DefaultBranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('SUKHA','4297f44b13955235245b2497399d7a93','SUKHA',NULL,NULL,1,'ADM','B001','','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','');
insert  into `scr_user`(`Code`,`Password`,`Username`,`FullName`,`EmployeeCode`,`ActiveStatus`,`RoleCode`,`DefaultBranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('UL','7815696ecbf1c96e6894b779456d330e','UL',NULL,NULL,1,'ADM','B001','','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','123');
insert  into `scr_user`(`Code`,`Password`,`Username`,`FullName`,`EmployeeCode`,`ActiveStatus`,`RoleCode`,`DefaultBranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`InActiveBy`,`InActiveDate`,`Remark`) values ('WE','7815696ecbf1c96e6894b779456d330e','WE',NULL,NULL,1,'ADM','B002','','1900-01-01 00:00:00','','1900-01-01 00:00:00','','1900-01-01 00:00:00','qwe');

/*Table structure for table `scr_user_branch` */

DROP TABLE IF EXISTS `scr_user_branch`;

CREATE TABLE `scr_user_branch` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `UserCode` varchar(250) DEFAULT NULL,
  `BranchCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `scr_user_branch` */

insert  into `scr_user_branch`(`Code`,`UserCode`,`BranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ABC-B002','ABC','B002','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `scr_user_branch`(`Code`,`UserCode`,`BranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('ARIES-B002','ARIES','B002','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `scr_user_branch`(`Code`,`UserCode`,`BranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('SUKHA-B001','SUKHA','B001','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `scr_user_branch`(`Code`,`UserCode`,`BranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('UL-B001','UL','B001','','1900-01-01 00:00:00','','1900-01-01 00:00:00');
insert  into `scr_user_branch`(`Code`,`UserCode`,`BranchCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('WE-B002','WE','B002','','1900-01-01 00:00:00','','1900-01-01 00:00:00');

/*Table structure for table `scr_user_session` */

DROP TABLE IF EXISTS `scr_user_session`;

CREATE TABLE `scr_user_session` (
  `Code` int(11) NOT NULL AUTO_INCREMENT,
  `Username` varchar(250) NOT NULL DEFAULT '',
  KEY `Code` (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `scr_user_session` */

/*Table structure for table `sys_data_protection` */

DROP TABLE IF EXISTS `sys_data_protection`;

CREATE TABLE `sys_data_protection` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `MonthPeriod` decimal(2,0) DEFAULT NULL,
  `YearPeriod` decimal(4,0) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sys_data_protection` */

insert  into `sys_data_protection`(`Code`,`MonthPeriod`,`YearPeriod`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('1-2020',1,2020,'ADMIN','2020-03-20 00:00:00','ADMIN','2020-03-20 00:00:00');

/*Table structure for table `sys_module` */

DROP TABLE IF EXISTS `sys_module`;

CREATE TABLE `sys_module` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `Name` varchar(250) DEFAULT NULL,
  `ActiveStatus` tinyint(1) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sys_module` */

insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_HISTORY','PURCHASE_HISTORY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_ORDER','PURCHASE_ORDER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_ORDER_APPROVAL','PURCHASE_ORDER_APPROVAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_ORDER_CLOSING','PURCHASE_ORDER_CLOSING',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST','PURCHASE_REQUEST',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST_APPROVAL','PURCHASE_REQUEST_APPROVAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST_CLOSING','PURCHASE_REQUEST_CLOSING',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR','PURCHASE_REQUEST_NON_IMR',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR_APPROVAL','PURCHASE_REQUEST_NON_IMR_APPROVAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR_CLOSING','PURCHASE_REQUEST_NON_IMR_CLOSING',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('001_PUR_PURCHASE_RETURN','PURCHASE_RETURN',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CONTRACT_REVIEW','CONTRACT_REVIEW',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_BLANKET_ORDER','CUSTOMER_BLANKET_ORDER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_BLANKET_ORDER_CLOSING','CUSTOMER_BLANKET_ORDER_CLOSING',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','CUSTOMER_PURCHASE_ORDER_RELEASE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_SALES_ORDER','CUSTOMER_SALES_ORDER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING','CUSTOMER_SALES_ORDER_CLOSING',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_CUSTOMER_SALES_ORDER_UNPRICE','CUSTOMER_SALES_ORDER_UNPRICE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT','LIST_OF_APPLICABLE_DOCUMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT_UPLOAD','LIST_OF_APPLICABLE_DOCUMENT_UPLOAD',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_REQUEST_FOR_QUOTATION','REQUEST_FOR_QUOTATION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','REQUEST_FOR_QUOTATION_APPROVAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER','SALES_ORDER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER_APPROVAL','SALES_ORDER_APPROVAL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER_CLOSING','SALES_ORDER_CLOSING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER_UNPRICE','SALES_ORDER_UNPRICE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_SALES_QUOTATION','SALES_QUOTATION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('002_SAL_SALES_QUOTATION_STATUS','SALES_QUOTATION_STATUS',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ADJUSTMENT_IN','ADJUSTMENT_IN',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ADJUSTMENT_IN_APPROVAL','ADJUSTMENT_IN_APPROVAL',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ADJUSTMENT_OUT','ADJUSTMENT_OUT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ADJUSTMENT_OUT_APPROVAL','ADJUSTMENT_OUT_APPROVAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ASSEMBLY_JOB_ORDER','ASSEMBLY_JOB_ORDER',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_ASSEMBLY_REALIZATION','ASSEMBLY_REALIZATION',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_DELIVERY_NOTE','DELIVERY_NOTE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_DOCK_STOCK','DOCK_STOCK',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_GOODS_RECEIVED_NOTE','GOODS_RECEIVED_NOTE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','GOODS_RECEIVED_NOTE_CONFIRMATION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_PICKING_LIST','PICKING_LIST',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_PICKING_LIST_CONFIRMATION','PICKING_LIST_CONFIRMATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_RACK_MUTATION','RACK_MUTATION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_STOCK_CLOSING','STOCK_CLOSING',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_WAREHOUSE_TRANSFER_IN','WAREHOUSE_TRANSFER_IN',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('003_IVT_WAREHOUSE_TRANSFER_OUT','WAREHOUSE_TRANSFER_OUT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_BANK_PAYMENT','BANK_PAYMENT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_BANK_RECEIVED','BANK_RECEIVED',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CASH_PAYMENT','CASH_PAYMENT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CASH_RECEIVED','CASH_RECEIVED',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_CREDIT_NOTE','CUSTOMER_CREDIT_NOTE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_DEBIT_NOTE','CUSTOMER_DEBIT_NOTE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_DEPOSIT_ASSIGNMENT','CUSTOMER_DEPOSIT_ASSIGNMENT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_DOWN_PAYMENT','CUSTOMER_DOWN_PAYMENT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_CUSTOMER_INVOICE','CUSTOMER_INVOICE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_FINANCE_RECALCULATING','FINANCE_RECALCULATING',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GENERAL_JOURNAL','GENERAL_JOURNAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_PAYMENT','GIRO_PAYMENT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_PAYMENT_INQUIRY','GIRO_PAYMENT_INQUIRY',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_PAYMENT_REJECT','GIRO_PAYMENT_REJECT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_RECEIVED','GIRO_RECEIVED',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_RECEIVED_INQUIRY','GIRO_RECEIVED_INQUIRY',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GIRO_RECEIVED_REJECT','GIRO_RECEIVED_REJECT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE','GOODS_RECEIVED_NOTE_ADD_FEE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_GOODS_RECEIVED_NOTE_ADD_FEE_POSTING','GOODS_RECEIVED_NOTE_ADD_FEE_POSTING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_PAYMENT_HISTORY','PAYMENT_HISTORY',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_PAYMENT_REQUEST','PAYMENT_REQUEST',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_PAYMENT_REQUEST_APPROVAL','PAYMENT_REQUEST_APPROVAL',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_CREDIT_NOTE','VENDOR_CREDIT_NOTE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_DEBIT_NOTE','VENDOR_DEBIT_NOTE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_DEPOSIT_ASSIGNMENT','VENDOR_DEPOSIT_ASSIGNMENT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_DOWN_PAYMENT','VENDOR_DOWN_PAYMENT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('004_FIN_VENDOR_INVOICE','VENDOR_INVOICE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_DEPRECIATION_CLOSING','ASSET_DEPRECIATION_CLOSING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_DEPRECIATION_POSTING','ASSET_DEPRECIATION_POSTING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_DISPOSAL','ASSET_DISPOSAL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_INQUIRY','ASSET_INQUIRY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_REGISTRATION','ASSET_REGISTRATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_AMS_ASSET_REGISTRATION_APPROVAL','ASSET_REGISTRATION_APPROVAL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_KELUARAN','KELUARAN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_MASUKAN','MASUKAN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_TAX_INVOICE_ASSIGNMENT','TAX_INVOICE_ASSIGNMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_TAX_INVOICE_REGISTRATION','TAX_INVOICE_REGISTRATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_UPDATE_TAX_INVOICE','UPDATE_TAX_INVOICE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_E_FAK_VOID_TAX_INVOICE','VOID_TAX_INVOICE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_ACCOUNTING_CLOSING','ACCOUNTING_CLOSING',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_JOURNAL_POSTING','JOURNAL_POSTING',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_JOURNAL_QUERY','JOURNAL_QUERY',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_UN_BALANCE_JOURNAL','UN_BALANCE_JOURNAL',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_UN_DETAIL_JOURNAL','UN_DETAIL_JOURNAL',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_UN_HEADER_JOURNAL','UN_HEADER_JOURNAL',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_VAT_IN','VAT_IN',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('005_ACC_FIN_STAT_VAT_OUT','VAT_OUT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ADDITIONAL_FEE','ADDITIONAL_FEE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ASSET_CATEGORY','ASSET_CATEGORY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_BANK','BANK',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_BANK_ACCOUNT','BANK_ACCOUNT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_BILL_OF_MATERIAL','BILL_OF_MATERIAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_BRANCH','BRANCH',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CAD_DOCUMENT_FOR_APPROVAL','CAD_DOCUMENT_FOR_APPROVAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CASH_ACCOUNT','CASH_ACCOUNT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CHART_OF_ACCOUNT','CHART_OF_ACCOUNT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CITY','CITY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_COUNTRY','COUNTRY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CO_DRIVER','CO_DRIVER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CURRENCY','CURRENCY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CURRENT_STOCK_COGSIDR','CURRENT_STOCK_COGSIDR',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CURRENT_STOCK_QUANTITY','CURRENT_STOCK_QUANTITY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CUSTOMER','CUSTOMER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CUSTOMER_ADDRESS','CUSTOMER_ADDRESS',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CUSTOMER_CATEGORY','CUSTOMER_CATEGORY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_CUSTOMER_CONTACT','CUSTOMER_CONTACT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_DESIGN','DCAS_DESIGN',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_FIRE_SAFE_BY_DESIGN','DCAS_FIRE_SAFE_BY_DESIGN',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_HYDRO_TEST','DCAS_HYDRO_TEST',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_LEGAL_REQUIREMENTS','DCAS_LEGAL_REQUIREMENTS',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_MARKING','DCAS_MARKING',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_NDE','DCAS_NDE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_TESTING','DCAS_TESTING',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DCAS_VISUAL_EXAMINATION','DCAS_VISUAL_EXAMINATION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DEPARTMENT','DEPARTMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_DRIVER','DRIVER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EDUCATION','EDUCATION',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE','EMPLOYEE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE_ATTRIBUTES','EMPLOYEE_ATTRIBUTES',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE_BANK_ACCOUNT','EMPLOYEE_BANK_ACCOUNT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE_CATEGORY_STATUS','EMPLOYEE_CATEGORY_STATUS',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EMPLOYEE_LEVEL','EMPLOYEE_LEVEL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EXCHANGE_RATE','EXCHANGE_RATE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_EXPEDITION','EXPEDITION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ISLAND','ISLAND',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_ARM_PIN','ITEM_ARM_PIN',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BACKSEAT','ITEM_BACKSEAT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BALL','ITEM_BALL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BODY','ITEM_BODY',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BODY_CONSTRUCTION','ITEM_BODY_CONSTRUCTION',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BOLT','ITEM_BOLT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BORE','ITEM_BORE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_BRAND','ITEM_BRAND',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_CATEGORY','ITEM_CATEGORY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_DISC','ITEM_DISC',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_DIVISION','ITEM_DIVISION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_END_CON','ITEM_END_CON',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_FINISH_GOODS','ITEM_FINISH_GOODS',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_MATERIAL','ITEM_MATERIAL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_OPERATOR','ITEM_OPERATOR',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_PLATES','006_MST_ITEM_PLATES',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_RATING','ITEM_RATING',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SEAL','ITEM_SEAL',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SEAT','ITEM_SEAT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SEAT_DESIGN','ITEM_SEAT_DESIGN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SEAT_INSERT','ITEM_SEAT_INSERT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SHAFT','ITEM_SHAFT',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SIZE','ITEM_SIZE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SPRING','ITEM_SPRING',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_STEM','ITEM_STEM',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_SUB_CATEGORY','ITEM_SUB_CATEGORY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_ITEM_TYPE_DESIGN','ITEM_TYPE_DESIGN',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_JOB_POSITION','JOB_POSITION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_JOURNAL','JOURNAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_MARITAL_STATUS','MARITAL_STATUS',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_PAYMENT_TERM','PAYMENT_TERM',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_PROJECT','PROJECT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_PROVINCE','PROVINCE',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_PURCHASE_DESTINATION','PURCHASE_DESTINATION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_RACK','RACK',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_RACK_ITEM','RACK_ITEM',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_RACK_TYPE','RACK_TYPE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_REASON','REASON',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_RELIGION','RELIGION',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_SALES_PERSON','SALES_PERSON',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_TERM_OF_DELIVERY','TERM_OF_DELIVERY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_UNIT_OF_MEASURE','UNIT_OF_MEASURE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VALVE_TYPE','VALVE_TYPE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VALVE_TYPE_COMPONENT','VALVE_TYPE_COMPONENT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VENDOR','VENDOR',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VENDOR_CATEGORY','VENDOR_CATEGORY',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_VENDOR_CONTACT','VENDOR_CONTACT',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('006_MST_WAREHOUSE','WAREHOUSE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_CHANGE_PASSWORD','CHANGE_PASSWORD',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_DATA_PROTECTION','DATA_PROTECTION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_ROLE','ROLE',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_ROLE_AUTHORIZATION','ROLE_AUTHORIZATION',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_TRANSACTION_LOG','TRANSACTION_LOG',1,'ADM','1900-01-01 00:00:00','ADM','1900-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('007_SCR_USER','USER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER','PRODUCTION_PLANNING_ORDER',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER_APPROVAL','PRODUCTION_PLANNING_ORDER_APPROVAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER_ITEM_BILL_OF_MATERIAL','PRODUCTION_PLANNING_ORDER_ITEM_BILL_OF_MATERIAL',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('011_ENG_INTERNAL_MEMO','INTERNAL_MEMO',1,'ADM','1990-01-01 00:00:00','ADM','1990-01-01 00:00:00');
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_OVERTIME_CALCULATION','OVERTIME_CALCULATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_OVERTIME_RECEIPT','OVERTIME',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_PERSONAL_CALENDAR','PERSONAL_CALENDAR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_CALCULATION','SALARY_CALCULATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_EDITING','SALARY_EDITING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_PERIOD_CLOSING','SALARY_PERIOD_CLOSING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_PERIOD_OPEN','SALARY_PERIOD_OPEN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_RECEIPT','SALARY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('012_HRD_PYRL_SALARY_WITH_OVERTIME_RECEIPT','SALARY_WITH_OVERTIME',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_BALANCE_SHEET__NERACA','BALANCE_SHEET_/_NERACA',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_GENERAL_LEDGER__BUKU_BESAR','GENERAL_LEDGER_/_BUKU_BESAR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_JOURNAL_RECAPITULATION','JOURNAL_RECAPITULATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_PROFIT_AND_LOSS__RUGI_LABA','PROFIT_AND_LOSS_/_RUGI_LABA',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_TRIAL_BALANCE__NERACA_PERCOBAAN','TRIAL_BALANCE_/_NERACA_PERCOBAAN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_VAT_IN_RECAPITULATION','VAT_IN_RECAPITULATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT_VAT_OUT_RECAPITULATION','VAT_OUT_RECAPITULATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_ACC_FIN_STAT__VOUCHER_RECAPITULATION','_VOUCHER_RECAPITULATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_AGING','A/P_AGING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_AGING_PER_VENDOR','A/P_AGING_PER_VENDOR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_BALANCE','A/P_BALANCE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_BALANCE_PER_VENDOR','A/P_BALANCE_PER_VENDOR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_PAYMENT','A/P_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AP_PAYMENT_PER_VENDOR','A/P_PAYMENT_PER_VENDOR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_AGING','A/R_AGING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_AGING_PER_CUSTOMER','A/R_AGING_PER_CUSTOMER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_AGING_PER_SALESMAN','A/R_AGING_PER_SALESMAN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_BALANCE','A/R_BALANCE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_BALANCE_PER_CUSTOMER','A/R_BALANCE_PER_CUSTOMER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_BALANCE_PER_SALESMAN','A/R_BALANCE_PER_SALESMAN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_SETTLEMENT','A/R_SETTLEMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_SETTLEMENT_PER_CUSTOMER','A/R_SETTLEMENT_PER_CUSTOMER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_AR_SETTLEMENT_PER_SALESMAN','A/R_SETTLEMENT_PER_SALESMAN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_MUTATION','BANK_MUTATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_PAYMENT','BANK_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_PAYMENT_PER_BANK_ACCOUNT','BANK_PAYMENT_PER_BANK_ACCOUNT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_PAYMENT_PER_CHART_OF_ACCOUNT','BANK_PAYMENT_PER_CHART_OF_ACCOUNT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_RECEIVING','BANK_RECEIVING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_RECEIVING_PER_BANK_ACCOUNT','BANK_RECEIVING_PER_BANK_ACCOUNT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_BANK_RECEIVING_PER_CHART_OF_ACCOUNT','BANK_RECEIVING_PER_CHART_OF_ACCOUNT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_MUTATION','CASH_MUTATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_PAYMENT','CASH_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_PAYMENT_PER_CASH_ACCOUNT','CASH_PAYMENT_PER_CASH_ACCOUNT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_PAYMENT_PER_CHART_OF_ACCOUNT','CASH_PAYMENT_PER_CHART_OF_ACCOUNT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_RECEIVING','CASH_RECEIVING',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_RECEIVING_PER_CASH_ACCOUNT','CASH_RECEIVING_PER_CASH_ACCOUNT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_CASH_RECEIVING_PER_CHART_OF_ACCOUNT','CASH_RECEIVING_PER_CHART_OF_ACCOUNT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_BANK_PAYMENT_DOWN_PAYMENT','OUTSTANDING_BANK_PAYMENT_DOWN_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_BANK_RECEIVED_DOWN_PAYMENT','OUTSTANDING_BANK_RECEIVED_DOWN_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_CASH_PAYMENT_DOWN_PAYMENT','OUTSTANDING_CASH_PAYMENT_DOWN_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_CASH_RECEIVED_DOWN_PAYMENT','OUTSTANDING_CASH_RECEIVED_DOWN_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_DELIVERY_NOTE','OUTSTANDING_DELIVERY_NOTE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_OUTSTANDING_GOODS_RECEIVED_NOTE','OUTSTANDING_GOODS_RECEIVED_NOTE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_UNASSIGNED_BANK_PAYMENT_DOWN_PAYMENT','UNASSIGNED_BANK_PAYMENT_DOWN_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_UNASSIGNED_BANK_RECEIVED_DOWN_PAYMENT','UNASSIGNED_BANK_RECEIVED_DOWN_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_UNASSIGNED_CASH_PAYMENT_DOWN_PAYMENT','UNASSIGNED_CASH_PAYMENT_DOWN_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_FIN_UNASSIGNED_CASH_RECEIVED_DOWN_PAYMENT','UNASSIGNED_CASH_RECEIVED_DOWN_PAYMENT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_HRD_PYRL_OVERTIME','OVERTIME',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_HRD_PYRL_SALARY','SALARY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_ASSEMBLY','ASSEMBLY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DELIVERY_NOTE','DELIVERY_NOTE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DELIVERY_NOTE_BY_ITEM','DELIVERY_NOTE_BY_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DELIVERY_NOTE_PER_CUSTOMER','DELIVERY_NOTE_PER_CUSTOMER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DETAIL_STOCK_BY_COGS_IDR','DETAIL_STOCK_BY_COGS_IDR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_DETAIL_STOCK_BY_QUANTITY','DETAIL_STOCK_BY_QUANTITY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_GOODS_RECEIVED_NOTE','GOODS_RECEIVED_NOTE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_ITEM','GOODS_RECEIVED_NOTE_BY_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_GOODS_RECEIVED_NOTE_BY_VENDOR','GOODS_RECEIVED_NOTE_BY_VENDOR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_IN','INVENTORY_IN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_IN_PER_ITEM','INVENTORY_IN_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_IN_PER_REASON','INVENTORY_IN_PER_REASON',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_OUT','INVENTORY_OUT',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_OUT_PER_ITEM','INVENTORY_OUT_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_INVENTORY_OUT_PER_REASON','INVENTORY_OUT_PER_REASON',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_CARD_BY_COGS_IDR','STOCK_CARD_BY_COGS_IDR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_CARD_BY_QUANTITY','STOCK_CARD_BY_QUANTITY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_CARD_MINUS_QUANTITY','STOCK_CARD_MINUS_QUANTITY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_HISTORY_DETAIL','STOCK_HISTORY_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_HISTORY_GLOBAL','STOCK_HISTORY_GLOBAL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_NON_SAFE','STOCK_NON_SAFE',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_STOCK_OPNAME','STOCK_OPNAME',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_IVT_WAREHOUSE_MUTATION','WAREHOUSE_MUTATION',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_QUANTITY','OUTSTANDING_PURCHASE_ORDER_-_QUANTITY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_OUTSTANDING_PURCHASE_ORDER_-_VALUE_AND_QUANTITY','OUTSTANDING_PURCHASE_ORDER_-_VALUE_AND_QUANTITY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_DETAIL','PURCHASE_ORDER_(DETAIL)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_HEADER','PURCHASE_ORDER_(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_PER_ITEM','PURCHASE_ORDER_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_DETAIL','PURCHASE_ORDER_PER_VENDOR_(DETAIL)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_PER_VENDOR_HEADER','PURCHASE_ORDER_PER_VENDOR_(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_QUANTITY','PURCHASE_ORDER_REALIZATION_-_QUANTITY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_ORDER_REALIZATION_-_VALUE_AND_QUANTITY','PURCHASE_ORDER_REALIZATION_-_VALUE_AND_QUANTITY',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RECAPITULATION_PER_ITEM','PURCHASE_RECAPITULATION_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RECAPITULATION_PER_VENDOR','PURCHASE_RECAPITULATION_PER_VENDOR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_REQUEST','PURCHASE_REQUEST',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_DETAIL','PURCHASE_RETURN_(DETAIL)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_HEADER','PURCHASE_RETURN_(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_PER_ITEM','PURCHASE_RETURN_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_DETAIL','PURCHASE_RETURN_PER_VENDOR_(DETAIL)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_PURCHASE_RETURN_PER_VENDOR_HEADER','PURCHASE_RETURN_PER_VENDOR_(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_DETAIL','VENDOR_CREDIT_NOTE_(DETAIL)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_HEADER','VENDOR_CREDIT_NOTE_(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_DETAIL','VENDOR_CREDIT_NOTE_PER_VENDOR_(DETAIL)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_CREDIT_NOTE_PER_VENDOR_HEADER','VENDOR_CREDIT_NOTE_PER_VENDOR_(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_DETAIL','VENDOR_DEBIT_NOTE_PER_VENDOR_(DETAIL)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE_PER_VENDOR_HEADER','VENDOR_DEBIT_NOTE_PER_VENDOR_(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE__DETAIL','VENDOR_DEBIT_NOTE__(DETAIL)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_DEBIT_NOTE__HEADER','VENDOR_DEBIT_NOTE__(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_DETAIL_','VENDOR_INVOICE_(DETAIL)_',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_HEADER','VENDOR_INVOICE_(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_PER_ITEM','VENDOR_INVOICE_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_DETAIL','VENDOR_INVOICE_PER_VENDOR_(DETAIL)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_PUR_VENDOR_INVOICE_PER_VENDOR_HEADER','VENDOR_INVOICE_PER_VENDOR_(HEADER)',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_DETAIL','CUSTOMER_CREDIT_NOTE_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_HEADER','CUSTOMER_CREDIT_NOTE_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_DETAIL','CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_HEADER','CUSTOMER_CREDIT_NOTE_PER_CUSTOMER_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_DETAIL','CUSTOMER_DEBIT_NOTE_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_HEADER','CUSTOMER_DEBIT_NOTE_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_DETAIL','CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_HEADER','CUSTOMER_DEBIT_NOTE_PER_CUSTOMER_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_OUTSTANDING_SALES_ORDER','OUTSTANDING_SALES_ORDER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_CUSTOMER','OUTSTANDING_SALES_ORDER_PER_CUSTOMER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_OUTSTANDING_SALES_ORDER_PER_ITEM','OUTSTANDING_SALES_ORDER_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_BY_COGS_IDR_DETAIL','SALES_BY_COGS_IDR_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_BY_COGS_IDR_HEADER','SALES_BY_COGS_IDR_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_NON_COGS_IDR_DETAIL','SALES_NON_COGS_IDR_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_NON_COGS_IDR_HEADER','SALES_NON_COGS_IDR_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_DETAIL','SALES_ORDER_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_HEADER','SALES_ORDER_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_DETAIL','SALES_ORDER_PER_CUSTOMER_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_PER_CUSTOMER_HEADER','SALES_ORDER_PER_CUSTOMER_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_ORDER_PER_ITEM','SALES_ORDER_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_DETAIL','SALES_PER_CUSTOMER_BY_COGS_IDR_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_BY_COGS_IDR_HEADER','SALES_PER_CUSTOMER_BY_COGS_IDR_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_DETAIL','SALES_PER_CUSTOMER_NON_COGS_IDR_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_CUSTOMER_NON_COGS_IDR_HEADER','SALES_PER_CUSTOMER_NON_COGS_IDR_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_ITEM_BY_COGS_IDR','SALES_PER_ITEM_BY_COGS_IDR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_PER_ITEM_NON_COGS_IDR','SALES_PER_ITEM_NON_COGS_IDR',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RECAPITULATION_PER_CUSTOMER','SALES_RECAPITULATION_PER_CUSTOMER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RECAPITULATION_PER_ITEM','SALES_RECAPITULATION_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RECAPITULATION_PER_SALESMAN','SALES_RECAPITULATION_PER_SALESMAN',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_DETAIL','SALES_RETURN_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_HEADER','SALES_RETURN_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_DETAIL','SALES_RETURN_PER_CUSTOMER_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_CUSTOMER_HEADER','SALES_RETURN_PER_CUSTOMER_HEADER',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_ITEM','SALES_RETURN_PER_ITEM',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_SALESMAN_DETAIL','SALES_RETURN_PER_SALESMAN_DETAIL',1,NULL,NULL,NULL,NULL);
insert  into `sys_module`(`Code`,`Name`,`ActiveStatus`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`) values ('051_RPT_SAL_SALES_RETURN_PER_SALESMAN_HEADER','SALES_RETURN_PER_SALESMAN_HEADER',1,NULL,NULL,NULL,NULL);

/*Table structure for table `sys_setup` */

DROP TABLE IF EXISTS `sys_setup`;

CREATE TABLE `sys_setup` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `CompanyName` varchar(250) DEFAULT NULL,
  `CompanyAcronym` varchar(250) DEFAULT NULL,
  `LogoPath` varchar(250) DEFAULT NULL,
  `WebTitle` varchar(250) DEFAULT NULL,
  `EmailAddress` varchar(250) DEFAULT NULL,
  `HeadOfficeAddress` text,
  `HeadOfficePhone1` varchar(250) DEFAULT NULL,
  `HeadOfficePhone2` varchar(250) DEFAULT NULL,
  `HeadOfficeFax` varchar(250) DEFAULT NULL,
  `HeadOfficeZipCode` varchar(250) DEFAULT NULL,
  `CurrencyCode` varchar(250) DEFAULT NULL,
  `CreatedBy` varchar(250) DEFAULT NULL,
  `CreatedDate` datetime DEFAULT NULL,
  `UpdatedBy` varchar(250) DEFAULT NULL,
  `UpdatedDate` datetime DEFAULT NULL,
  `WebHelpPath` text,
  `FtpHost` text,
  `FtpUserName` text,
  `FtpPassword` text,
  `VATPercent` decimal(18,4) DEFAULT NULL,
  `ExcelPath` varchar(250) DEFAULT NULL,
  `TemplatePath` varchar(250) DEFAULT NULL,
  `PDFPath` varchar(250) DEFAULT NULL,
  `ReportPath` varchar(250) DEFAULT NULL,
  `FontName1` varchar(250) DEFAULT NULL,
  `FontName2` varchar(250) DEFAULT NULL,
  `LogoName` varchar(250) DEFAULT NULL,
  `LogoWidth` decimal(4,0) DEFAULT NULL,
  `LogoHeight` decimal(4,0) DEFAULT NULL,
  `LastProgramUpdated` varchar(250) DEFAULT NULL,
  `ArAging1` decimal(3,0) DEFAULT NULL,
  `ArAging2` decimal(3,0) DEFAULT NULL,
  `ArAging3` decimal(3,0) DEFAULT NULL,
  `ArAging4` decimal(3,0) DEFAULT NULL,
  `ApAging1` decimal(3,0) DEFAULT NULL,
  `ApAging2` decimal(3,0) DEFAULT NULL,
  `ApAging3` decimal(3,0) DEFAULT NULL,
  `ApAging4` decimal(3,0) DEFAULT NULL,
  `DefaultDiscountAccountCode` varchar(250) DEFAULT NULL,
  `DefaultOtherfeeAccountCode` varchar(250) DEFAULT NULL,
  `COAPurchaseDownPaymentCode` varchar(250) DEFAULT NULL,
  `COASalesDownPaymentCode` varchar(250) DEFAULT NULL,
  `DefaultBillToCode` varchar(250) DEFAULT NULL,
  `DefaultShipToCode` varchar(250) DEFAULT NULL,
  `DefaultBranchCode` varchar(250) DEFAULT NULL,
  `DefaultRackTypeCode` varchar(250) DEFAULT NULL,
  `ContractReviewFooter1` varchar(250) DEFAULT NULL,
  `ContractReviewFooter2` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sys_setup` */

insert  into `sys_setup`(`Code`,`CompanyName`,`CompanyAcronym`,`LogoPath`,`WebTitle`,`EmailAddress`,`HeadOfficeAddress`,`HeadOfficePhone1`,`HeadOfficePhone2`,`HeadOfficeFax`,`HeadOfficeZipCode`,`CurrencyCode`,`CreatedBy`,`CreatedDate`,`UpdatedBy`,`UpdatedDate`,`WebHelpPath`,`FtpHost`,`FtpUserName`,`FtpPassword`,`VATPercent`,`ExcelPath`,`TemplatePath`,`PDFPath`,`ReportPath`,`FontName1`,`FontName2`,`LogoName`,`LogoWidth`,`LogoHeight`,`LastProgramUpdated`,`ArAging1`,`ArAging2`,`ArAging3`,`ArAging4`,`ApAging1`,`ApAging2`,`ApAging3`,`ApAging4`,`DefaultDiscountAccountCode`,`DefaultOtherfeeAccountCode`,`COAPurchaseDownPaymentCode`,`COASalesDownPaymentCode`,`DefaultBillToCode`,`DefaultShipToCode`,`DefaultBranchCode`,`DefaultRackTypeCode`,`ContractReviewFooter1`,`ContractReviewFooter2`) values ('TRK','PT Teknologi Rekayasa Katup','TRK','images/logo_trk.gif','WEB ABS TRK','wawan@inkombizz.co.id','Jl. Raya Serang - Jakarta Km. 39,5, Parigi, Cikande, Parigi, Kec. Cikande, Serang, Banten 42186','021','-','-','-','IDR','-','2016-04-04 14:48:52','-','2016-04-11 14:48:44','http://localhost:2375/WebHelp/','-','-','wawan',NULL,'/inkombizz/scr_template','/inkombizz/scr_template','D:\\\\Temp\\\\','D:\\\\Project\\\\Java\\\\web_abs_trk\\\\WebContent\\\\report\\\\','calibri','calibri','logo_trk.jpg',80,80,'Senin, 16 Oktober 2017',30,45,60,90,30,45,60,90,'01-01-001-0001-TRK','01-01-001-0001-TRK','01-01-001-0001-TRK','01-01-001-0001-TRK','','','B001','RL',NULL,NULL);

/*Table structure for table `sys_transaction_log` */

DROP TABLE IF EXISTS `sys_transaction_log`;

CREATE TABLE `sys_transaction_log` (
  `Code` varchar(250) NOT NULL DEFAULT '',
  `ActionType` varchar(250) DEFAULT NULL,
  `Description` text,
  `IPNo` varchar(250) DEFAULT NULL,
  `LogDate` datetime DEFAULT NULL,
  `ModuleCode` varchar(250) DEFAULT NULL,
  `TransactionCode` varchar(250) DEFAULT NULL,
  `UserCode` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `sys_transaction_log` */

insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070001-00001','INSERT','','','2020-07-17 15:29:06','001_PUR_PURCHASE_ORDER','B001/POD/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070001-00002','INSERT','','','2020-07-21 15:29:32','001_PUR_PURCHASE_ORDER','B001/POD/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070001-00003','INSERT','','','2020-07-28 17:20:20','001_PUR_PURCHASE_ORDER','B001/POD/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070001-00004','INSERT','','','2020-07-29 10:25:44','001_PUR_PURCHASE_ORDER','B001/POD/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070002-00001','INSERT','','','2020-07-17 15:29:12','001_PUR_PURCHASE_ORDER','B001/POD/20070002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070002-00002','INSERT','','','2020-07-21 15:31:23','001_PUR_PURCHASE_ORDER','B001/POD/20070002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070002-00003','INSERT','','','2020-07-28 17:20:23','001_PUR_PURCHASE_ORDER','B001/POD/20070002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070003-00001','INSERT','','','2020-07-17 15:29:13','001_PUR_PURCHASE_ORDER','B001/POD/20070003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070003-00002','INSERT','','','2020-07-21 15:32:00','001_PUR_PURCHASE_ORDER','B001/POD/20070003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070004-00001','INSERT','','','2020-07-17 15:55:28','001_PUR_PURCHASE_ORDER','B001/POD/20070004','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20070004-00002','INSERT','','','2020-07-21 15:37:26','001_PUR_PURCHASE_ORDER','B001/POD/20070004','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20080001-00001','INSERT','','','2020-08-12 10:38:24','001_PUR_PURCHASE_ORDER','B001/POD/20080001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20080001-00002','INSERT','','','2020-08-12 12:26:25','001_PUR_PURCHASE_ORDER','B001/POD/20080001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20080001-00003','INSERT','','','2020-08-12 12:33:16','001_PUR_PURCHASE_ORDER','B001/POD/20080001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20090001-00001','INSERT','','','2020-09-04 14:33:43','001_PUR_PURCHASE_ORDER','B001/POD/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20090001-00002','INSERT','','','2020-09-04 16:41:42','001_PUR_PURCHASE_ORDER','B001/POD/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20090001-00003','INSERT','','','2020-09-11 15:15:17','001_PUR_PURCHASE_ORDER','B001/POD/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20090002-00001','INSERT','','','2020-09-04 15:53:17','001_PUR_PURCHASE_ORDER','B001/POD/20090002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER/B001/POD/20090002-00002','INSERT','','','2020-09-23 16:07:55','001_PUR_PURCHASE_ORDER','B001/POD/20090002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER_APPROVAL/-00001','UPDATE','Approval: Pending','','2020-09-10 16:29:23','001_PUR_PURCHASE_ORDER_APPROVAL','','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER_APPROVAL/-00002','UPDATE','Approval: Pending','','2020-09-10 16:54:41','001_PUR_PURCHASE_ORDER_APPROVAL','','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER_APPROVAL/B001/POD/20090001-00001','UPDATE','Approval: APPROVED','','2020-09-10 17:03:19','001_PUR_PURCHASE_ORDER_APPROVAL','B001/POD/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER_APPROVAL/B001/POD/20090001-00002','UPDATE','Approval: APPROVED','','2020-09-11 16:29:29','001_PUR_PURCHASE_ORDER_APPROVAL','B001/POD/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER_APPROVAL/B001/POD/20090002-00001','UPDATE','Approval: APPROVED','','2020-09-23 16:08:56','001_PUR_PURCHASE_ORDER_APPROVAL','B001/POD/20090002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_ORDER_CLOSING/B001/POD/20090001-00001','Pending','','','2020-09-14 09:58:30','001_PUR_PURCHASE_ORDER_CLOSING','B001/POD/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR/B001/PRQ-NIMR/20090001-00001','INSERT','','','2020-09-11 13:22:49','001_PUR_PURCHASE_REQUEST_NON_IMR','B001/PRQ-NIMR/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR/B001/PRQ-NIMR/20090001-00002','INSERT','','','2020-09-11 13:31:30','001_PUR_PURCHASE_REQUEST_NON_IMR','B001/PRQ-NIMR/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR/B001/PRQ-NIMR/20090002-00001','INSERT','','','2020-09-11 13:32:07','001_PUR_PURCHASE_REQUEST_NON_IMR','B001/PRQ-NIMR/20090002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR/B001/PRQ-NIMR/20100001-00001','INSERT','','','2020-10-05 10:43:46','001_PUR_PURCHASE_REQUEST_NON_IMR','B001/PRQ-NIMR/20100001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR/B001/PRQ-NSO/20090001-00001','INSERT','','','2020-09-03 14:47:02','001_PUR_PURCHASE_REQUEST_NON_IMR','B001/PRQ-NSO/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR_APPROVAL/B001/PRQ-NIMR/20100001-00001','APPROVED','Approval Process: OPEN','','2020-10-05 10:54:50','001_PUR_PURCHASE_REQUEST_NON_IMR_APPROVAL','B001/PRQ-NIMR/20100001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR_APPROVAL/B001/PRQ-NSO/20090001-00001','APPROVED','Approval Process: OPEN','','2020-09-03 15:12:26','001_PUR_PURCHASE_REQUEST_NON_IMR_APPROVAL','B001/PRQ-NSO/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_IMR_CLOSING/B001/PRQ-NSO/20090001-00001','CLOSED','Closing Process: CLOSED','','2020-09-03 16:18:01','001_PUR_PURCHASE_REQUEST_NON_IMR_CLOSING','B001/PRQ-NSO/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST/B001/PRQ-NSO/20070001-00001','INSERT','','','2020-07-08 15:55:40','001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST','B001/PRQ-NSO/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST/B001/PRQ-NSO/20070001-00002','UPDATE','','','2020-07-08 16:24:51','001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST','B001/PRQ-NSO/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST/B001/PRQ-NSO/20070002-00001','INSERT','','','2020-07-10 10:44:00','001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST','B001/PRQ-NSO/20070002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST/B001/PRQ-NSO/20070003-00001','INSERT','','','2020-07-24 10:36:40','001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST','B001/PRQ-NSO/20070003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST_APPROVAL/B001/PRQ-NSO/20070001-00001','APPROVED','Approval Process: OPEN','','2020-07-09 17:26:10','001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST_APPROVAL','B001/PRQ-NSO/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST_CLOSING/B001/PRQ-NSO/20070002-00001','CLOSED','Closing Process: CLOSED','','2020-07-10 13:52:59','001_PUR_PURCHASE_REQUEST_NON_ITEM_MATERIAL_REQUEST_CLOSING','B001/PRQ-NSO/20070002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00001','INSERT','','','2020-03-11 01:07:43','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00002','DELETE','','','2020-03-11 01:09:57','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00003','INSERT','','','2020-03-11 01:14:51','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00004','DELETE','','','2020-03-11 01:26:11','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00005','INSERT','','','2020-03-11 01:38:06','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00006','DELETE','','','2020-03-11 01:41:36','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00007','DELETE','','','2020-03-11 01:41:44','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00008','DELETE','','','2020-03-11 01:41:47','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00009','INSERT','','','2020-03-12 15:32:34','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00010','INSERT','','','2020-03-13 13:44:56','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00011','DELETE','','','2020-03-13 13:56:52','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00012','INSERT','','','2020-03-13 14:12:14','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00013','DELETE','','','2020-03-13 14:17:56','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00014','INSERT','','','2020-03-13 14:26:50','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00015','DELETE','','','2020-03-13 14:26:59','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00016','INSERT','','','2020-03-13 14:37:47','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00017','DELETE','','','2020-03-13 14:38:00','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00018','INSERT','','','2020-03-13 14:54:37','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00019','DELETE','','','2020-03-13 14:54:51','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20030001-00020','INSERT','','','2020-03-13 15:01:57','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20080001-00001','INSERT','','','2020-08-12 15:29:53','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20080001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20110001-00001','INSERT','','','2020-03-11 01:07:44','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20110001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20120001-00001','INSERT','','','2020-03-12 15:33:22','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20120001-00002','INSERT','','','2020-03-12 17:11:03','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B001/CTR-REV/20120001-00003','DELETE','','','2020-03-12 17:14:05','002_SAL_CONTRACT_REVIEW','B001/CTR-REV/20120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B003/CTR-REV/20010001-00001','INSERT','','','2020-01-07 15:03:36','002_SAL_CONTRACT_REVIEW','B003/CTR-REV/20010001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B003/CTR-REV/20010002-00001','INSERT','','','2020-01-07 15:08:16','002_SAL_CONTRACT_REVIEW','B003/CTR-REV/20010002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/B003/CTR-REV20010001-00001','INSERT','','','2020-01-07 13:50:23','002_SAL_CONTRACT_REVIEW','B003/CTR-REV20010001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/JKT/CTR-REV20010001-00001','INSERT','','','2020-01-06 13:24:03','002_SAL_CONTRACT_REVIEW','JKT/CTR-REV20010001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/JKT/CTR-REV20010001-00002','INSERT','','','2020-01-06 14:55:49','002_SAL_CONTRACT_REVIEW','JKT/CTR-REV20010001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/JKT/CTR-REV20010002-00001','INSERT','','','2020-01-06 13:24:13','002_SAL_CONTRACT_REVIEW','JKT/CTR-REV20010002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/JKT/CTR-REV20010003-00001','INSERT','','','2020-01-06 13:33:04','002_SAL_CONTRACT_REVIEW','JKT/CTR-REV20010003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/JKT/CTR-REV20010004-00001','INSERT','','','2020-01-06 14:14:16','002_SAL_CONTRACT_REVIEW','JKT/CTR-REV20010004','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/JKT/CTR-REV20060001-00001','INSERT','','','2020-01-06 13:24:06','002_SAL_CONTRACT_REVIEW','JKT/CTR-REV20060001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CONTRACT_REVIEW/JKT/CTR-REV20060002-00001','INSERT','','','2020-01-06 13:33:54','002_SAL_CONTRACT_REVIEW','JKT/CTR-REV20060002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER/B001/BOD-POC/20040002_REV_01-00001','INSERT','REVISE','','2020-05-04 18:19:54','002_SAL_CUSTOMER_BLANKET_ORDER','B001/BOD-POC/20040002_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER/B001/BOD-POC/20050001_REV_01-00001','UPDATE','REVISE','','2020-05-05 17:45:01','002_SAL_CUSTOMER_BLANKET_ORDER','B001/BOD-POC/20050001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER/B001/BOD-POC/20050001_REV_02-00001','INSERT','REVISE','','2020-05-05 14:54:42','002_SAL_CUSTOMER_BLANKET_ORDER','B001/BOD-POC/20050001_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER/B001/BOD-POC/20050001_REV_02-00002','UPDATE','REVISE','','2020-05-05 17:58:42','002_SAL_CUSTOMER_BLANKET_ORDER','B001/BOD-POC/20050001_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER/B001/BOD-POC/20050001_REV_03-00001','INSERT','REVISE','','2020-05-05 15:11:29','002_SAL_CUSTOMER_BLANKET_ORDER','B001/BOD-POC/20050001_REV_03','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER/B001/BOD-POC/20050001_REV_04-00001','UPDATE','REVISE','','2020-05-05 15:47:27','002_SAL_CUSTOMER_BLANKET_ORDER','B001/BOD-POC/20050001_REV_04','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER/B001/BOD-POC/20080001_REV_01-00001','UPDATE','REVISE','','2020-08-06 16:03:51','002_SAL_CUSTOMER_BLANKET_ORDER','B001/BOD-POC/20080001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER/B001/BOD-POC/20080002_REV_01-00001','UPDATE','REVISE','','2020-08-12 15:08:32','002_SAL_CUSTOMER_BLANKET_ORDER','B001/BOD-POC/20080002_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER_CLOSING/B001/BOD-POC/20050002_REV_00-00001','Open','','','2020-05-06 17:04:02','002_SAL_CUSTOMER_BLANKET_ORDER_CLOSING','B001/BOD-POC/20050002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_BLANKET_ORDER_CLOSING/B001/BOD-POC/20080001_REV_00-00001','Open','','','2020-08-19 10:34:11','002_SAL_CUSTOMER_BLANKET_ORDER_CLOSING','B001/BOD-POC/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20020001_REV_00-00001','INSERT','NEW','','2020-02-20 13:33:35','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20020001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20020001_REV_00-00002','DELETE','DELETE','','2020-02-26 17:25:33','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20020001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20020001_REV_00-00003','INSERT','NEW','','2020-02-27 14:01:43','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20020001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20020001_REV_00-00004','DELETE','DELETE','','2020-02-27 14:05:47','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20020001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20020001_REV_00-00005','INSERT','NEW','','2020-02-27 14:24:10','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20020001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20020002_REV_00-00001','INSERT','NEW','','2020-02-27 17:14:19','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20020002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20020002_REV_00-00002','DELETE','DELETE','','2020-02-27 17:14:29','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20020002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20030001_REV_00-00001','INSERT','NEW','','2020-03-06 17:13:10','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20030001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20030001_REV_00-00002','DELETE','DELETE','','2020-03-06 17:30:01','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20030001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20030001_REV_00-00003','INSERT','NEW','','2020-03-11 00:35:57','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20030001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20030001_REV_00-00004','DELETE','DELETE','','2020-03-18 16:43:53','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20030001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/B001/PCO/20030001_REV_00-00005','INSERT','NEW','','2020-03-19 00:28:50','002_SAL_CUSTOMER_PURCHASE_ORDER','B001/PCO/20030001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/JKT/PCO/20010001-00-00001','INSERT','NEW','','2020-01-02 10:12:50','002_SAL_CUSTOMER_PURCHASE_ORDER','JKT/PCO/20010001-00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER/JKT/PCO/20010001-00-00002','INSERT','NEW','','2020-01-06 16:42:46','002_SAL_CUSTOMER_PURCHASE_ORDER','JKT/PCO/20010001-00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE//PCO/00010001_REV_00-00001','INSERT','NEW','','2020-06-25 15:14:01','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','/PCO/00010001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE//PCO/00010001_REV_00-00002','DELETE','DELETE','','2020-06-25 15:15:10','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','/PCO/00010001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE//PCO/00010001_REV_00-00003','INSERT','NEW','','2020-06-25 16:03:17','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','/PCO/00010001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE//PCO/00010001_REV_00-00004','DELETE','DELETE','','2020-06-25 16:16:52','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','/PCO/00010001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20050006_REV_00-00001','INSERT','NEW','','2020-05-12 17:06:40','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20050006_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20050006_REV_00-00002','UPDATE','UPDATE','','2020-05-15 14:09:53','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20050006_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20050006_REV_00-00003','UPDATE','UPDATE','','2020-05-15 15:08:18','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20050006_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20050006_REV_00-00004','UPDATE','UPDATE','','2020-05-15 15:41:51','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20050006_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20060004_REV_00-00001','INSERT','NEW','','2020-06-26 11:34:22','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20060004_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20060004_REV_01-00001','UPDATE','REVISE','','2020-06-29 14:48:11','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20060004_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20060004_REV_02-00001','UPDATE','REVISE','','2020-06-29 15:57:35','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20060004_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20060004_REV_02-00002','UPDATE','UPDATE','','2020-06-29 17:22:11','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20060004_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20060004_REV_02-00003','UPDATE','UPDATE','','2020-06-30 10:00:16','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20060004_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20060004_REV_02-00004','UPDATE','UPDATE','','2020-06-30 10:06:10','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20060004_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20060004_REV_02-00005','UPDATE','UPDATE','','2020-06-30 10:21:48','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20060004_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20060004_REV_02-00006','UPDATE','UPDATE','','2020-06-30 10:33:26','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20060004_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20060005_REV_00-00001','INSERT','CLONE','','2020-06-30 13:22:32','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20060005_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20070001_REV_00-00001','INSERT','NEW','','2020-07-02 11:22:08','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20070001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20080003_REV_00-00001','INSERT','NEW','','2020-08-06 14:56:34','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20080003_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20080003_REV_00-00002','INSERT','NEW','','2020-08-11 22:31:50','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20080003_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20080003_REV_00-00003','INSERT','NEW','','2020-08-18 14:38:55','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20080003_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/B001/PCO/20080005_REV_00-00001','INSERT','NEW','','2020-08-12 15:11:33','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','B001/PCO/20080005_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/_REV_01_REV_00-00001','UPDATE','REVISE','','2020-06-29 13:38:22','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','_REV_01_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/_REV_01_REV_00-00002','UPDATE','REVISE','','2020-06-29 14:14:10','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','_REV_01_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE/_REV_01_REV_00-00003','UPDATE','REVISE','','2020-06-29 14:44:42','002_SAL_CUSTOMER_PURCHASE_ORDER_RELEASE','_REV_01_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00001','DELETE','DELETE','','2020-04-15 17:53:28','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00002','INSERT','NEW','','2020-04-20 11:36:21','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00003','UPDATE','UPDATE','','2020-04-20 11:53:16','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00004','DELETE','DELETE','','2020-04-20 11:54:51','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00005','INSERT','NEW','','2020-04-20 18:11:01','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00006','DELETE','DELETE','','2020-04-22 16:38:47','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00007','INSERT','NEW','','2020-04-22 17:27:19','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00008','INSERT','NEW','','2020-04-23 17:19:59','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00009','UPDATE','UPDATE','','2020-04-23 18:35:07','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_00-00010','UPDATE','UPDATE','','2020-04-24 16:11:39','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_01-00001','DELETE','DELETE','','2020-04-23 00:17:21','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_01-00002','DELETE','DELETE','','2020-04-23 00:18:20','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_01-00003','DELETE','DELETE','','2020-04-23 00:18:51','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_01-00004','UPDATE','REVISE','','2020-04-24 16:29:18','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_02-00001','UPDATE','REVISE','','2020-04-27 11:33:02','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040001_REV_02-00002','DELETE','DELETE','','2020-04-27 12:29:18','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040001_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040002_REV_00-00001','INSERT','NEW','','2020-04-15 13:43:08','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040002_REV_00-00002','INSERT','CLONE','','2020-04-27 11:54:37','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040002_REV_00-00003','DELETE','DELETE','','2020-04-27 11:57:45','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040002_REV_00-00004','INSERT','CLONE','','2020-04-27 12:06:26','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040002_REV_00-00005','DELETE','DELETE','','2020-04-27 12:21:16','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040002_REV_00-00006','INSERT','CLONE','','2020-04-27 12:22:45','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040002_REV_00-00007','DELETE','DELETE','','2020-04-27 12:29:07','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20040002_REV_00-00008','INSERT','NEW','','2020-04-27 18:22:17','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20040002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20050001_REV_00-00001','INSERT','NEW','','2020-05-05 13:58:16','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20050001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20050001_REV_00-00002','UPDATE','UPDATE','','2020-05-05 14:08:30','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20050001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20050001_REV_00-00003','INSERT','NEW','','2020-05-05 17:40:29','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20050001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20050001_REV_00-00004','UPDATE','UPDATE','','2020-05-05 17:42:15','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20050001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20050001_REV_01-00001','UPDATE','REVISE','','2020-05-05 14:08:50','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20050001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20050002_REV_00-00001','INSERT','CLONE','','2020-05-06 14:29:19','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20050002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20050004_REV_00-00001','INSERT','CLONE','','2020-05-08 13:43:57','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20050004_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20060002_REV_00-00001','INSERT','NEW','','2020-06-24 15:58:05','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20060002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20060003_REV_00-00001','INSERT','NEW','','2020-06-25 13:26:18','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20060003_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20060003_REV_01-00001','UPDATE','REVISE','','2020-06-29 17:24:34','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20060003_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20080001_REV_00-00001','INSERT','NEW','','2020-08-04 17:10:16','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20080001_REV_00-00002','DELETE','DELETE','','2020-08-05 15:06:12','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20080001_REV_00-00003','INSERT','NEW','','2020-08-06 10:48:29','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20080002_REV_00-00001','INSERT','NEW','','2020-08-11 16:23:42','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20080002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20080002_REV_00-00002','INSERT','NEW','','2020-08-18 13:55:39','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20080002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20080004_REV_00-00001','INSERT','NEW','','2020-08-12 15:05:47','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20080004_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER/B001/PCO/20080006_REV_00-00001','INSERT','NEW','','2020-08-12 15:22:03','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_BLANKET_ORDER','B001/PCO/20080006_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/-00001','UPDATE','Closed: Open','','2020-08-18 16:56:10','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20040001_REV_00-00001','INSERT','NEW','','2020-04-27 16:41:17','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20040001_REV_00-00002','DELETE','DELETE','','2020-04-27 17:04:52','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20040001_REV_00-00003','INSERT','NEW','','2020-04-27 17:06:27','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20040001_REV_00-00004','UPDATE','UPDATE','','2020-04-27 17:29:36','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20040001_REV_00-00005','DELETE','DELETE','','2020-04-28 17:04:20','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20040001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20040003_REV_00-00001','INSERT','NEW','','2020-04-28 17:11:20','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20040003_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20050003_REV_00-00001','INSERT','NEW','','2020-05-08 11:48:50','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20050003_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20050005_REV_00-00001','INSERT','CLONE','','2020-05-08 13:46:58','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20050005_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20060001_REV_00-00001','INSERT','NEW','','2020-06-24 15:13:39','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20060001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20080001_REV_00-00001','INSERT','NEW','','2020-08-11 13:54:27','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20080001_REV_00-00002','INSERT','NEW','','2020-08-18 13:25:41','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20080002_REV_00-00001','DELETE','DELETE','','2020-08-06 11:21:14','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20080002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20080002_REV_00-00002','INSERT','NEW','','2020-08-06 14:02:56','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20080002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20080004_REV_00-00001','INSERT','NEW','','2020-08-26 16:37:48','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20080004_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/B001/PCO/20080004_REV_00-00002','DELETE','DELETE','','2020-08-26 16:38:00','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','B001/PCO/20080004_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00001','INSERT','NEW','','2020-08-26 13:21:17','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00002','DELETE','DELETE','','2020-08-26 13:21:37','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00003','INSERT','NEW','','2020-08-26 13:40:15','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00004','DELETE','DELETE','','2020-08-26 13:47:10','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00005','INSERT','NEW','','2020-08-26 13:51:16','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00006','DELETE','DELETE','','2020-08-26 14:17:24','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00007','INSERT','NEW','','2020-08-26 14:22:27','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00008','DELETE','DELETE','','2020-08-26 14:23:08','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00009','INSERT','NEW','','2020-08-26 14:51:17','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00010','DELETE','DELETE','','2020-08-26 15:10:13','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00011','INSERT','NEW','','2020-08-26 15:16:06','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00012','INSERT','NEW','','2020-08-26 15:39:06','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00013','DELETE','DELETE','','2020-08-26 15:39:31','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00014','INSERT','NEW','','2020-08-26 16:12:03','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00015','DELETE','DELETE','','2020-08-26 16:23:53','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00016','INSERT','NEW','','2020-08-26 16:26:07','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00017','DELETE','DELETE','','2020-08-26 16:35:21','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_00-00018','INSERT','NEW','','2020-08-27 13:57:47','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_01-00001','UPDATE','REVISE','','2020-08-26 16:26:26','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER/TRK/PCO/20080001_REV_01-00002','DELETE','DELETE','','2020-08-26 16:34:01','002_SAL_CUSTOMER_PURCHASE_ORDER_TO_SALES_ORDER','TRK/PCO/20080001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER/B001/SOD-POC/20050001_REV_01-00001','UPDATE','REVISE','','2020-05-08 18:12:02','002_SAL_CUSTOMER_SALES_ORDER','B001/SOD-POC/20050001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER/B001/SOD-POC/20060001_REV_01-00001','UPDATE','REVISE','','2020-06-29 16:06:19','002_SAL_CUSTOMER_SALES_ORDER','B001/SOD-POC/20060001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER/B001/SOD-POC/20060002_REV_03-00001','UPDATE','REVISE','','2020-06-29 15:58:53','002_SAL_CUSTOMER_SALES_ORDER','B001/SOD-POC/20060002_REV_03','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER/B001/SOD-POC/20060002_REV_04-00001','UPDATE','REVISE','','2020-06-29 16:07:28','002_SAL_CUSTOMER_SALES_ORDER','B001/SOD-POC/20060002_REV_04','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER/B001/SOD-POC/20080001_REV_01-00001','UPDATE','REVISE','','2020-08-06 17:03:15','002_SAL_CUSTOMER_SALES_ORDER','B001/SOD-POC/20080001_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER/_REV_01_REV_00-00001','UPDATE','REVISE','','2020-05-08 16:59:50','002_SAL_CUSTOMER_SALES_ORDER','_REV_01_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER/_REV_01_REV_00-00002','UPDATE','REVISE','','2020-05-08 17:56:51','002_SAL_CUSTOMER_SALES_ORDER','_REV_01_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER/_REV_01_REV_00-00003','UPDATE','REVISE','','2020-05-08 18:08:39','002_SAL_CUSTOMER_SALES_ORDER','_REV_01_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING/B001/SOD-POC/20050002_REV_00-00001','Pending','','','2020-05-11 10:10:57','002_SAL_CUSTOMER_SALES_ORDER_CLOSING','B001/SOD-POC/20050002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING/B001/SOD-POC/20080002_REV_00-00001','Pending','','','2020-08-18 14:45:39','002_SAL_CUSTOMER_SALES_ORDER_CLOSING','B001/SOD-POC/20080002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING/B001/SOD-POC/20080002_REV_00-00002','Pending','','','2020-08-18 15:07:54','002_SAL_CUSTOMER_SALES_ORDER_CLOSING','B001/SOD-POC/20080002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING/B001/SOD-POC/20080002_REV_00-00003','Pending','','','2020-08-18 15:23:19','002_SAL_CUSTOMER_SALES_ORDER_CLOSING','B001/SOD-POC/20080002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING/B001/SOD-POC/20080002_REV_00-00004','Pending','','','2020-08-18 17:46:34','002_SAL_CUSTOMER_SALES_ORDER_CLOSING','B001/SOD-POC/20080002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING/B001/SOD-POC/20080002_REV_00-00005','Pending','','','2020-08-18 17:50:30','002_SAL_CUSTOMER_SALES_ORDER_CLOSING','B001/SOD-POC/20080002_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING/B001/SOD-POC/20080003_REV_00-00001','Pending','','','2020-08-18 11:42:30','002_SAL_CUSTOMER_SALES_ORDER_CLOSING','B001/SOD-POC/20080003_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_CUSTOMER_SALES_ORDER_CLOSING/B001/SOD-POC/20080003_REV_00-00002','Pending','','','2020-08-18 11:45:32','002_SAL_CUSTOMER_SALES_ORDER_CLOSING','B001/SOD-POC/20080003_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_INTERNAL_MEMO/123-00001','INSERT','','','2019-12-12 15:12:24','002_SAL_INTERNAL_MEMO','123','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_INTERNAL_MEMO/123-00002','UPDATE','','','2019-12-12 17:05:27','002_SAL_INTERNAL_MEMO','123','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_INTERNAL_MEMO/B001/Q/19120001-00001','INSERT','','','2019-12-13 12:05:07','002_SAL_INTERNAL_MEMO','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT/B001/LAD/20070001-00001','INSERT','','','2020-07-02 16:46:26','002_SAL_LIST_OF_APPLICABLE_DOCUMENT','B001/LAD/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT/B001/LAD/20080001-00001','INSERT','','','2020-08-12 15:58:00','002_SAL_LIST_OF_APPLICABLE_DOCUMENT','B001/LAD/20080001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT/B001/LAD/20080001-00002','INSERT','','','2020-08-24 11:04:32','002_SAL_LIST_OF_APPLICABLE_DOCUMENT','B001/LAD/20080001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_LIST_OF_APPLICABLE_DOCUMENT/B001/LAD/20080002-00001','INSERT','','','2020-08-24 13:57:37','002_SAL_LIST_OF_APPLICABLE_DOCUMENT','B001/LAD/20080002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000001-00001','INSERT','','','2019-11-28 15:45:49','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000001-00002','UPDATE','','','2019-11-28 16:18:04','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000001-00003','INSERT','','','2019-11-29 13:41:16','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000002-00001','INSERT','','','2019-11-28 15:46:09','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000002-00002','UPDATE','','','2019-11-28 17:05:13','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000003-00001','INSERT','','','2019-11-28 15:52:00','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000003-00002','UPDATE','','','2019-11-28 17:05:02','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000004-00001','INSERT','','','2019-11-28 15:59:27','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000004','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000004-00002','UPDATE','','','2019-11-28 17:06:20','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000004','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000005-00001','INSERT','','','2019-11-28 16:02:44','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000005','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000006-00001','INSERT','','','2019-11-28 16:03:13','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000006','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000007-00001','INSERT','','','2019-11-28 16:18:04','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000007','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.000008-00001','INSERT','','','2019-11-28 17:26:07','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.000008','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.20001-00001','INSERT','','','2019-11-28 14:14:05','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.20001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ/1911.20001-00002','INSERT','','','2019-11-28 14:19:21','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ/1911.20001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ1911.000001-00001','INSERT','','','2019-11-29 13:44:11','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ1911.000001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110001-00001','INSERT','','','2019-11-27 17:05:54','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110001.00-00001','INSERT','','','2019-11-29 13:50:53','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110001.00-00002','DELETE','','','2019-11-29 17:13:55','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110002.00-00001','INSERT','','','2019-11-29 14:51:50','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110003.00-00001','INSERT','','','2019-11-29 14:54:54','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110003.00-00002','DELETE','','','2019-12-02 10:17:34','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110004.00-00001','INSERT','','','2019-11-29 14:55:46','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110004.00-00002','INSERT','','','2019-11-29 15:35:50','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110004.00-00003','DELETE','','','2019-11-29 16:24:38','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110005.00-00001','INSERT','','','2019-11-29 15:51:15','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19110005.00-00002','DELETE','','','2019-12-02 10:17:36','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19110005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120001.00-00001','INSERT','','','2019-12-02 10:24:14','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120001.00-00002','UPDATE','','','2019-12-02 10:31:34','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120002.00-00001','INSERT','','','2019-12-02 10:24:38','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120002.00-00002','UPDATE','','','2019-12-02 13:13:18','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120003.00-00001','INSERT','','','2019-12-02 10:38:45','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120003.01-00001','INSERT','','','2019-12-02 15:47:17','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120003.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120003.01-00002','INSERT','','','2019-12-02 15:55:54','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120003.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120003.01-00003','INSERT','','','2019-12-02 15:58:16','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120003.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.00-00001','INSERT','','','2019-12-02 11:07:28','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.00-00002','UPDATE','','','2019-12-03 16:57:20','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.00-00003','UPDATE','','','2019-12-03 17:03:07','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.00-00004','UPDATE','','','2019-12-03 17:05:20','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.00-00005','UPDATE','','','2019-12-03 17:16:11','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.00-00006','UPDATE','','','2019-12-03 17:16:26','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.00-00007','UPDATE','','','2019-12-03 17:23:38','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.00-00008','UPDATE','','','2019-12-04 10:28:31','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.01-00001','INSERT','','','2019-12-02 15:38:48','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.01-00002','INSERT','','','2019-12-02 15:53:44','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.02-00001','INSERT','','','2019-12-02 15:42:47','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.05-00001','INSERT','','','2019-12-02 15:34:54','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.05','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120004.05-00002','INSERT','','','2019-12-02 15:36:48','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120004.05','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120005.00-00001','INSERT','','','2019-12-02 13:14:50','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120005.00-00002','UPDATE','','','2019-12-02 13:18:26','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120005.00-00003','UPDATE','','','2019-12-02 13:49:12','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120005.00-00004','UPDATE','','','2019-12-02 13:51:45','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120005.00-00005','UPDATE','','','2019-12-02 13:53:52','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120005.00-00006','UPDATE','','','2019-12-02 14:23:51','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120005.00-00007','UPDATE','','','2019-12-02 14:26:16','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120005.00-00008','INSERT','','','2019-12-09 16:14:15','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ19120006.00-00001','INSERT','','','2019-12-02 14:30:26','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ19120006.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20010001.00-00001','INSERT','','','2020-01-06 16:36:34','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20010001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20010001.00-00002','DELETE','','','2020-01-06 16:36:45','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20010001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20010001.00-00003','INSERT','','','2020-01-09 09:56:17','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20010001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00001','INSERT','','','2020-02-11 14:21:27','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00002','DELETE','','','2020-02-11 15:36:50','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00003','INSERT','','','2020-02-11 15:53:19','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00004','DELETE','','','2020-02-11 16:06:09','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00005','INSERT','','','2020-02-11 16:06:35','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00006','DELETE','','','2020-02-11 16:07:03','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00007','INSERT','','','2020-02-11 16:07:54','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00008','DELETE','','','2020-02-11 16:15:10','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00009','INSERT','','','2020-02-11 16:16:03','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00010','DELETE','','','2020-02-13 10:46:46','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00011','INSERT','','','2020-02-13 10:48:37','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00012','INSERT','','','2020-02-13 11:05:59','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00013','DELETE','','','2020-02-13 11:06:49','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00014','INSERT','','','2020-02-13 11:12:15','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00015','INSERT','','','2020-02-13 11:35:15','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00016','INSERT','','','2020-02-13 11:44:34','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00017','DELETE','','','2020-02-13 13:53:11','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00018','INSERT','','','2020-02-13 13:56:59','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00019','INSERT','','','2020-02-13 14:06:39','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00020','INSERT','','','2020-02-13 14:13:30','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00021','DELETE','','','2020-02-13 14:28:33','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00022','INSERT','','','2020-02-13 14:29:23','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00023','INSERT','','','2020-02-18 13:48:14','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00024','DELETE','','','2020-02-18 14:00:20','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00025','INSERT','','','2020-02-20 10:56:53','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.00-00026','INSERT','','','2020-02-25 15:43:07','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00001','INSERT','','','2020-02-12 10:10:52','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00002','INSERT','','','2020-02-13 10:52:03','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00003','INSERT','','','2020-02-13 11:06:36','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00004','DELETE','','','2020-02-13 11:06:47','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00005','INSERT','','','2020-02-13 11:14:48','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00006','INSERT','','','2020-02-13 11:35:26','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00007','INSERT','','','2020-02-13 11:45:56','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00008','DELETE','','','2020-02-13 13:53:14','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00009','INSERT','','','2020-02-13 13:57:09','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00010','INSERT','','','2020-02-13 14:09:11','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00011','INSERT','','','2020-02-13 14:26:44','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00012','DELETE','','','2020-02-13 14:28:38','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00013','INSERT','','','2020-02-13 15:46:27','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00014','DELETE','','','2020-02-13 15:46:31','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00015','INSERT','','','2020-02-13 15:52:03','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00016','INSERT','','','2020-02-18 13:48:24','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00017','DELETE','','','2020-02-18 13:48:29','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00018','INSERT','','','2020-02-18 13:50:14','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00019','DELETE','','','2020-02-18 13:50:27','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00020','INSERT','','','2020-02-18 14:00:11','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00021','INSERT','','','2020-02-18 14:23:11','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00022','INSERT','','','2020-02-18 14:26:51','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00023','INSERT','','','2020-02-18 14:32:47','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00024','INSERT','','','2020-02-18 14:40:02','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00025','INSERT','','','2020-02-18 14:42:53','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00026','INSERT','','','2020-02-18 15:02:19','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00027','INSERT','','','2020-02-18 15:05:46','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00028','UPDATE','','','2020-02-18 16:36:12','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.01-00029','UPDATE','','','2020-02-18 16:54:56','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.02-00001','INSERT','','','2020-02-12 10:34:08','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.02-00002','DELETE','','','2020-02-13 10:32:47','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.02-00003','INSERT','','','2020-02-18 14:36:51','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.02-00004','INSERT','','','2020-02-18 14:43:08','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.02-00005','INSERT','','','2020-02-18 15:06:03','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020001.02-00006','UPDATE','','','2020-02-18 16:56:54','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00001','INSERT','','','2020-02-11 16:00:22','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00002','DELETE','','','2020-02-11 16:06:05','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00003','INSERT','','','2020-02-14 15:20:12','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00004','UPDATE','','','2020-02-14 15:26:39','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00005','UPDATE','','','2020-02-14 15:41:09','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00006','DELETE','','','2020-02-18 10:37:18','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00007','INSERT','','','2020-02-18 13:32:32','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00008','INSERT','','','2020-02-18 13:37:10','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00009','INSERT','','','2020-02-19 14:32:30','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00010','INSERT','','','2020-02-24 10:06:56','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.00-00011','INSERT','','','2020-02-26 11:14:53','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.01-00001','INSERT','','','2020-02-18 13:34:16','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.01-00002','DELETE','','','2020-02-18 13:34:54','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.01-00003','INSERT','','','2020-02-18 13:45:33','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020002.01-00004','UPDATE','','','2020-02-24 10:10:26','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020002.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020003.00-00001','INSERT','','','2020-02-27 11:22:09','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20020004.00-00001','INSERT','','','2020-02-28 11:40:01','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20020004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20030001.00-00001','INSERT','','','2020-03-02 09:46:23','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20030001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20030001.00-00002','INSERT','','','2020-03-02 14:04:50','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20030001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20030002.00-00001','INSERT','','','2020-03-11 00:25:33','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20030002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20030003.00-00001','INSERT','','','2020-03-11 14:35:45','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20030003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20030003.00-00002','DELETE','','','2020-03-12 10:57:21','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20030003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20030003.00-00003','INSERT','','','2020-03-12 10:58:28','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20030003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040001.00-00001','INSERT','','','2020-04-07 11:39:44','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040001.00-00002','INSERT','','','2020-04-08 17:07:48','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040002.00-00001','INSERT','','','2020-04-08 13:05:58','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040002.00-00002','DELETE','','','2020-04-08 13:06:11','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040002.00-00003','INSERT','','','2020-04-08 13:06:46','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040002.00-00004','INSERT','','','2020-04-08 17:08:14','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040003.00-00001','INSERT','','','2020-04-08 14:38:45','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040003.00-00002','INSERT','','','2020-04-21 16:02:56','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040003.01-00001','UPDATE','','','2020-04-27 11:42:05','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040003.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040003.02-00001','UPDATE','','','2020-04-27 11:42:14','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040003.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20040004.00-00001','INSERT','','','2020-04-27 11:42:22','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20040004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20050001.00-00001','INSERT','','','2020-05-06 14:31:55','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20050001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20060001.00-00001','INSERT','','','2020-06-23 09:50:41','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20060001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20060002.00-00001','INSERT','','','2020-06-23 10:54:24','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20060002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20080001.00-00001','INSERT','','','2020-08-11 11:35:40','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20080001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20080002.00-00001','INSERT','','','2020-08-11 11:36:49','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20080002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B001/RFQ20080003.00-00001','INSERT','','','2020-08-18 11:48:38','002_SAL_REQUEST_FOR_QUOTATION','B001/RFQ20080003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B00105-00001','INSERT','','','2019-12-02 14:50:57','002_SAL_REQUEST_FOR_QUOTATION','B00105','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B002/RFQ/19110001-00001','INSERT','','','2019-11-28 10:18:01','002_SAL_REQUEST_FOR_QUOTATION','B002/RFQ/19110001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B002/RFQ20020001.00-00001','INSERT','','','2020-02-13 15:57:28','002_SAL_REQUEST_FOR_QUOTATION','B002/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B002/RFQ20020001.01-00001','INSERT','','','2020-02-13 15:57:36','002_SAL_REQUEST_FOR_QUOTATION','B002/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B002/RFQ20020001.01-00002','UPDATE','','','2020-02-14 15:30:34','002_SAL_REQUEST_FOR_QUOTATION','B002/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B002/RFQ20020001.02-00001','INSERT','','','2020-02-18 10:37:59','002_SAL_REQUEST_FOR_QUOTATION','B002/RFQ20020001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B002/RFQ20020001.02-00002','DELETE','','','2020-02-18 13:34:56','002_SAL_REQUEST_FOR_QUOTATION','B002/RFQ20020001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B003/RFQ19120001.00-00001','INSERT','','','2019-12-02 13:42:36','002_SAL_REQUEST_FOR_QUOTATION','B003/RFQ19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B003/RFQ19120001.02-00001','INSERT','','','2019-12-02 15:31:37','002_SAL_REQUEST_FOR_QUOTATION','B003/RFQ19120001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B003/RFQ1912000102-00001','INSERT','','','2019-12-02 15:16:09','002_SAL_REQUEST_FOR_QUOTATION','B003/RFQ1912000102','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B003/RFQ1912000102-00002','INSERT','','','2019-12-02 15:19:31','002_SAL_REQUEST_FOR_QUOTATION','B003/RFQ1912000102','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/B003/RFQ20010001.00-00001','INSERT','','','2020-01-06 16:37:19','002_SAL_REQUEST_FOR_QUOTATION','B003/RFQ20010001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION/TRK/RFQ20080001.00-00001','INSERT','','','2020-08-26 13:13:24','002_SAL_REQUEST_FOR_QUOTATION','TRK/RFQ20080001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ19120004.00-00001','UPDATE','Approval: APPROVED','','2019-12-04 12:02:59','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ19120004.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ19120005.00-00001','UPDATE','Approval: APPROVED','','2019-12-16 15:10:28','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ19120005.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20010001.00-00001','UPDATE','Approval: APPROVED','','2020-01-09 11:01:14','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20010001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.00-00001','UPDATE','Approval: APPROVED','','2020-02-20 11:00:37','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.00-00002','UPDATE','Approval: APPROVED','','2020-02-20 11:21:10','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.00-00003','UPDATE','Approval: APPROVED','','2020-02-20 11:24:17','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.00-00004','UPDATE','Approval: APPROVED','','2020-02-20 11:26:06','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.00-00005','UPDATE','Approval: APPROVED','','2020-02-20 11:29:11','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.00-00006','UPDATE','Approval: APPROVED','','2020-02-20 11:51:46','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.00-00007','UPDATE','Approval: APPROVED','','2020-02-20 12:56:29','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.00-00008','UPDATE','Approval: APPROVED','','2020-02-20 13:02:52','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.00-00009','UPDATE','Approval: APPROVED','','2020-02-25 16:41:41','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.01-00001','UPDATE','Approval: APPROVED','','2020-02-13 16:34:43','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020001.02-00001','UPDATE','Approval: APPROVED','','2020-02-18 17:05:38','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020001.02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020002.00-00001','UPDATE','Approval: APPROVED','','2020-02-19 16:48:18','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020002.00-00002','UPDATE','Approval: APPROVED','','2020-02-26 13:23:50','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20020003.00-00001','UPDATE','Approval: APPROVED','','2020-02-27 11:22:42','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20020003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20030001.00-00001','UPDATE','Approval: APPROVED','','2020-03-02 09:46:46','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20030001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20030001.00-00002','UPDATE','Approval: APPROVED','','2020-03-02 14:05:04','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20030001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20030002.00-00001','UPDATE','Approval: APPROVED','','2020-03-11 00:25:47','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20030002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20030003.00-00001','UPDATE','Approval: DECLINED','','2020-03-12 11:16:57','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20030003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20040001.00-00001','UPDATE','Approval: APPROVED','','2020-04-07 11:40:08','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20040001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20040001.00-00002','UPDATE','Approval: APPROVED','','2020-04-08 17:08:43','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20040001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20040002.00-00001','UPDATE','Approval: APPROVED','','2020-04-08 13:06:57','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20040002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20040002.00-00002','UPDATE','Approval: APPROVED','','2020-04-08 17:08:49','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20040002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20040003.00-00001','UPDATE','Approval: APPROVED','','2020-04-08 14:39:32','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20040003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20060001.00-00001','UPDATE','Approval: APPROVED','','2020-06-23 10:48:06','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20060001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20060002.00-00001','UPDATE','Approval: APPROVED','','2020-06-24 12:21:52','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20060002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20080001.00-00001','UPDATE','Approval: APPROVED','','2020-08-11 11:40:53','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20080001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20080001.00-00002','UPDATE','Approval: APPROVED','','2020-09-14 11:18:56','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20080001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20080002.00-00001','UPDATE','Approval: APPROVED','','2020-08-11 11:41:00','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20080002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B001/RFQ20080003.00-00001','UPDATE','Approval: APPROVED','','2020-08-18 11:49:17','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B001/RFQ20080003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B003/RFQ20010001.00-00001','UPDATE','Approval: APPROVED','','2020-01-06 16:38:01','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B003/RFQ20010001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/B003/RFQ20010001.00-00002','UPDATE','Approval: APPROVED','','2020-01-09 11:06:22','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','B003/RFQ20010001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_REQUEST_FOR_QUOTATION_APPROVAL/TRK/RFQ20080001.00-00001','UPDATE','Approval: APPROVED','','2020-08-26 13:13:41','002_SAL_REQUEST_FOR_QUOTATION_APPROVAL','TRK/RFQ20080001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER/JKT/PCO/20010002-00-00001','INSERT','NEW','','2020-01-09 14:45:31','002_SAL_SALES_ORDER_BY_CUSTOMER_PURCHASE_ORDER','JKT/PCO/20010002-00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION//Q/2019_REV0001_00-00001','INSERT','','','2019-12-16 11:14:56','002_SAL_SALES_QUOTATION','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION//Q/2019_REV0001_00-00002','DELETE','','','2019-12-16 11:19:57','002_SAL_SALES_QUOTATION','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION//Q/2019_REV0001_00-00003','INSERT','','','2019-12-16 11:45:13','002_SAL_SALES_QUOTATION','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION//Q/2019_REV0001_00-00004','INSERT','','','2019-12-16 16:18:19','002_SAL_SALES_QUOTATION','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION//Q/2019_REV0001_00-00005','DELETE','','','2019-12-16 16:18:27','002_SAL_SALES_QUOTATION','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION//Q/2019_REV0001_00-00006','INSERT','','','2019-12-16 16:20:12','002_SAL_SALES_QUOTATION','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION//Q/2019_REV0001_00-00007','DELETE','','','2019-12-16 16:20:19','002_SAL_SALES_QUOTATION','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION//Q/2019_REV0001_00-00008','INSERT','','','2019-12-16 16:21:51','002_SAL_SALES_QUOTATION','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION//Q/2019_REV0001_00-00009','DELETE','','','2019-12-16 16:25:27','002_SAL_SALES_QUOTATION','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV-00001','INSERT','','','2019-12-16 16:59:44','002_SAL_SALES_QUOTATION','0001/Q/2019_REV','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV-00002','DELETE','','','2019-12-16 17:00:49','002_SAL_SALES_QUOTATION','0001/Q/2019_REV','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_00-00001','INSERT','','','2019-12-16 11:28:16','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_00-00002','DELETE','','','2019-12-16 11:44:29','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_00-00003','INSERT','','','2019-12-16 16:25:57','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_00-00004','DELETE','','','2019-12-16 16:59:25','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_00-00005','INSERT','','','2019-12-16 17:03:35','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_00-00006','UPDATE','','','2019-12-23 17:03:18','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_01-00001','INSERT','','','2019-12-16 10:58:04','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_01-00002','DELETE','','','2019-12-16 11:08:05','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_02-00001','INSERT','','','2019-12-16 10:58:59','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2019_REV_02-00002','DELETE','','','2019-12-16 11:08:07','002_SAL_SALES_QUOTATION','0001/Q/2019_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2020_REV_00-00001','INSERT','','','2020-01-06 16:39:06','002_SAL_SALES_QUOTATION','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2020_REV_00-00002','INSERT','','','2020-02-19 16:49:20','002_SAL_SALES_QUOTATION','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2020_REV_00-00003','INSERT','','','2020-02-20 13:27:01','002_SAL_SALES_QUOTATION','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2020_REV_00-00004','INSERT','','','2020-02-26 14:29:21','002_SAL_SALES_QUOTATION','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2020_REV_00-00005','INSERT','','','2020-03-03 15:03:09','002_SAL_SALES_QUOTATION','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2020_REV_00-00006','INSERT','','','2020-04-08 17:11:22','002_SAL_SALES_QUOTATION','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2020_REV_00-00007','INSERT','','','2020-08-11 11:45:28','002_SAL_SALES_QUOTATION','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0001/Q/2020_REV_01-00001','INSERT','','','2020-04-20 19:55:53','002_SAL_SALES_QUOTATION','0001/Q/2020_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2019_REV_00-00001','INSERT','','','2019-12-16 16:56:15','002_SAL_SALES_QUOTATION','0002/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2019_REV_00-00002','DELETE','','','2019-12-16 16:59:22','002_SAL_SALES_QUOTATION','0002/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2019_REV_00-00003','INSERT','','','2019-12-16 17:00:15','002_SAL_SALES_QUOTATION','0002/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2019_REV_00-00004','DELETE','','','2019-12-16 17:00:46','002_SAL_SALES_QUOTATION','0002/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2019_REV_00-00005','INSERT','','','2019-12-16 17:04:05','002_SAL_SALES_QUOTATION','0002/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2020_REV_00-00001','INSERT','','','2020-01-20 10:24:13','002_SAL_SALES_QUOTATION','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2020_REV_00-00002','INSERT','','','2020-02-21 11:15:15','002_SAL_SALES_QUOTATION','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2020_REV_00-00003','INSERT','','','2020-02-27 11:52:51','002_SAL_SALES_QUOTATION','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2020_REV_00-00004','INSERT','','','2020-03-11 00:29:31','002_SAL_SALES_QUOTATION','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2020_REV_00-00005','INSERT','','','2020-04-08 17:14:47','002_SAL_SALES_QUOTATION','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0002/Q/2020_REV_00-00006','INSERT','','','2020-08-11 11:46:51','002_SAL_SALES_QUOTATION','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019REV_01-00001','INSERT','','','2019-12-17 10:28:14','002_SAL_SALES_QUOTATION','0003/Q/2019REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019REV_01-00002','DELETE','','','2019-12-17 10:28:24','002_SAL_SALES_QUOTATION','0003/Q/2019REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_01-00001','INSERT','','','2019-12-17 10:24:49','002_SAL_SALES_QUOTATION','0003/Q/2019_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_01-00002','DELETE','','','2019-12-17 10:27:36','002_SAL_SALES_QUOTATION','0003/Q/2019_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_00-00001','INSERT','','','2019-12-16 17:04:30','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00001','INSERT','','','2019-12-17 10:30:10','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00002','INSERT','','','2019-12-17 10:31:55','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00003','INSERT','','','2019-12-17 11:09:34','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00004','DELETE','','','2019-12-17 11:10:02','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00005','INSERT','','','2019-12-17 11:10:47','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00006','DELETE','','','2019-12-17 11:12:41','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00007','INSERT','','','2019-12-17 11:13:11','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00008','INSERT','','','2019-12-17 11:18:42','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00009','DELETE','','','2019-12-17 11:24:27','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_01-00010','INSERT','','','2019-12-17 11:26:32','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_02-00001','INSERT','','','2019-12-17 11:06:59','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_02-00002','INSERT','','','2019-12-17 11:09:35','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2019_REV_02-00003','DELETE','','','2019-12-17 11:09:58','002_SAL_SALES_QUOTATION','0003/Q/2019_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_00-00001','INSERT','','','2020-02-14 10:32:36','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_00-00002','INSERT','','','2020-02-17 16:22:35','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_00-00003','INSERT','','','2020-02-21 15:31:56','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_00-00004','INSERT','','','2020-03-02 09:50:19','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_00-00005','INSERT','','','2020-03-18 16:06:29','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_00-00006','INSERT','','','2020-06-24 12:20:55','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_00-00007','INSERT','','','2020-08-11 22:41:52','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_00-00008','UPDATE','','','2020-08-11 23:00:37','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_01-00001','INSERT','','','2020-02-14 14:14:29','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_01-00002','DELETE','','','2020-02-14 14:17:40','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_01-00003','INSERT','','','2020-02-14 14:30:16','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_01-00004','UPDATE','','','2020-02-14 15:11:02','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_01-00005','INSERT','','','2020-02-17 16:23:05','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_01-00006','INSERT','','','2020-02-21 15:32:16','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_02-00001','INSERT','','','2020-02-18 10:19:37','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_02-00002','INSERT','','','2020-02-21 15:33:08','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_03-00001','INSERT','','','2020-02-18 10:44:42','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_03','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0003/Q/2020_REV_03-00002','DELETE','','','2020-02-18 10:48:14','002_SAL_SALES_QUOTATION','0003/Q/2020_REV_03','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0004/Q/2019_REV_00-00001','INSERT','','','2019-12-16 17:04:44','002_SAL_SALES_QUOTATION','0004/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0004/Q/2019_REV_00.01-00001','INSERT','','','2019-12-16 17:10:05','002_SAL_SALES_QUOTATION','0004/Q/2019_REV_00.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0004/Q/2019_REV_00.01-00002','DELETE','','','2019-12-16 17:10:15','002_SAL_SALES_QUOTATION','0004/Q/2019_REV_00.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0004/Q/2020_REV_00-00001','INSERT','','','2020-02-18 10:50:14','002_SAL_SALES_QUOTATION','0004/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0004/Q/2020_REV_00-00002','INSERT','','','2020-04-07 11:54:23','002_SAL_SALES_QUOTATION','0004/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0004/Q/2020_REV_00-00003','INSERT','','','2020-06-24 12:23:03','002_SAL_SALES_QUOTATION','0004/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0004/Q/2020_REV_00-00004','INSERT','','','2020-08-14 11:09:12','002_SAL_SALES_QUOTATION','0004/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0004/Q/2020_REV_01-00001','INSERT','','','2020-02-18 10:50:24','002_SAL_SALES_QUOTATION','0004/Q/2020_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0005/Q/2020_REV_00-00001','INSERT','','','2020-04-08 13:07:41','002_SAL_SALES_QUOTATION','0005/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0005/Q/2020_REV_00-00002','INSERT','','','2020-08-18 11:53:15','002_SAL_SALES_QUOTATION','0005/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0006/Q/2020_REV_00-00001','INSERT','','','2020-04-08 14:41:34','002_SAL_SALES_QUOTATION','0006/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/0006/Q/2020_REV_00-00002','INSERT','','','2020-08-26 13:17:49','002_SAL_SALES_QUOTATION','0006/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/001/Q/2019_REV_00-00001','INSERT','','','2019-12-16 11:26:37','002_SAL_SALES_QUOTATION','001/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/001/Q/2019_REV_00-00002','DELETE','','','2019-12-16 11:27:27','002_SAL_SALES_QUOTATION','001/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV0001_00-00001','INSERT','','','2019-12-16 11:09:15','002_SAL_SALES_QUOTATION','4/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV0001_00-00002','DELETE','','','2019-12-16 11:14:18','002_SAL_SALES_QUOTATION','4/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_00-00001','INSERT','','','2019-12-16 11:19:49','002_SAL_SALES_QUOTATION','4/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_00-00002','DELETE','','','2019-12-16 11:25:37','002_SAL_SALES_QUOTATION','4/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_000100-00001','INSERT','','','2019-12-13 12:21:37','002_SAL_SALES_QUOTATION','4/Q/2019_REV_000100','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_01-00001','INSERT','','','2019-12-16 10:43:23','002_SAL_SALES_QUOTATION','4/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_01-00002','DELETE','','','2019-12-16 10:44:43','002_SAL_SALES_QUOTATION','4/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_01-00003','INSERT','','','2019-12-16 10:46:32','002_SAL_SALES_QUOTATION','4/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_01-00004','DELETE','','','2019-12-16 10:48:23','002_SAL_SALES_QUOTATION','4/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_01-00005','INSERT','','','2019-12-16 10:48:58','002_SAL_SALES_QUOTATION','4/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_01-00006','DELETE','','','2019-12-16 10:49:03','002_SAL_SALES_QUOTATION','4/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_01-00007','INSERT','','','2019-12-16 10:51:59','002_SAL_SALES_QUOTATION','4/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/4/Q/2019_REV_01-00008','DELETE','','','2019-12-16 10:57:28','002_SAL_SALES_QUOTATION','4/Q/2019_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001-00001','INSERT','','','2019-12-05 17:05:36','002_SAL_SALES_QUOTATION','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001-00002','UPDATE','','','2019-12-06 16:45:49','002_SAL_SALES_QUOTATION','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001-00003','UPDATE','','','2019-12-06 16:53:00','002_SAL_SALES_QUOTATION','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001-00004','UPDATE','','','2019-12-06 17:06:47','002_SAL_SALES_QUOTATION','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001-00005','DELETE','','','2019-12-06 17:21:34','002_SAL_SALES_QUOTATION','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001-00006','INSERT','','','2019-12-06 17:22:33','002_SAL_SALES_QUOTATION','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001-00007','DELETE','','','2019-12-06 17:40:58','002_SAL_SALES_QUOTATION','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001-00008','INSERT','','','2019-12-06 17:45:28','002_SAL_SALES_QUOTATION','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001-00009','DELETE','','','2019-12-06 17:47:29','002_SAL_SALES_QUOTATION','B001/Q/19120001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00001','INSERT','','','2019-12-06 18:22:08','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00002','UPDATE','','','2019-12-06 19:16:44','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00003','UPDATE','','','2019-12-06 22:22:16','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00004','DELETE','','','2019-12-09 09:54:59','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00005','INSERT','','','2019-12-09 09:55:50','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00006','DELETE','','','2019-12-09 09:59:51','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00007','INSERT','','','2019-12-09 11:16:57','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00008','DELETE','','','2019-12-09 11:20:27','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00009','INSERT','','','2019-12-09 11:47:41','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00010','INSERT','','','2019-12-09 13:36:22','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00011','DELETE','','','2019-12-09 13:38:00','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00012','INSERT','','','2019-12-09 13:49:36','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00013','DELETE','','','2019-12-09 13:51:00','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00014','INSERT','','','2019-12-09 13:52:23','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00015','DELETE','','','2019-12-09 13:55:44','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00016','INSERT','','','2019-12-09 13:56:45','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00017','DELETE','','','2019-12-09 14:14:42','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00018','INSERT','','','2019-12-09 14:18:38','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00019','DELETE','','','2019-12-09 14:23:34','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00020','INSERT','','','2019-12-09 14:24:43','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00021','DELETE','','','2019-12-09 14:27:13','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00022','INSERT','','','2019-12-09 14:33:58','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00023','DELETE','','','2019-12-09 14:34:16','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00024','INSERT','','','2019-12-09 14:44:24','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00025','DELETE','','','2019-12-09 14:45:05','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00026','INSERT','','','2019-12-09 14:52:52','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00027','DELETE','','','2019-12-09 15:06:00','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00028','INSERT','','','2019-12-09 15:07:59','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00029','DELETE','','','2019-12-09 15:10:26','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00030','INSERT','','','2019-12-09 15:21:55','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00031','DELETE','','','2019-12-09 15:29:16','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00032','INSERT','','','2019-12-09 15:35:11','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00033','UPDATE','','','2019-12-09 15:49:34','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00034','UPDATE','','','2019-12-09 16:13:57','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00035','UPDATE','','','2019-12-09 17:28:20','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120001.00-00036','DELETE','','','2019-12-13 10:12:41','002_SAL_SALES_QUOTATION','B001/Q/19120001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120002.00-00001','INSERT','','','2019-12-12 17:41:51','002_SAL_SALES_QUOTATION','B001/Q/19120002.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120003.00-00001','INSERT','','','2019-12-13 10:13:59','002_SAL_SALES_QUOTATION','B001/Q/19120003.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION/B001/Q/19120003.01-00001','INSERT','','','2019-12-13 10:34:42','002_SAL_SALES_QUOTATION','B001/Q/19120003.01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_APPROVAL//Q/2019_REV0001_00-00001','INSERT','','','2019-12-16 15:55:31','002_SAL_SALES_QUOTATION_APPROVAL','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_APPROVAL//Q/2019_REV0001_00-00002','INSERT','','','2019-12-16 15:55:54','002_SAL_SALES_QUOTATION_APPROVAL','/Q/2019_REV0001_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_APPROVAL/0001/Q/2019_REV_00-00001','INSERT','','','2019-12-23 17:07:06','002_SAL_SALES_QUOTATION_APPROVAL','0001/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_APPROVAL/0001/Q/2020_REV_00-00001','INSERT','','','2020-01-06 16:39:37','002_SAL_SALES_QUOTATION_APPROVAL','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_APPROVAL/0002/Q/2019_REV_00-00001','INSERT','','','2019-12-23 17:01:31','002_SAL_SALES_QUOTATION_APPROVAL','0002/Q/2019_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0001/Q/2020_REV_00-00001','INSERT','','','2020-02-19 16:58:10','002_SAL_SALES_QUOTATION_STATUS','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0001/Q/2020_REV_00-00002','INSERT','','','2020-02-20 13:30:53','002_SAL_SALES_QUOTATION_STATUS','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0001/Q/2020_REV_00-00003','INSERT','','','2020-02-26 17:16:04','002_SAL_SALES_QUOTATION_STATUS','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0001/Q/2020_REV_00-00004','INSERT','','','2020-03-03 15:38:57','002_SAL_SALES_QUOTATION_STATUS','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0001/Q/2020_REV_00-00005','INSERT','','','2020-08-11 13:36:00','002_SAL_SALES_QUOTATION_STATUS','0001/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0001/Q/2020_REV_01-00001','INSERT','','','2020-04-27 16:11:16','002_SAL_SALES_QUOTATION_STATUS','0001/Q/2020_REV_01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0002/Q/2020_REV_00-00001','INSERT','','','2020-02-27 11:55:10','002_SAL_SALES_QUOTATION_STATUS','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0002/Q/2020_REV_00-00002','INSERT','','','2020-03-11 00:30:26','002_SAL_SALES_QUOTATION_STATUS','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0002/Q/2020_REV_00-00003','INSERT','','','2020-04-09 13:54:18','002_SAL_SALES_QUOTATION_STATUS','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0002/Q/2020_REV_00-00004','INSERT','','','2020-08-11 12:34:58','002_SAL_SALES_QUOTATION_STATUS','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0002/Q/2020_REV_00-00005','INSERT','','','2020-08-13 13:08:13','002_SAL_SALES_QUOTATION_STATUS','0002/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0003/Q/2020_REV_00-00001','INSERT','','','2020-03-02 09:50:37','002_SAL_SALES_QUOTATION_STATUS','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0003/Q/2020_REV_00-00002','INSERT','','','2020-06-24 13:56:26','002_SAL_SALES_QUOTATION_STATUS','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0003/Q/2020_REV_00-00003','INSERT','','','2020-08-13 12:58:09','002_SAL_SALES_QUOTATION_STATUS','0003/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0003/Q/2020_REV_02-00001','INSERT','','','2020-02-21 16:15:51','002_SAL_SALES_QUOTATION_STATUS','0003/Q/2020_REV_02','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0004/Q/2020_REV_00-00001','INSERT','','','2020-04-07 15:33:28','002_SAL_SALES_QUOTATION_STATUS','0004/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0004/Q/2020_REV_00-00002','INSERT','','','2020-06-24 13:32:55','002_SAL_SALES_QUOTATION_STATUS','0004/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0004/Q/2020_REV_00-00003','INSERT','','','2020-08-18 11:55:22','002_SAL_SALES_QUOTATION_STATUS','0004/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0005/Q/2020_REV_00-00001','INSERT','','','2020-08-18 11:56:07','002_SAL_SALES_QUOTATION_STATUS','0005/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0006/Q/2020_REV_00-00001','INSERT','','','2020-04-08 14:49:56','002_SAL_SALES_QUOTATION_STATUS','0006/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('002_SAL_SALES_QUOTATION_STATUS/0006/Q/2020_REV_00-00002','INSERT','','','2020-08-26 13:19:52','002_SAL_SALES_QUOTATION_STATUS','0006/Q/2020_REV_00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B001/ADJ-IN/20010001-00001','INSERT','','','2020-01-31 14:23:50','003_IVT_ADJUSTMENT_IN','B001/ADJ-IN/20010001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B001/ADJ-IN/20010001-00002','UPDATE','','','2020-01-31 14:34:16','003_IVT_ADJUSTMENT_IN','B001/ADJ-IN/20010001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B001/ADJ-IN/20010001-00003','UPDATE','Adjustment In Approval','','2020-01-31 15:11:25','003_IVT_ADJUSTMENT_IN','B001/ADJ-IN/20010001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B001/ADJ-IN/20010001-00004','DELETE','','','2020-02-03 13:36:49','003_IVT_ADJUSTMENT_IN','B001/ADJ-IN/20010001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B001/ADJ-IN/20020001-00001','INSERT','','','2020-02-03 13:37:24','003_IVT_ADJUSTMENT_IN','B001/ADJ-IN/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B001/ADJ-IN/20020001-00002','UPDATE','Adjustment In Approval','','2020-02-03 15:08:43','003_IVT_ADJUSTMENT_IN','B001/ADJ-IN/20020001',NULL);
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B002/ADJ-IN/20020001-00001','INSERT','','','2020-02-03 16:48:14','003_IVT_ADJUSTMENT_IN','B002/ADJ-IN/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B002/ADJ-IN/20020001-00002','UPDATE','Adjustment In Approval','','2020-02-03 16:48:56','003_IVT_ADJUSTMENT_IN','B002/ADJ-IN/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B003/ADJ-IN/20020001-00001','INSERT','','','2020-02-03 16:57:03','003_IVT_ADJUSTMENT_IN','B003/ADJ-IN/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_IN/B003/ADJ-IN/20020001-00002','UPDATE','Adjustment In Approval','','2020-02-03 16:58:11','003_IVT_ADJUSTMENT_IN','B003/ADJ-IN/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_OUT/B001/ADJOUT20020001-00001','INSERT','','','2020-02-03 15:37:56','003_IVT_ADJUSTMENT_OUT','B001/ADJOUT20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ADJUSTMENT_OUT/B001/ADJOUT20020001-00002','UPDATE','Adjustment Out Approval','','2020-02-03 15:59:59','003_IVT_ADJUSTMENT_OUT','B001/ADJOUT20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ASSEMBLY_JOB_ORDER/B001/ASM-JOB/20020001-00001','INSERT','','','2020-02-05 11:28:04','003_IVT_ASSEMBLY_JOB_ORDER','B001/ASM-JOB/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ASSEMBLY_JOB_ORDER/B001/ASM-JOB/20020001-00002','DELETE','','','2020-02-06 09:22:19','003_IVT_ASSEMBLY_JOB_ORDER','B001/ASM-JOB/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ASSEMBLY_JOB_ORDER/B001/ASM-JOB/20020001-00003','INSERT','','','2020-02-06 10:31:20','003_IVT_ASSEMBLY_JOB_ORDER','B001/ASM-JOB/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ASSEMBLY_REALIZATION/B001/ASM-WO/20020001-00001','INSERT','','','2020-02-06 14:08:21','003_IVT_ASSEMBLY_REALIZATION','B001/ASM-WO/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ASSEMBLY_REALIZATION/B001/ASM-WO/20020001-00002','INSERT','','','2020-02-06 15:00:29','003_IVT_ASSEMBLY_REALIZATION','B001/ASM-WO/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE/B001/GRN/200900001-00001','INSERT','','','2020-09-25 10:31:48','003_IVT_GOODS_RECEIVED_NOTE','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE/B001/GRN/200900001-00002','INSERT','','','2020-09-29 11:35:14','003_IVT_GOODS_RECEIVED_NOTE','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE/B001/GRN/200900001-00003','CONFIRMATION','','','2020-09-29 12:13:11','003_IVT_GOODS_RECEIVED_NOTE','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE/B001/GRN/201000001-00001','INSERT','','','2020-10-02 13:38:13','003_IVT_GOODS_RECEIVED_NOTE','B001/GRN/201000001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE/B001/GRN/201000001-00002','INSERT','','','2020-10-02 17:10:02','003_IVT_GOODS_RECEIVED_NOTE','B001/GRN/201000001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE/B001/GRN/L/200900001-00001','INSERT','','','2020-09-24 11:03:28','003_IVT_GOODS_RECEIVED_NOTE','B001/GRN/L/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE/B001/GRN/L/200900001-00002','INSERT','','','2020-09-24 11:27:18','003_IVT_GOODS_RECEIVED_NOTE','B001/GRN/L/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/200900001-00001','CONFIRMATION','','','2020-09-30 16:52:36','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/200900001-00002','CONFIRMATION','','','2020-10-01 14:01:10','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/200900001-00003','CONFIRMATION','','','2020-10-01 14:14:38','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/200900001-00004','CONFIRMATION','','','2020-10-01 14:26:54','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/200900001-00005','CONFIRMATION','','','2020-10-01 14:30:30','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/200900001-00006','CONFIRMATION','','','2020-10-01 15:02:14','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/200900001-00007','CONFIRMATION','','','2020-10-01 15:18:13','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/200900001-00008','CONFIRMATION','','','2020-10-02 11:00:30','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/200900001-00009','CONFIRMATION','','','2020-10-06 16:05:57','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/200900001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION/B001/GRN/201000001-00001','CONFIRMATION','','','2020-10-02 17:04:05','003_IVT_GOODS_RECEIVED_NOTE_CONFIRMATION','B001/GRN/201000001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_MATERIAL_STOCK_LOCATION/B001/GRN/200900001-BANG-00001-00001','INSERT','','','2020-10-06 16:05:57','003_IVT_ITEM_MATERIAL_STOCK_LOCATION','B001/GRN/200900001-BANG-00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_MATERIAL_STOCK_LOCATION/B001/GRN/200900001-BANG-00002-00001','INSERT','','','2020-10-06 16:05:57','003_IVT_ITEM_MATERIAL_STOCK_LOCATION','B001/GRN/200900001-BANG-00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_MATERIAL_STOCK_LOCATION/B001/GRN/200900001-BANG-00003-00001','INSERT','','','2020-10-06 16:05:57','003_IVT_ITEM_MATERIAL_STOCK_LOCATION','B001/GRN/200900001-BANG-00003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_STOCK_LOCATION/B001/GRN/200900001-BANG-00001-00001','INSERT','','','2020-09-29 11:35:01','003_IVT_ITEM_STOCK_LOCATION','B001/GRN/200900001-BANG-00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_STOCK_LOCATION/B001/GRN/200900001-BANG-00001-00002','INSERT','','','2020-10-01 15:18:12','003_IVT_ITEM_STOCK_LOCATION','B001/GRN/200900001-BANG-00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_STOCK_LOCATION/B001/GRN/200900001-BANG-00001-00003','INSERT','','','2020-10-02 11:00:10','003_IVT_ITEM_STOCK_LOCATION','B001/GRN/200900001-BANG-00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_STOCK_LOCATION/B001/GRN/200900001-BANG-00002-00001','INSERT','','','2020-09-29 11:35:12','003_IVT_ITEM_STOCK_LOCATION','B001/GRN/200900001-BANG-00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_STOCK_LOCATION/B001/GRN/200900001-BANG-00002-00002','INSERT','','','2020-10-01 15:18:12','003_IVT_ITEM_STOCK_LOCATION','B001/GRN/200900001-BANG-00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_STOCK_LOCATION/B001/GRN/200900001-BANG-00002-00003','INSERT','','','2020-10-02 11:00:18','003_IVT_ITEM_STOCK_LOCATION','B001/GRN/200900001-BANG-00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_STOCK_LOCATION/B001/GRN/200900001-BANG-00003-00001','INSERT','','','2020-09-29 11:35:14','003_IVT_ITEM_STOCK_LOCATION','B001/GRN/200900001-BANG-00003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_STOCK_LOCATION/B001/GRN/200900001-BANG-00003-00002','INSERT','','','2020-10-01 15:18:13','003_IVT_ITEM_STOCK_LOCATION','B001/GRN/200900001-BANG-00003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_ITEM_STOCK_LOCATION/B001/GRN/200900001-BANG-00003-00003','INSERT','','','2020-10-02 11:00:26','003_IVT_ITEM_STOCK_LOCATION','B001/GRN/200900001-BANG-00003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_WAREHOUSE_TRANSFER_IN/B001/WHTI/20020001-00001','INSERT','','','2020-02-05 10:11:32','003_IVT_WAREHOUSE_TRANSFER_IN','B001/WHTI/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('003_IVT_WAREHOUSE_TRANSFER_OUT/B001/WHTO/20020001-00001','INSERT','','','2020-02-03 17:20:43','003_IVT_WAREHOUSE_TRANSFER_OUT','B001/WHTO/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_BANK_PAYMENT/B001/12320020001-00001','INSERT','','','2020-02-24 14:07:52','004_FIN_BANK_PAYMENT','B001/12320020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_BANK_PAYMENT/B001/12320020001-00002','INSERT','','','2020-02-24 17:32:25','004_FIN_BANK_PAYMENT','B001/12320020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_BANK_PAYMENT/B001/12320020002-00001','INSERT','','','2020-02-24 14:47:49','004_FIN_BANK_PAYMENT','B001/12320020002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_BANK_PAYMENT/B001/12320030001-00001','INSERT','','','2020-03-02 23:49:43','004_FIN_BANK_PAYMENT','B001/12320030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_BANK_PAYMENT/B001/123CDP20020001-00001','INSERT','','','2020-02-24 17:33:16','004_FIN_BANK_PAYMENT','B001/123CDP20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_CASH_PAYMENT/B001/20030001-00001','INSERT','','','2020-03-02 23:40:18','004_FIN_CASH_PAYMENT','B001/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_CUSTOMER_CREDIT_NOTE/B001/CCN/19050001-00001','INSERT','','','2019-05-23 14:47:26','004_FIN_CUSTOMER_CREDIT_NOTE','B001/CCN/19050001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_CUSTOMER_DEBIT_NOTE/B001/CDN/19050001-00001','INSERT','','','2019-05-23 14:44:28','004_FIN_CUSTOMER_DEBIT_NOTE','B001/CDN/19050001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_CUSTOMER_DEBIT_NOTE/B001/CDN/20030001-00001','INSERT','','','2020-03-02 14:38:00','004_FIN_CUSTOMER_DEBIT_NOTE','B001/CDN/20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_GIRO_PAYMENT/B001/GRP20020001-00001','INSERT','','','2020-02-24 11:51:20','004_FIN_GIRO_PAYMENT','B001/GRP20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_GIRO_PAYMENT/B001/GRP20020002-00001','INSERT','','','2020-02-24 13:20:53','004_FIN_GIRO_PAYMENT','B001/GRP20020002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_GIRO_PAYMENT/B001/GRP20020002-00002','UPDATE','','','2020-02-24 13:21:24','004_FIN_GIRO_PAYMENT','B001/GRP20020002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_GIRO_PAYMENT/B001/GRP20030001-00001','INSERT','','','2020-03-02 22:13:55','004_FIN_GIRO_PAYMENT','B001/GRP20030001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_GIRO_PAYMENT/B003/GRP19050001-00001','INSERT','','','2019-05-22 17:01:26','004_FIN_GIRO_PAYMENT','B003/GRP19050001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_GIRO_PAYMENT_INQUIRY/B001/GRP20020001-00001','UPDATE','','','2020-02-24 13:20:16','004_FIN_GIRO_PAYMENT_INQUIRY','B001/GRP20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_GIRO_RECEIVED/B003/GRR19050001-00001','INSERT','','','2019-05-22 15:23:42','004_FIN_GIRO_RECEIVED','B003/GRR19050001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00001','INSERT','','','2020-02-24 11:15:01','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00002','INSERT','','','2020-02-24 11:20:39','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00003','UPDATE','Approval - Finance Request','','2020-02-24 11:21:44','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00004','INSERT','','','2020-02-24 14:53:37','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00005','DELETE','','','2020-02-24 14:56:12','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00006','INSERT','','','2020-02-24 14:57:06','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00007','DELETE','','','2020-02-24 14:59:37','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00008','INSERT','','','2020-02-24 15:01:00','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00009','DELETE','','','2020-02-24 15:04:06','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00010','INSERT','','','2020-02-24 15:06:02','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00011','DELETE','','','2020-02-24 15:09:06','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00012','INSERT','','','2020-02-24 15:10:27','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00013','DELETE','','','2020-02-24 15:23:48','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00014','INSERT','','','2020-02-24 15:24:32','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00015','UPDATE','Approval - Finance Request','','2020-02-24 15:25:21','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200001-00016','INSERT','','','2020-02-24 15:28:59','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200002-00001','INSERT','','','2020-02-24 11:30:45','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200002-00002','INSERT','','','2020-02-24 15:23:39','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200002-00003','DELETE','','','2020-02-24 15:23:51','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200002-00004','INSERT','','','2020-02-24 15:48:57','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200003-00001','INSERT','','','2020-02-24 15:52:04','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200004-00001','INSERT','','','2020-02-24 16:01:54','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200004','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200005-00001','INSERT','','','2020-02-24 16:05:00','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200005','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200006-00001','INSERT','','','2020-02-24 16:06:37','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200006','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200006-00002','DELETE','','','2020-02-24 16:27:03','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200006','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200007-00001','INSERT','','','2020-02-24 16:14:00','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200007','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200008-00001','INSERT','','','2020-02-24 16:28:28','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200008','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200200009-00001','INSERT','','','2020-02-24 16:31:30','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200200009','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200300001-00001','INSERT','','','2020-03-02 22:31:33','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200300001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200300001-00002','INSERT','','','2020-03-02 22:49:05','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200300001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200300001-00003','UPDATE','Approval - Finance Request','','2020-03-02 23:03:18','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200300001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200300002-00001','INSERT','','','2020-03-02 23:45:59','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200300002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_PAYMENT_REQUEST/B001/PYM-RQ/PRQ200300002-00002','UPDATE','Approval - Finance Request','','2020-03-02 23:46:14','004_FIN_PAYMENT_REQUEST','B001/PYM-RQ/PRQ200300002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_VENDOR_DEBIT_NOTE/B001/VDN/20020001-00001','INSERT','','','2020-02-24 13:35:16','004_FIN_VENDOR_DEBIT_NOTE','B001/VDN/20020001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('004_FIN_VENDOR_DOWN_PAYMENT/B001/VDP/200200001-00001','INSERT','','','2020-02-24 13:34:09','004_FIN_VENDOR_DOWN_PAYMENT','B001/VDP/200200001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ADDITIONAL_COST/AUTO-00001','INSERT','','','2020-07-30 12:28:43','006_MST_ADDITIONAL_COST','AUTO','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ADDITIONAL_COST/AUTO-00002','UPDATE','','','2020-07-30 13:50:48','006_MST_ADDITIONAL_COST','AUTO','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ADDITIONAL_COST/JJLIN-00001','INSERT','','','2020-07-30 14:59:51','006_MST_ADDITIONAL_COST','JJLIN','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ADDITIONAL_FEE/OPN-00001','INSERT','','','2020-08-04 14:36:18','006_MST_ADDITIONAL_FEE','OPN','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ADDITIONAL_FEE/PARKIR-00001','INSERT','','','2020-08-04 14:15:14','006_MST_ADDITIONAL_FEE','PARKIR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ADDITIONAL_FEE/TRNSPRT-00001','INSERT','','','2020-08-04 14:24:36','006_MST_ADDITIONAL_FEE','TRNSPRT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_CATEGORY/CTR-00001-00001','INSERT','','','2019-05-23 16:06:47','006_MST_ASSET_CATEGORY','CTR-00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_CATEGORY/CTR-00001-00002','DELETE','','','2019-06-12 11:09:01','006_MST_ASSET_CATEGORY','CTR-00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_CATEGORY/FUR-00001','INSERT','','','2019-06-12 11:14:04','006_MST_ASSET_CATEGORY','FUR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_CATEGORY/KDR-00001','INSERT','','','2019-06-12 11:25:34','006_MST_ASSET_CATEGORY','KDR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_CATEGORY/TRA-00001','INSERT','','','2019-06-12 11:14:58','006_MST_ASSET_CATEGORY','TRA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_CATEGORY/TRA-00002','UPDATE','','','2019-06-12 11:16:05','006_MST_ASSET_CATEGORY','TRA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_CATEGORY/TRA-00003','UPDATE','','','2019-06-12 11:17:22','006_MST_ASSET_CATEGORY','TRA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_CATEGORY/TRA-00004','DELETE','','','2019-06-12 11:25:21','006_MST_ASSET_CATEGORY','TRA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_CATEGORY/TRS-00001','INSERT','','','2019-06-12 11:40:56','006_MST_ASSET_CATEGORY','TRS','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_REGISTRATION/AST1906001-00001','INSERT','','','2019-06-12 11:39:23','006_MST_ASSET_REGISTRATION','AST1906001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_REGISTRATION/AST1906002-00001','INSERT','','','2019-06-12 11:39:23','006_MST_ASSET_REGISTRATION','AST1906002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ASSET_REGISTRATION/AST1906002-00002','DELETE','','','2019-06-12 12:10:33','006_MST_ASSET_REGISTRATION','AST1906002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK/CIMB-00001','INSERT','','','2019-06-12 12:18:42','006_MST_BANK','CIMB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK/CIMB-00002','UPDATE','','','2019-06-12 15:09:39','006_MST_BANK','CIMB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK/CIMB-00003','DELETE','','','2019-06-12 15:09:46','006_MST_BANK','CIMB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK/MDR-00001','INSERT','','','2019-05-22 15:23:05','006_MST_BANK','MDR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK/MEMORIES-00001','INSERT','','','2019-11-25 13:58:06','006_MST_BANK','MEMORIES','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK_ACCOUNT/CIMB-00001','INSERT','','','2019-06-13 11:33:27','006_MST_BANK_ACCOUNT','CIMB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK_ACCOUNT/CIMB-00002','UPDATE','','','2019-06-13 11:43:11','006_MST_BANK_ACCOUNT','CIMB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK_ACCOUNT/CIMB-00003','DELETE','','','2019-06-13 11:43:36','006_MST_BANK_ACCOUNT','CIMB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK_ACCOUNT/DADAH-00001','INSERT','','','2020-01-23 14:32:40','006_MST_BANK_ACCOUNT','DADAH','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK_ACCOUNT/MDR_001-00001','INSERT','','','2019-05-22 15:15:40','006_MST_BANK_ACCOUNT','MDR_001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BANK_ACCOUNT/ULL-00001','INSERT','','','2020-01-23 11:47:45','006_MST_BANK_ACCOUNT','ULL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BILL_OF_MATERIAL/CORONA-00001','INSERT','006_MST_BILL_OF_MATERIAL','','2020-01-28 11:46:27','006_MST_BILL_OF_MATERIAL','CORONA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BILL_OF_MATERIAL/CORONA-00002','UPDATE','006_MST_BILL_OF_MATERIAL','','2020-02-06 10:23:28','006_MST_BILL_OF_MATERIAL','CORONA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BRANCH/B002-00001','UPDATE','','','2020-01-09 11:42:05','006_MST_BRANCH','B002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BRANCH/B004-00001','INSERT','','','2019-06-13 15:17:44','006_MST_BRANCH','B004','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BRANCH/B004-00002','UPDATE','','','2019-06-13 15:18:20','006_MST_BRANCH','B004','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BRANCH/B004-00003','DELETE','','','2019-06-13 15:18:39','006_MST_BRANCH','B004','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BRANCH/PTK-00001','INSERT','','','2019-06-12 23:48:00','006_MST_BRANCH','PTK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BRANCH/PTK-00002','DELETE','','','2019-06-12 23:48:17','006_MST_BRANCH','PTK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_BRANCH/TRK-00001','INSERT','','','2020-08-26 12:16:10','006_MST_BRANCH','TRK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CAD_DOCUMENT_FOR_APPROVAL/ONE-00001','INSERT','','','2019-12-17 15:24:03','006_MST_CAD_DOCUMENT_FOR_APPROVAL','ONE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CASH_ACCOUNT/CASH_ACC01-00001','INSERT','006_MST_CASH_ACCOUNT','','2020-01-23 13:47:38','006_MST_CASH_ACCOUNT','CASH_ACC01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CASH_ACCOUNT/MDR001-00001','INSERT','','','2019-06-13 15:23:43','006_MST_CASH_ACCOUNT','MDR001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CASH_ACCOUNT/MDR001-00002','UPDATE','','','2019-06-13 15:24:12','006_MST_CASH_ACCOUNT','MDR001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CASH_ACCOUNT/MDR001-00003','DELETE','','','2019-06-13 15:24:29','006_MST_CASH_ACCOUNT','MDR001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CHART_OF_ACCOUNT/01-01-00001','UPDATE','','','2020-08-27 14:26:05','006_MST_CHART_OF_ACCOUNT','01-01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CHART_OF_ACCOUNT/01-01-001-00001','UPDATE','','','2020-08-27 14:05:53','006_MST_CHART_OF_ACCOUNT','01-01-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CHART_OF_ACCOUNT/01-01-001-00002','UPDATE','','','2020-08-27 14:06:04','006_MST_CHART_OF_ACCOUNT','01-01-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CHART_OF_ACCOUNT/01-01-001-00003','UPDATE','','','2020-08-27 14:06:11','006_MST_CHART_OF_ACCOUNT','01-01-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CHART_OF_ACCOUNT/01-01-001-00004','UPDATE','','','2020-08-27 14:23:07','006_MST_CHART_OF_ACCOUNT','01-01-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CHART_OF_ACCOUNT/01-01-001-00005','UPDATE','','','2020-08-27 14:23:41','006_MST_CHART_OF_ACCOUNT','01-01-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CHART_OF_ACCOUNT/01-01-001-0002-TRK-00001','UPDATE','','','2020-08-27 14:05:31','006_MST_CHART_OF_ACCOUNT','01-01-001-0002-TRK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CHART_OF_ACCOUNT/01-01-001-0002-TRK-00002','UPDATE','','','2020-08-27 14:05:41','006_MST_CHART_OF_ACCOUNT','01-01-001-0002-TRK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CHART_OF_ACCOUNT/01-01-001-0002-TRK-00003','UPDATE','','','2020-08-27 14:05:47','006_MST_CHART_OF_ACCOUNT','01-01-001-0002-TRK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CITY/KBY-LM-00001','INSERT','','','2019-06-14 14:11:45','006_MST_CITY','KBY-LM','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CITY/KBY-LM-00002','UPDATE','','','2019-06-14 14:12:52','006_MST_CITY','KBY-LM','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CITY/KBY-LM-00003','DELETE','','','2019-06-14 14:13:00','006_MST_CITY','KBY-LM','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_COUNTRY/SG-00001','INSERT','','','2019-06-14 14:15:28','006_MST_COUNTRY','SG','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_COUNTRY/SG-00002','UPDATE','','','2019-06-14 14:15:56','006_MST_COUNTRY','SG','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_COUNTRY/SG-00003','DELETE','','','2019-06-14 14:16:01','006_MST_COUNTRY','SG','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CO_DRIVER/CK_2001_001-00001','INSERT','CO_DRIVER','','2020-01-27 15:31:19','006_MST_CO_DRIVER','CK_2001_001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CURRENCY/USD-00001','UPDATE','','','2020-01-24 11:46:21','006_MST_CURRENCY','USD','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CURRENCY/YR-00001','INSERT','','','2019-06-14 14:17:16','006_MST_CURRENCY','YR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CURRENCY/YR-00002','UPDATE','','','2019-06-14 14:17:26','006_MST_CURRENCY','YR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CURRENCY/YR-00003','DELETE','','','2019-06-14 14:17:33','006_MST_CURRENCY','YR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/C0001-00001','INSERT','','','2019-06-12 23:58:55','006_MST_CUSTOMER','C0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/CUS00001-00001','INSERT','','','2020-08-10 14:22:49','006_MST_CUSTOMER','CUS00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/CUS00002-00001','INSERT','','','2020-08-10 14:23:27','006_MST_CUSTOMER','CUS00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/CUS00002-00002','DELETE','','','2020-08-10 14:29:18','006_MST_CUSTOMER','CUS00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/CUS00002-00003','INSERT','','','2020-08-10 14:29:53','006_MST_CUSTOMER','CUS00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/CUS001-00001','INSERT','','','2020-02-20 10:33:42','006_MST_CUSTOMER','CUS001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/CUS001-00002','UPDATE','','','2020-02-25 16:39:48','006_MST_CUSTOMER','CUS001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/CUS001-00003','UPDATE','','','2020-07-16 13:21:33','006_MST_CUSTOMER','CUS001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/WAKWAW-00001','INSERT','','','2019-11-27 13:59:05','006_MST_CUSTOMER','WAKWAW','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/WAKWAW-00002','UPDATE','','','2020-02-10 16:35:52','006_MST_CUSTOMER','WAKWAW','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/WAKWAW-00003','UPDATE','','','2020-02-11 09:48:14','006_MST_CUSTOMER','WAKWAW','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/WAKWAW-00004','UPDATE','','','2020-02-11 11:50:50','006_MST_CUSTOMER','WAKWAW','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/WAKWAW-00005','UPDATE','','','2020-02-20 10:27:35','006_MST_CUSTOMER','WAKWAW','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/WAKWAW-00006','UPDATE','','','2020-02-25 16:40:00','006_MST_CUSTOMER','WAKWAW','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER/WAKWAW-00007','UPDATE','','','2020-07-16 15:27:33','006_MST_CUSTOMER','WAKWAW','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_ADDRESS/CUSADDR00001-00001','INSERT','006_MST_CUSTOMER_ADDRESS','','2020-06-25 17:29:43','006_MST_CUSTOMER_ADDRESS','CUSADDR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_ADDRESS/CUSADDR00001-00002','DELETE','006_MST_CUSTOMER_ADDRESS','','2020-06-25 17:32:09','006_MST_CUSTOMER_ADDRESS','CUSADDR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_ADDRESS/CUSADDR00001-00003','INSERT','006_MST_CUSTOMER_ADDRESS','','2020-06-25 17:32:20','006_MST_CUSTOMER_ADDRESS','CUSADDR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_ADDRESS/CUSADDR00001-00004','DELETE','006_MST_CUSTOMER_ADDRESS','','2020-06-25 17:33:57','006_MST_CUSTOMER_ADDRESS','CUSADDR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_ADDRESS/CUSADDR00001-00005','INSERT','006_MST_CUSTOMER_ADDRESS','','2020-06-25 17:34:06','006_MST_CUSTOMER_ADDRESS','CUSADDR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_ADDRESS/WAKWAW-00001-00001','INSERT','006_MST_CUSTOMER_ADDRESS','','2020-01-24 13:42:58','006_MST_CUSTOMER_ADDRESS','WAKWAW-00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_CATEGORY/CUST01-00001','INSERT','','','2020-01-24 12:19:02','006_MST_CUSTOMER_CATEGORY','CUST01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_CONTACT/CUSCTC00001-00001','INSERT','','','2020-10-06 10:25:49','006_MST_CUSTOMER_CONTACT','CUSCTC00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_CONTACT/CUSCTC00001-00002','DELETE','','','2020-10-06 10:26:10','006_MST_CUSTOMER_CONTACT','CUSCTC00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_CONTACT/CUSCTC00001-00003','INSERT','','','2020-10-06 11:17:59','006_MST_CUSTOMER_CONTACT','CUSCTC00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_CONTACT/CUSCTC00001-00004','DELETE','','','2020-10-06 11:18:25','006_MST_CUSTOMER_CONTACT','CUSCTC00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_CONTACT/CUSCTC00002-00001','INSERT','','','2020-10-06 10:25:50','006_MST_CUSTOMER_CONTACT','CUSCTC00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_CONTACT/CUSCTC00002-00002','DELETE','','','2020-10-06 10:26:06','006_MST_CUSTOMER_CONTACT','CUSCTC00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_CUSTOMER_CONTACT/WAKWAW-001-00001','INSERT','','','2020-01-27 13:35:11','006_MST_CUSTOMER_CONTACT','WAKWAW-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_DESIGN/MAROON5-00001','INSERT','','','2019-12-17 15:53:06','006_MST_DCAS_DESIGN','MAROON5','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_FIRE_SAFE_BY_DESIGN/CINTA-00001','INSERT','','','2019-12-17 16:13:53','006_MST_DCAS_FIRE_SAFE_BY_DESIGN','CINTA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_HYDRO_TEST/UNKNOWN-00001','INSERT','','','2019-12-17 16:46:13','006_MST_DCAS_HYDRO_TEST','UNKNOWN','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_LEGAL_REQUIREMENTS/QING FEI DE YI-00001','INSERT','','','2019-12-17 17:11:29','006_MST_DCAS_LEGAL_REQUIREMENTS','QING FEI DE YI','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_MARKING/ASD-00001','INSERT','','','2019-12-18 10:56:58','006_MST_DCAS_MARKING','ASD','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_MARKING/ASD-00002','DELETE','','','2019-12-18 10:57:05','006_MST_DCAS_MARKING','ASD','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_MARKING/MARKING-00001','INSERT','','','2019-12-18 10:56:46','006_MST_DCAS_MARKING','MARKING','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_NDE/NDE-00001','INSERT','','','2019-12-18 11:37:26','006_MST_DCAS_NDE','NDE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_TESTING/TRA-00001','INSERT','','','2019-12-18 13:40:39','006_MST_DCAS_TESTING','TRA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DCAS_VISUAL_EXAMINATION/IKB-00001','INSERT','','','2019-12-18 14:08:20','006_MST_DCAS_VISUAL_EXAMINATION','IKB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DEPARTMENT/FINANCE-00001','INSERT','','','2020-01-23 11:36:12','006_MST_DEPARTMENT','FINANCE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DISTRIBUTION_CHANNEL/HTL001-00001','INSERT','CAR BRAND','','2019-06-12 23:56:26','006_MST_DISTRIBUTION_CHANNEL','HTL001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DISTRIBUTION_CHANNEL/PTK-BRT-00001','INSERT','CAR BRAND','','2019-06-14 15:59:30','006_MST_DISTRIBUTION_CHANNEL','PTK-BRT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DISTRIBUTION_CHANNEL/PTK-BRT-00002','UPDATE','CAR BRAND','','2019-06-14 15:59:53','006_MST_DISTRIBUTION_CHANNEL','PTK-BRT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DISTRIBUTION_CHANNEL/PTK-BRT-00003','UPDATE','CAR BRAND','','2019-06-14 16:00:46','006_MST_DISTRIBUTION_CHANNEL','PTK-BRT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DISTRIBUTION_CHANNEL/PTK-TMR-00001','INSERT','CAR BRAND','','2019-06-14 16:01:08','006_MST_DISTRIBUTION_CHANNEL','PTK-TMR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DISTRIBUTION_CHANNEL/PTK-TMR-00002','DELETE','CAR BRAND','','2019-06-14 16:01:13','006_MST_DISTRIBUTION_CHANNEL','PTK-TMR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DRIVER/CK_2001_001-00001','INSERT','DRIVER','','2020-01-27 15:37:44','006_MST_DRIVER','CK_2001_001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_DRIVER/CK_2001_001-00002','INSERT','CO_DRIVER','','2020-01-27 16:11:38','006_MST_DRIVER','CK_2001_001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EDUCATION/SD-00001','INSERT','006_MST_EDUCATION','','2019-06-12 23:43:27','006_MST_EDUCATION','SD','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EDUCATION/SMA-00001','INSERT','006_MST_EDUCATION','','2019-06-14 16:25:03','006_MST_EDUCATION','SMA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EDUCATION/SMA-00002','UPDATE','006_MST_EDUCATION','','2019-06-14 16:25:12','006_MST_EDUCATION','SMA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EDUCATION/SMA-00003','DELETE','006_MST_EDUCATION','','2019-06-14 16:25:32','006_MST_EDUCATION','SMA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EDUCATION/STRATA-1-00001','INSERT','006_MST_EDUCATION','','2020-01-23 16:29:45','006_MST_EDUCATION','STRATA-1','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EDUCATION/UNV-00001','INSERT','006_MST_EDUCATION','','2019-06-14 16:24:44','006_MST_EDUCATION','UNV','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EMPLOYEE/E001-00001','INSERT','','','2019-06-12 23:44:22','006_MST_EMPLOYEE','E001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EMPLOYEE/E002-00001','INSERT','','','2019-06-17 14:20:47','006_MST_EMPLOYEE','E002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EMPLOYEE/JASDJ-00001','INSERT','','','2020-01-23 17:16:41','006_MST_EMPLOYEE','JASDJ','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EXPEDITION/EXP00001-00001','INSERT','','','2020-08-10 13:08:34','006_MST_EXPEDITION','EXP00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EXPEDITION/JAB-00001','INSERT','CAR BRAND','','2019-06-17 14:55:45','006_MST_EXPEDITION','JAB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EXPEDITION/JAB-00002','UPDATE','CAR BRAND','','2019-06-17 15:03:48','006_MST_EXPEDITION','JAB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EXPEDITION/JAB-00003','DELETE','CAR BRAND','','2019-06-17 15:04:07','006_MST_EXPEDITION','JAB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_EXPEDITION/JKB-00001','INSERT','CAR BRAND','','2019-06-17 14:53:29','006_MST_EXPEDITION','JKB','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ISLAND/JW-00001','INSERT','006_MST_ISLAND','','2019-06-12 23:31:26','006_MST_ISLAND','JW','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ISLAND/KLM-00001','INSERT','006_MST_ISLAND','','2019-06-17 15:06:22','006_MST_ISLAND','KLM','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ISLAND/SMT-00001','INSERT','006_MST_ISLAND','','2019-06-17 15:06:57','006_MST_ISLAND','SMT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ISLAND/SMT-00002','UPDATE','006_MST_ISLAND','','2019-06-17 15:10:57','006_MST_ISLAND','SMT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ISLAND/SMT-00003','DELETE','006_MST_ISLAND','','2019-06-17 15:11:27','006_MST_ISLAND','SMT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM/IT-BSR-0001-00001','INSERT','','','2019-06-17 10:42:38','006_MST_ITEM','IT-BSR-0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM/IT-BSR-0001-00002','DELETE','','','2019-06-17 11:44:29','006_MST_ITEM','IT-BSR-0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM/IT-BSR-0002-00001','INSERT','','','2019-06-17 10:42:44','006_MST_ITEM','IT-BSR-0002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM/IT-BTG-0001-00001','INSERT','','','2019-06-13 14:05:20','006_MST_ITEM','IT-BTG-0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM/IT-BTG-0002-00001','INSERT','','','2019-06-17 16:20:13','006_MST_ITEM','IT-BTG-0002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM/IT-BTG-0002-00002','DELETE','','','2019-06-17 16:20:31','006_MST_ITEM','IT-BTG-0002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_ARM_PIN/ARMPIN00001-00001','INSERT','','','2020-04-15 13:38:19','006_MST_ITEM_ARM_PIN','ARMPIN00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_BACKSEAT/BCKST00001-00001','INSERT','','','2020-03-17 23:49:35','006_MST_ITEM_BACKSEAT','BCKST00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_BALL/BALL00001-00001','INSERT','','','2020-03-17 15:01:33','006_MST_ITEM_BALL','BALL00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_BODY/SV-00001','INSERT','','','2019-12-11 13:47:42','006_MST_ITEM_BODY','SV','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_BODY_CONSTRUCTION/BDYCTR00001-00001','INSERT','','','2020-03-20 14:11:24','006_MST_ITEM_BODY_CONSTRUCTION','BDYCTR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_BOLT/ENAKKAN-00001','INSERT','','','2019-12-11 13:25:11','006_MST_ITEM_BOLT','ENAKKAN','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_BORE/BORE-00001','INSERT','','','2019-12-11 13:28:32','006_MST_ITEM_BORE','BORE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_BRAND/BS-001-00001','INSERT','CAR BRAND','','2019-06-13 13:51:15','006_MST_ITEM_BRAND','BS-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_BRAND/BS-001-00002','UPDATE','CAR BRAND','','2019-06-13 14:07:57','006_MST_ITEM_BRAND','BS-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_BRAND/BS-001-00003','UPDATE','CAR BRAND','','2019-06-13 14:08:05','006_MST_ITEM_BRAND','BS-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_CATEGORY/123-00001','INSERT','006_MST_ITEM_CATEGORY','','2020-01-10 14:08:57','006_MST_ITEM_CATEGORY','123','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_DISC/DISC00001-00001','INSERT','','','2020-03-17 23:49:52','006_MST_ITEM_DISC','DISC00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_DIVISION/11-00001','INSERT','CAR BRAND','','2019-06-12 10:57:08','006_MST_ITEM_DIVISION','11','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_DIVISION/12-00001','INSERT','CAR BRAND','','2019-06-12 10:56:38','006_MST_ITEM_DIVISION','12','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_DIVISION/PKU-00001','INSERT','CAR BRAND','','2019-06-17 16:38:00','006_MST_ITEM_DIVISION','PKU','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_DIVISION/PKU-00002','UPDATE','CAR BRAND','','2019-06-17 16:38:55','006_MST_ITEM_DIVISION','PKU','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_DIVISION/PKU-00003','UPDATE','CAR BRAND','','2019-06-17 16:39:01','006_MST_ITEM_DIVISION','PKU','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_DIVISION/PKU-00004','DELETE','CAR BRAND','','2019-06-17 16:39:18','006_MST_ITEM_DIVISION','PKU','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_END_CON/GANS-00001','INSERT','','','2019-12-11 13:28:48','006_MST_ITEM_END_CON','GANS','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS00001_BDYCTR00001_SV_ENAKKAN_OP-00001','INSERT','','','2020-08-27 13:56:43','006_MST_ITEM_FINISH_GOODS','CUS00001_BDYCTR00001_SV_ENAKKAN_OP','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS00001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001-00001','INSERT','','','2020-08-26 16:59:54','006_MST_ITEM_FINISH_GOODS','CUS00001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS00001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001-00002','DELETE','','','2020-08-26 17:00:02','006_MST_ITEM_FINISH_GOODS','CUS00001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS00001_ITMTYPDSG00001_STH_FEEL_RATE_GANS_FIND_AA_ALONE_SEAL_OP-00001','INSERT','','','2020-08-26 16:58:11','006_MST_ITEM_FINISH_GOODS','CUS00001_ITMTYPDSG00001_STH_FEEL_RATE_GANS_FIND_AA_ALONE_SEAL_OP','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE-00001','INSERT','','','2020-08-12 16:30:05','006_MST_ITEM_FINISH_GOODS','CUS00002_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001-00001','INSERT','','','2020-04-09 16:10:52','006_MST_ITEM_FINISH_GOODS','CUS001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001-00002','DELETE','','','2020-04-09 16:10:57','006_MST_ITEM_FINISH_GOODS','CUS001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001-00003','INSERT','','','2020-04-09 16:44:21','006_MST_ITEM_FINISH_GOODS','CUS001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001-00004','DELETE','','','2020-04-15 13:22:30','006_MST_ITEM_FINISH_GOODS','CUS001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BDYCTR00001-00001','INSERT','','','2020-04-09 11:10:13','006_MST_ITEM_FINISH_GOODS','CUS001_BDYCTR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BDYCTR00001-00002','DELETE','','','2020-04-15 13:22:34','006_MST_ITEM_FINISH_GOODS','CUS001_BDYCTR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BDYCTR00001_FEEL-00001','INSERT','','','2020-04-09 15:34:51','006_MST_ITEM_FINISH_GOODS','CUS001_BDYCTR00001_FEEL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BDYCTR00001_FEEL-00002','DELETE','','','2020-04-09 15:34:55','006_MST_ITEM_FINISH_GOODS','CUS001_BDYCTR00001_FEEL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BDYCTR00001_ITMTYPDSG00001_STH_0001-00001','INSERT','','','2020-03-20 14:11:42','006_MST_ITEM_FINISH_GOODS','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BDYCTR00001_ITMTYPDSG00001_STH_0001-00002','DELETE','','','2020-04-09 15:48:22','006_MST_ITEM_FINISH_GOODS','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BDYCTR00001_ITMTYPDSG00001_STH_0002-00001','INSERT','','','2020-03-20 14:13:04','006_MST_ITEM_FINISH_GOODS','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_0002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE_BORE_GANS_BALL00001_FIND_AA_ALONE_SEAL_ENAKKAN_OP-00001','INSERT','','','2020-04-15 13:24:30','006_MST_ITEM_FINISH_GOODS','CUS001_BDYCTR00001_ITMTYPDSG00001_STH_FEEL_RATE_BORE_GANS_BALL00001_FIND_AA_ALONE_SEAL_ENAKKAN_OP','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BORE-00001','INSERT','','','2020-04-09 11:36:51','006_MST_ITEM_FINISH_GOODS','CUS001_BORE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BORE-00002','DELETE','','','2020-04-15 13:22:47','006_MST_ITEM_FINISH_GOODS','CUS001_BORE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BORE_BALL00001_ENAKKAN_OP_PLT00001_0001-00001','INSERT','','','2020-03-18 14:16:16','006_MST_ITEM_FINISH_GOODS','CUS001_BORE_BALL00001_ENAKKAN_OP_PLT00001_0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_BORE_BALL00001_ENAKKAN_OP_PLT00001_0001-00002','DELETE','','','2020-04-09 11:10:19','006_MST_ITEM_FINISH_GOODS','CUS001_BORE_BALL00001_ENAKKAN_OP_PLT00001_0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_FEEL-00001','INSERT','','','2020-04-09 15:31:58','006_MST_ITEM_FINISH_GOODS','CUS001_FEEL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_FEEL-00002','DELETE','','','2020-04-09 15:32:02','006_MST_ITEM_FINISH_GOODS','CUS001_FEEL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_FIND-00001','INSERT','','','2020-04-09 11:17:41','006_MST_ITEM_FINISH_GOODS','CUS001_FIND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_FIND-00002','DELETE','','','2020-04-09 11:17:47','006_MST_ITEM_FINISH_GOODS','CUS001_FIND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_ITMTYPDSG00001-00001','INSERT','','','2020-04-09 11:09:31','006_MST_ITEM_FINISH_GOODS','CUS001_ITMTYPDSG00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_ITMTYPDSG00001-00002','DELETE','','','2020-04-09 11:09:37','006_MST_ITEM_FINISH_GOODS','CUS001_ITMTYPDSG00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_ITMTYPDSG00001-00003','INSERT','','','2020-04-09 11:14:29','006_MST_ITEM_FINISH_GOODS','CUS001_ITMTYPDSG00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_ITMTYPDSG00001-00004','DELETE','','','2020-04-09 11:14:34','006_MST_ITEM_FINISH_GOODS','CUS001_ITMTYPDSG00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_ITMTYPDSG00001-00005','INSERT','','','2020-04-09 11:32:28','006_MST_ITEM_FINISH_GOODS','CUS001_ITMTYPDSG00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_ITMTYPDSG00001-00006','DELETE','','','2020-04-09 11:32:32','006_MST_ITEM_FINISH_GOODS','CUS001_ITMTYPDSG00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001-00001','INSERT','','','2020-04-15 13:39:56','006_MST_ITEM_FINISH_GOODS','CUS001_ITMTYPDSG00001_FEEL_RATE_BORE_GANS_SV_FIND_ALONE_ENAKKAN_OP_BCKST00001_BCKST00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_ITMTYPDSG00001_STH_FEEL_RATE_GANS_FIND_AA_ALONE_SEAL_OP-00001','INSERT','','','2020-04-13 16:01:28','006_MST_ITEM_FINISH_GOODS','CUS001_ITMTYPDSG00001_STH_FEEL_RATE_GANS_FIND_AA_ALONE_SEAL_OP','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_ITMTYPDSG00001_STH_FEEL_RATE_GANS_FIND_AA_ALONE_SEAL_OP-00002','DELETE','','','2020-04-15 13:22:39','006_MST_ITEM_FINISH_GOODS','CUS001_ITMTYPDSG00001_STH_FEEL_RATE_GANS_FIND_AA_ALONE_SEAL_OP','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_STH_FIND-00001','INSERT','','','2020-04-09 15:48:05','006_MST_ITEM_FINISH_GOODS','CUS001_STH_FIND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001_STH_FIND-00002','DELETE','','','2020-04-15 13:22:43','006_MST_ITEM_FINISH_GOODS','CUS001_STH_FIND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001__BALL00001_SV________0001-00001','INSERT','','','2020-03-17 15:55:23','006_MST_ITEM_FINISH_GOODS','CUS001__BALL00001_SV________0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001__BALL00001_SV________0001-00002','DELETE','','','2020-03-18 14:18:03','006_MST_ITEM_FINISH_GOODS','CUS001__BALL00001_SV________0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001______BALL00001_SV________0001-00001','INSERT','','','2020-03-17 15:26:39','006_MST_ITEM_FINISH_GOODS','CUS001______BALL00001_SV________0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/CUS001______BALL00001_SV________0001-00002','DELETE','','','2020-03-17 15:55:02','006_MST_ITEM_FINISH_GOODS','CUS001______BALL00001_SV________0001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_FINISH_GOODS/WAKWAW_PIECES_FEEL_RATE_BORE_GANS_SV_ALONE_SEAL_FIND_AA_ENAKKAN_STH_OP0001.00-00001','INSERT','','','2019-12-11 16:00:18','006_MST_ITEM_FINISH_GOODS','WAKWAW_PIECES_FEEL_RATE_BORE_GANS_SV_ALONE_SEAL_FIND_AA_ENAKKAN_STH_OP0001.00','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_MATERIAL/-00001','INSERT','','','2020-09-21 17:14:29','006_MST_ITEM_MATERIAL','','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_MATERIAL/12-123-0000001-00001','INSERT','','','2020-02-03 16:46:47','006_MST_ITEM_MATERIAL','12-123-0000001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_MATERIAL/12-123-0000001-00002','DELETE','','','2020-07-08 11:51:16','006_MST_ITEM_MATERIAL','12-123-0000001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_MATERIAL/BANG-00001','INSERT','','','2020-01-10 16:38:37','006_MST_ITEM_MATERIAL','BANG','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_MATERIAL/BANG-00002','UPDATE','','','2020-01-10 17:07:57','006_MST_ITEM_MATERIAL','BANG','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_MATERIAL/ITMMTR00001-00001','INSERT','','','2020-07-08 11:52:05','006_MST_ITEM_MATERIAL','ITMMTR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_MATERIAL/ITMMTR00002-00001','INSERT','','','2020-10-07 10:23:35','006_MST_ITEM_MATERIAL','ITMMTR00002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_OPERATOR/OP-00001','INSERT','','','2019-12-11 13:31:31','006_MST_ITEM_OPERATOR','OP','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PLATES/PLT00001-00001','INSERT','','','2020-03-17 23:50:12','006_MST_ITEM_PLATES','PLT00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_CATEGORY/BSR-00001','INSERT','006_MST_ITEM_PRODUCT_CATEGORY','','2019-06-17 10:40:48','006_MST_ITEM_PRODUCT_CATEGORY','BSR','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_CATEGORY/BTG-00001','INSERT','006_MST_ITEM_PRODUCT_CATEGORY','','2019-06-13 13:43:19','006_MST_ITEM_PRODUCT_CATEGORY','BTG','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_CATEGORY/BTG-00002','UPDATE','006_MST_ITEM_PRODUCT_CATEGORY','','2019-06-13 14:09:40','006_MST_ITEM_PRODUCT_CATEGORY','BTG','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_CATEGORY/BTG-00003','UPDATE','006_MST_ITEM_PRODUCT_CATEGORY','','2019-06-13 14:09:58','006_MST_ITEM_PRODUCT_CATEGORY','BTG','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_CATEGORY/KCL-00001','INSERT','006_MST_ITEM_PRODUCT_CATEGORY','','2019-06-17 16:31:49','006_MST_ITEM_PRODUCT_CATEGORY','KCL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_CATEGORY/KCL-00002','DELETE','006_MST_ITEM_PRODUCT_CATEGORY','','2019-06-17 16:31:56','006_MST_ITEM_PRODUCT_CATEGORY','KCL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_HEAD/H001-00001','INSERT','006_MST_ITEM_PRODUCT_HEAD','','2019-06-12 23:28:14','006_MST_ITEM_PRODUCT_HEAD','H001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_HEAD/H002-00001','INSERT','006_MST_ITEM_PRODUCT_HEAD','','2019-06-12 23:28:49','006_MST_ITEM_PRODUCT_HEAD','H002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_HEAD/H002-00002','UPDATE','006_MST_ITEM_PRODUCT_HEAD','','2019-06-13 14:11:10','006_MST_ITEM_PRODUCT_HEAD','H002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_HEAD/TBK-00001','INSERT','006_MST_ITEM_PRODUCT_HEAD','','2019-06-17 16:32:48','006_MST_ITEM_PRODUCT_HEAD','TBK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_PRODUCT_HEAD/TBK-00002','DELETE','006_MST_ITEM_PRODUCT_HEAD','','2019-06-17 16:32:57','006_MST_ITEM_PRODUCT_HEAD','TBK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_RATING/RATE-00001','INSERT','','','2019-12-11 13:31:43','006_MST_ITEM_RATING','RATE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_SEAL/SEAL-00001','INSERT','','','2019-12-11 13:32:04','006_MST_ITEM_SEAL','SEAL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_SEAT/FIND-00001','INSERT','','','2019-12-11 13:32:18','006_MST_ITEM_SEAT','FIND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_SEAT_DESIGN/STH-00001','INSERT','','','2019-12-11 13:32:49','006_MST_ITEM_SEAT_DESIGN','STH','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_SEAT_INSERT/AA-00001','INSERT','','','2019-12-11 14:08:51','006_MST_ITEM_SEAT_INSERT','AA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_SHAFT/SHFT00001-00001','INSERT','','','2020-03-17 23:50:39','006_MST_ITEM_SHAFT','SHFT00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_SIZE/FEEL-00001','INSERT','','','2019-12-11 13:33:07','006_MST_ITEM_SIZE','FEEL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_SPRING/SPRNG00001-00001','INSERT','','','2020-03-17 23:49:42','006_MST_ITEM_SPRING','SPRNG00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_STEM/ALONE-00001','INSERT','','','2019-12-11 13:33:26','006_MST_ITEM_STEM','ALONE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_SUB_CATEGORY/TAK-00001','INSERT','','','2020-01-10 14:25:31','006_MST_ITEM_SUB_CATEGORY','TAK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_TYPE/PIECES-00001','INSERT','','','2019-12-11 13:33:43','006_MST_ITEM_TYPE','PIECES','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_ITEM_TYPE_DESIGN/ITMTYPDSG00001-00001','INSERT','','','2020-03-17 23:56:02','006_MST_ITEM_TYPE_DESIGN','ITMTYPDSG00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_JOB_POSITION/IT-00001','INSERT','006_MST_JOB_POSITION','','2020-01-24 14:10:51','006_MST_JOB_POSITION','IT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_PAYMENT_TERM/21D-00001','INSERT','','','2019-06-18 14:18:32','006_MST_PAYMENT_TERM','21D','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_PAYMENT_TERM/21D-00002','UPDATE','','','2019-06-18 14:18:52','006_MST_PAYMENT_TERM','21D','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_PAYMENT_TERM/21D-00003','DELETE','','','2019-06-18 14:19:10','006_MST_PAYMENT_TERM','21D','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_PRICE_TYPE/P01-00001','INSERT','CAR BRAND','','2019-06-12 23:58:10','006_MST_PRICE_TYPE','P01','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_PRICE_TYPE/P2-00001','INSERT','CAR BRAND','','2019-06-12 23:58:23','006_MST_PRICE_TYPE','P2','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_PRODUCT_TYPE/WUHAN-00001','INSERT','','','2020-01-28 11:10:06','006_MST_PRODUCT_TYPE','WUHAN','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_PROVINCE/JW_BRT-00001','INSERT','','','2019-06-12 23:33:52','006_MST_PROVINCE','JW_BRT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_RACK/RACK001-00001','INSERT','CAR BRAND','','2020-02-10 11:57:14','006_MST_RACK','RACK001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_RACK/RACK001-00002','DELETE','CAR BRAND','','2020-02-10 11:59:09','006_MST_RACK','RACK001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_RACK/S001-00001','INSERT','CAR BRAND','','2020-02-10 11:17:44','006_MST_RACK','S001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_RACK/S001-00002','INSERT','CAR BRAND','','2020-02-10 13:59:23','006_MST_RACK','S001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_RACK/S001-00003','DELETE','CAR BRAND','','2020-02-10 13:59:32','006_MST_RACK','S001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_RACK_ITEM/A001_DCI_001-00001','INSERT','006_MST_RACK_ITEM','','2020-07-09 15:04:39','006_MST_RACK_ITEM','A001_DCI_001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_RACK_TYPE/BOOK-00001','INSERT','','','2020-01-23 15:28:48','006_MST_RACK_TYPE','BOOK','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_REASON/MENARILAH-00001','INSERT','','','2019-12-16 14:21:24','006_MST_REASON','MENARILAH','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_REASON/MENARILAH-00002','DELETE','','','2020-01-24 10:59:11','006_MST_REASON','MENARILAH','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_REASON/MENARILAH-00003','INSERT','','','2020-01-24 10:59:32','006_MST_REASON','MENARILAH','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_RELIGION/HND-00001','INSERT','006_MST_RELIGION','','2019-06-12 23:42:57','006_MST_RELIGION','HND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_RELIGION/ISL-00001','INSERT','006_MST_RELIGION','','2019-06-12 23:42:40','006_MST_RELIGION','ISL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_SALES_PERSON/S001-00001','INSERT','','','2019-06-12 23:44:53','006_MST_SALES_PERSON','S001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_SALES_PERSON/S002-00001','INSERT','','','2019-06-12 23:48:55','006_MST_SALES_PERSON','S002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_SALES_PERSON/S003-00001','INSERT','','','2019-06-12 23:49:57','006_MST_SALES_PERSON','S003','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_SALES_PERSON/ULLA-00001','INSERT','006_MST_SALES_PERSON','','2020-02-11 11:32:52','006_MST_SALES_PERSON','ULLA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_SALES_PERSON/ULLA-00002','INSERT','006_MST_SALES_PERSON','','2020-02-11 11:39:05','006_MST_SALES_PERSON','ULLA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_SALES_PERSON/ULLA-00003','UPDATE','','','2020-08-26 16:40:16','006_MST_SALES_PERSON','ULLA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_SALES_PERSON/ULLA-00004','UPDATE','','','2020-08-26 16:52:42','006_MST_SALES_PERSON','ULLA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_TERM_OF_DELIVERY/BABE-00001','INSERT','','','2019-12-16 10:37:50','006_MST_TERM_OF_DELIVERY','BABE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_TERM_OF_DELIVERY/WAIT-00001','INSERT','','','2019-12-05 13:45:53','006_MST_TERM_OF_DELIVERY','WAIT','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_UNIT_OF_MEASURE/ST-00001','INSERT','','','2020-01-23 14:44:03','006_MST_UNIT_OF_MEASURE','ST','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_UNIT_OF_MEASURE/ST-00002','UPDATE','','','2020-01-23 14:44:07','006_MST_UNIT_OF_MEASURE','ST','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/BALL VALVE-00001','INSERT','','','2020-03-24 10:38:06','006_MST_VALVE_TYPE','BALL VALVE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/BALL VALVE-00002','DELETE','','','2020-03-24 10:42:16','006_MST_VALVE_TYPE','BALL VALVE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/BALL-00001','INSERT','','','2020-03-24 10:37:46','006_MST_VALVE_TYPE','BALL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/BALL-00002','DELETE','','','2020-03-24 10:37:56','006_MST_VALVE_TYPE','BALL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/SAY-00001','INSERT','','','2020-03-20 14:00:49','006_MST_VALVE_TYPE','SAY','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/SAY-00002','DELETE','','','2020-03-24 10:36:40','006_MST_VALVE_TYPE','SAY','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/SWING-00001','INSERT','','','2020-08-12 16:28:23','006_MST_VALVE_TYPE','SWING','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/SWING-00002','UPDATE','','','2020-08-12 17:13:45','006_MST_VALVE_TYPE','SWING','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/VALVE-00001','INSERT','','','2019-12-18 14:36:32','006_MST_VALVE_TYPE','VALVE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE/VALVE-00002','DELETE','','','2020-03-24 10:36:43','006_MST_VALVE_TYPE','VALVE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE_COMPONENT/BALL-00001','INSERT','','','2020-03-24 18:46:48','006_MST_VALVE_TYPE_COMPONENT','BALL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE_COMPONENT/BALL-00002','INSERT','','','2020-03-26 17:19:33','006_MST_VALVE_TYPE_COMPONENT','BALL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE_COMPONENT/SAY-00001','INSERT','','','2020-03-20 14:10:32','006_MST_VALVE_TYPE_COMPONENT','SAY','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE_COMPONENT/SWING-00001','INSERT','','','2020-08-12 16:29:03','006_MST_VALVE_TYPE_COMPONENT','SWING','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE_COMPONENT/VALVE-00001','INSERT','','','2020-03-16 15:29:17','006_MST_VALVE_TYPE_COMPONENT','VALVE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VALVE_TYPE_COMPONENT/VALVE-00002','INSERT','','','2020-03-18 13:35:44','006_MST_VALVE_TYPE_COMPONENT','VALVE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VDR00001-00001','INSERT','','','2020-07-16 15:05:30','006_MST_VENDOR','VDR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VDR00001-00002','UPDATE','','','2020-07-16 15:12:20','006_MST_VENDOR','VDR00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00001','INSERT','','','2020-01-24 14:38:01','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00002','UPDATE','','','2020-07-15 13:59:51','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00003','UPDATE','','','2020-07-15 16:19:54','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00004','UPDATE','','','2020-07-15 16:34:50','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00005','UPDATE','','','2020-07-15 16:51:51','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00006','UPDATE','','','2020-07-15 16:55:48','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00007','UPDATE','','','2020-07-15 16:56:42','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00008','UPDATE','','','2020-07-15 16:57:40','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00009','UPDATE','','','2020-07-15 17:18:18','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00010','UPDATE','','','2020-07-15 17:28:47','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00011','UPDATE','','','2020-07-15 17:38:30','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00012','UPDATE','','','2020-07-15 17:43:45','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00013','UPDATE','','','2020-07-16 14:26:16','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00014','UPDATE','','','2020-07-16 15:00:52','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00015','UPDATE','','','2020-07-16 15:03:14','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00016','UPDATE','','','2020-07-16 15:03:38','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR/VEND-00017','DELETE','','','2020-07-16 15:04:10','006_MST_VENDOR','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR_CATEGORY/VEND-00001','INSERT','','','2020-01-24 13:57:45','006_MST_VENDOR_CATEGORY','VEND','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR_CONTACT/VDRCTC00001-00001','INSERT','','','2020-07-16 15:05:58','006_MST_VENDOR_CONTACT','VDRCTC00001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_VENDOR_CONTACT/VEND-001-00001','INSERT','','','2020-01-24 14:39:03','006_MST_VENDOR_CONTACT','VEND-001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_WAREHOUSE/A001-00001','INSERT','','','2020-02-10 11:14:41','006_MST_WAREHOUSE','A001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_WAREHOUSE/HARUS-00001','INSERT','','','2020-02-03 16:45:56','006_MST_WAREHOUSE','HARUS','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_WAREHOUSE/WR001-00001','INSERT','','','2020-01-23 15:40:51','006_MST_WAREHOUSE','WR001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('006_MST_WAREHOUSE/WR002-00001','INSERT','','','2020-01-31 17:11:30','006_MST_WAREHOUSE','WR002','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('007_SCR_ROLE_AUTHORIZATION/ADM-00001','UPDATE','','','2019-06-14 14:14:06','007_SCR_ROLE_AUTHORIZATION','ADM','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('007_SCR_USER/ABC-00001','INSERT','User','','2020-03-20 13:34:48','007_SCR_USER','ABC','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('007_SCR_USER/ARIES-00001','INSERT','User','','2020-03-20 13:37:58','007_SCR_USER','ARIES','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('007_SCR_USER/SUKHA-00001','INSERT','User','','2020-03-20 13:33:51','007_SCR_USER','SUKHA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('007_SCR_USER/SUKHA-00002','UPDATE','User','','2020-03-20 13:34:00','007_SCR_USER','SUKHA','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('007_SCR_USER/UL-00001','INSERT','User','','2020-03-20 13:41:54','007_SCR_USER','UL','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('007_SCR_USER/WE-00001','INSERT','User','','2020-03-20 13:45:13','007_SCR_USER','WE','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('007_SYS_DATA_PROTECTION/1-2020-00001','INSERT','DATA PROTECTION','','2020-03-20 11:51:45','007_SYS_DATA_PROTECTION','1-2020','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER/B001/PPO/20070001-00001','INSERT','','','2020-07-27 11:50:56','009_PPIC_PRODUCTION_PLANNING_ORDER','B001/PPO/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER/B001/PPO/20090001-00001','INSERT','','','2020-09-16 16:37:53','009_PPIC_PRODUCTION_PLANNING_ORDER','B001/PPO/20090001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('009_PPIC_PRODUCTION_PLANNING_ORDER_APPROVAL/B001/PPO/20070001-00001','UPDATE','Production Planning Order - Approval','','2020-07-27 11:54:09','009_PPIC_PRODUCTION_PLANNING_ORDER_APPROVAL','B001/PPO/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('011_ENG_INTERNAL_MEMO/B001/Q/20070001-00001','INSERT','','','2020-07-07 14:31:28','011_ENG_INTERNAL_MEMO','B001/Q/20070001','ADMIN');
insert  into `sys_transaction_log`(`Code`,`ActionType`,`Description`,`IPNo`,`LogDate`,`ModuleCode`,`TransactionCode`,`UserCode`) values ('011_ENG_INTERNAL_MEMO/B001/Q/20070001-00002','UPDATE','','','2020-07-07 15:07:51','011_ENG_INTERNAL_MEMO','B001/Q/20070001','ADMIN');

/* Function  structure for function  `fn_getAdditionalFee` */

/*!50003 DROP FUNCTION IF EXISTS `fn_getAdditionalFee` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` FUNCTION `fn_getAdditionalFee`(
	prmHeaderCode VARCHAR(250),
	prmFlag varchar(8)
    ) RETURNS decimal(18,4)
BEGIN
	DECLARE result DECIMAL(18,4);
	
	IF prmFlag='POC' THEN
		SELECT 
			ifnull(SUM(sal_customer_purchase_order_additional_fee.`Total`),0) INTO result
		FROM
			`sal_customer_purchase_order_additional_fee`
		WHERE sal_customer_purchase_order_additional_fee.`HeaderCode`=prmHeaderCode;
		
	ELSEIF prmFlag='BOD' THEN
		SELECT 
			IFNULL(SUM(sal_customer_blanket_order_additional_fee.`Total`),0) INTO result
		FROM
			`sal_customer_blanket_order_additional_fee`
		WHERE sal_customer_blanket_order_additional_fee.`HeaderCode`=prmHeaderCode;
		
	ELSEIF prmFlag='SOD' THEN
		SELECT 
			IFNULL(SUM(sal_customer_sales_order_additional_fee.`Total`),0) INTO result
		FROM
			`sal_customer_sales_order_additional_fee`
		WHERE sal_customer_sales_order_additional_fee.`HeaderCode`=prmHeaderCode;	
		
	ELSEIF prmFlag='SODBOD' THEN
		SELECT 
			IFNULL(SUM(sal_customer_sales_order_by_blanket_order_additional_fee.`Total`),0) INTO result
		FROM
			`sal_customer_sales_order_by_blanket_order_additional_fee`
		WHERE sal_customer_sales_order_by_blanket_order_additional_fee.`HeaderCode`=prmHeaderCode;
	
	ELSEIF prmFlag='SODPOC' THEN
		SELECT 
			IFNULL(SUM(`sal_customer_sales_order_by_purchase_order_additional_fee`.`Total`),0) INTO result
		FROM
			`sal_customer_sales_order_by_purchase_order_additional_fee`
		WHERE sal_customer_sales_order_by_purchase_order_additional_fee.`HeaderCode`=prmHeaderCode;
		
	END IF;
	RETURN result;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_assembly_job_order_item_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_assembly_job_order_item_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_assembly_job_order_item_detail_list`(
	IN prmCode VARCHAR(250)
    )
BEGIN
    PREPARE STMT FROM 
	"SELECT
	  ivt_assembly_job_order_item_detail.Code,
	  ivt_assembly_job_order_item_detail.HeaderCode,
	  ivt_assembly_job_order_item_detail.ItemCode AS ItemMaterialCode,
	  mst_item_material.Name AS itemMaterialName,
	  mst_item_material.UnitOfMeasureCode AS unitOfMeasureCode,
	  ivt_assembly_job_order_item_detail.Quantity
	FROM ivt_assembly_job_order_item_detail
	INNER JOIN mst_item_material ON mst_item_material.Code = ivt_assembly_job_order_item_detail.ItemCode 
	WHERE ivt_assembly_job_order_item_detail.HeaderCode = ?"; 
	SET @prmCode = prmCode; 
	EXECUTE STMT USING @prmCode;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_assembly_job_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_assembly_job_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_assembly_job_order_list`(
	IN prmCode VARCHAR(250),
	IN prmFinishGoodsCode VARCHAR(50),
	IN prmFinishGoodsName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	PREPARE STMT FROM 
	"SELECT
		ivt_assembly_job_order.Code,
		ivt_assembly_job_order.BranchCode,
		mst_branch.Name AS BranchName,
		ivt_assembly_job_order.TransactionDate,
		ivt_assembly_job_order.FinishGoodsCode,
		mst_item_material.Name AS FinishGoodsName,
		mst_item_material.UnitOfMeasureCode AS unitOfMeasureCode,
		ivt_assembly_job_order.FinishGoodsQuantity,
		ivt_assembly_job_order.BillOfMaterialCode,
		mst_bill_of_material.Name AS billOfMaterialName,
		ivt_assembly_job_order.RefNo,
		ivt_assembly_job_order.Remark
	FROM ivt_assembly_job_order
	INNER JOIN mst_branch ON ivt_assembly_job_order.BranchCode=mst_branch.Code
	INNER JOIN mst_item_material ON ivt_assembly_job_order.FinishGoodsCode=mst_item_material.Code
	INNER JOIN mst_bill_of_material ON ivt_assembly_job_order.BillOfMaterialCode=mst_bill_of_material.Code
	WHERE ivt_assembly_job_order.Code LIKE ?
	AND ivt_assembly_job_order.FinishGoodsCode LIKE ?
	AND mst_item_material.Name LIKE ?
	AND ivt_assembly_job_order.RefNo LIKE ?
	AND ivt_assembly_job_order.Remark LIKE ?
	AND DATE(ivt_assembly_job_order.TransactionDate) BETWEEN DATE(?) AND (?)
	LIMIT ?, ?"; 
	SET @prmCode = prmCode; 
	SET @prmFinishGoodsCode = prmFinishGoodsCode; 
	SET @prmFinishGoodsName = prmFinishGoodsName; 
	SET @prmRefNo = prmRefNo; 
	SET @prmRemark = prmRemark; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	SET @prmLimitFrom = prmLimitFrom; 
	SET @prmLimitUpTo = prmLimitUpTo; 
	EXECUTE STMT USING @prmCode,@prmFinishGoodsCode,@prmFinishGoodsName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_assembly_job_order_list_count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_assembly_job_order_list_count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_assembly_job_order_list_count`(
	IN prmCode VARCHAR(250),
	IN prmFinishGoodsCode VARCHAR(50),
	IN prmFinishGoodsName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME
    )
BEGIN
	PREPARE STMT FROM 
	"SELECT
		COUNT(*) 
	FROM ivt_assembly_job_order
	INNER JOIN mst_branch ON ivt_assembly_job_order.BranchCode=mst_branch.Code
	INNER JOIN mst_item_material ON ivt_assembly_job_order.FinishGoodsCode=mst_item_material.Code
	INNER JOIN mst_bill_of_material ON ivt_assembly_job_order.BillOfMaterialCode=mst_bill_of_material.Code
	WHERE ivt_assembly_job_order.Code LIKE ?
	AND ivt_assembly_job_order.FinishGoodsCode LIKE ?
	AND mst_item_material.Name LIKE ?
	AND ivt_assembly_job_order.RefNo LIKE ?
	AND ivt_assembly_job_order.Remark LIKE ?
	AND DATE(ivt_assembly_job_order.TransactionDate) BETWEEN DATE(?) AND (?)"; 
	SET @prmCode = prmCode; 
	SET @prmFinishGoodsCode = prmFinishGoodsCode; 
	SET @prmFinishGoodsName = prmFinishGoodsName; 
	SET @prmRefNo = prmRefNo; 
	SET @prmRemark = prmRemark; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	EXECUTE STMT USING @prmCode,@prmFinishGoodsCode,@prmFinishGoodsName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_assembly_job_order_search_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_assembly_job_order_search_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_assembly_job_order_search_list`(
	IN prmCode VARCHAR(250),
	IN prmFinishGoodsCode VARCHAR(50),
	IN prmFinishGoodsName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	PREPARE STMT FROM 
	"SELECT
		ivt_assembly_job_order.Code,
		ivt_assembly_job_order.BranchCode,
		mst_branch.Name AS BranchName,
		ivt_assembly_job_order.TransactionDate,
		ivt_assembly_job_order.FinishGoodsCode,
		mst_item_material.Name AS FinishGoodsName,
		ivt_assembly_job_order.FinishGoodsQuantity,
		IFNULL(qwe.qty,0) AS FinishGoodsQuantityProcess,
		ivt_assembly_job_order.BillOfMaterialCode,
		mst_bill_of_material.Name AS billOfMaterialName,
		ivt_assembly_job_order.RefNo,
		ivt_assembly_job_order.Remark
	FROM ivt_assembly_job_order
	INNER JOIN mst_branch ON ivt_assembly_job_order.BranchCode=mst_branch.Code
	INNER JOIN mst_item_material ON ivt_assembly_job_order.FinishGoodsCode=mst_item_material.Code
	INNER JOIN mst_bill_of_material ON ivt_assembly_job_order.BillOfMaterialCode=mst_bill_of_material.Code
	LEFT JOIN(
		SELECT 
			ivt_assembly_work_order.AssemblyJobOrderCode,
			SUM(ivt_assembly_work_order.FinishGoodsQuantity) AS qty
		FROM ivt_assembly_work_order
		INNER JOIN ivt_assembly_job_order ON ivt_assembly_job_order.Code = ivt_assembly_work_order.AssemblyJobOrderCode
		INNER JOIN mst_item_material ON ivt_assembly_job_order.FinishGoodsCode=mst_item_material.Code
		WHERE ivt_assembly_job_order.Code LIKE ?
		AND ivt_assembly_job_order.FinishGoodsCode LIKE ?
		AND mst_item_material.Name LIKE ?
		AND ivt_assembly_job_order.RefNo LIKE ?
		AND ivt_assembly_job_order.Remark LIKE ?
		AND DATE(ivt_assembly_job_order.TransactionDate) BETWEEN DATE(?) AND (?)
		GROUP BY ivt_assembly_work_order.AssemblyJobOrderCode
	)AS qwe ON ivt_assembly_job_order.Code = qwe.AssemblyJobOrderCode
	WHERE ivt_assembly_job_order.Code LIKE ?
	AND ivt_assembly_job_order.FinishGoodsCode LIKE ?
	AND mst_item_material.Name LIKE ?
	AND ivt_assembly_job_order.RefNo LIKE ?
	AND ivt_assembly_job_order.Remark LIKE ?
	AND DATE(ivt_assembly_job_order.TransactionDate) BETWEEN DATE(?) AND (?)
	LIMIT ?, ?"; 
	SET @prmCode = prmCode; 
	SET @prmFinishGoodsCode = prmFinishGoodsCode; 
	SET @prmFinishGoodsName = prmFinishGoodsName; 
	SET @prmRefNo = prmRefNo; 
	SET @prmRemark = prmRemark; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	SET @prmLimitFrom = prmLimitFrom; 
	SET @prmLimitUpTo = prmLimitUpTo; 
	EXECUTE STMT USING @prmCode,@prmFinishGoodsCode,@prmFinishGoodsName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate,@prmCode,@prmFinishGoodsCode,@prmFinishGoodsName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_assembly_job_order_search_list_count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_assembly_job_order_search_list_count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_assembly_job_order_search_list_count`(
	IN prmCode VARCHAR(250),
	IN prmFinishGoodsCode VARCHAR(50),
	IN prmFinishGoodsName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME
    )
BEGIN
	PREPARE STMT FROM 
	"SELECT
		COUNT(*) 
	FROM ivt_assembly_job_order
	INNER JOIN mst_branch ON ivt_assembly_job_order.BranchCode=mst_branch.Code
	INNER JOIN mst_item_material ON ivt_assembly_job_order.FinishGoodsCode=mst_item_material.Code
	INNER JOIN mst_bill_of_material ON ivt_assembly_job_order.BillOfMaterialCode=mst_bill_of_material.Code
	LEFT JOIN(
		SELECT 
			ivt_assembly_work_order.AssemblyJobOrderCode,
			SUM(ivt_assembly_work_order.FinishGoodsQuantity) AS qty
		FROM ivt_assembly_work_order
		INNER JOIN ivt_assembly_job_order ON ivt_assembly_job_order.Code = ivt_assembly_work_order.AssemblyJobOrderCode
		INNER JOIN mst_item_material ON ivt_assembly_job_order.FinishGoodsCode=mst_item_material.Code
		WHERE ivt_assembly_job_order.Code LIKE ?
		AND ivt_assembly_job_order.FinishGoodsCode LIKE ?
		AND mst_item_material.Name LIKE ?
		AND ivt_assembly_job_order.RefNo LIKE ?
		AND ivt_assembly_job_order.Remark LIKE ?
		AND DATE(ivt_assembly_job_order.TransactionDate) BETWEEN DATE(?) AND (?)
		GROUP BY ivt_assembly_work_order.AssemblyJobOrderCode
	)AS qwe ON ivt_assembly_job_order.Code = qwe.AssemblyJobOrderCode
	WHERE ivt_assembly_job_order.Code LIKE ?
	AND ivt_assembly_job_order.FinishGoodsCode LIKE ?
	AND mst_item_material.Name LIKE ?
	AND ivt_assembly_job_order.RefNo LIKE ?
	AND ivt_assembly_job_order.Remark LIKE ?
	AND DATE(ivt_assembly_job_order.TransactionDate) BETWEEN DATE(?) AND (?)"; 
	SET @prmCode = prmCode; 
	SET @prmFinishGoodsCode = prmFinishGoodsCode; 
	SET @prmFinishGoodsName = prmFinishGoodsName; 
	SET @prmRefNo = prmRefNo; 
	SET @prmRemark = prmRemark; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	EXECUTE STMT USING @prmCode,@prmFinishGoodsCode,@prmFinishGoodsName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate,@prmCode,@prmFinishGoodsCode,@prmFinishGoodsName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_assembly_realization_item_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_assembly_realization_item_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_assembly_realization_item_detail_list`(
	IN prmCode VARCHAR(250)
    )
BEGIN
    PREPARE STMT FROM 
	"SELECT
	  ivt_assembly_realization_item_detail.Code,
	  ivt_assembly_realization_item_detail.HeaderCode,
	  ivt_assembly_realization_item_detail.ItemCode,
	  mst_item_material.Name AS itemName,
	  mst_item_material.UnitOfMeasureCode AS unitOfMeasureCode,
	  ivt_assembly_realization.Remark,
	  ivt_assembly_realization_cogs.RackCode,
	  mst_rack.Name AS rackName,
	  ivt_assembly_realization_item_detail.Quantity
	FROM ivt_assembly_realization_item_detail
	INNER JOIN mst_item_material ON mst_item_material.Code = ivt_assembly_realization_item_detail.ItemCode 
	INNER JOIN ivt_assembly_realization ON ivt_assembly_realization.Code = ivt_assembly_realization_item_detail.HeaderCode 
	INNER JOIN ivt_assembly_realization_cogs ON ivt_assembly_realization_cogs.HeaderCode = ivt_assembly_realization.Code 
	INNER JOIN mst_rack ON mst_rack.Code = ivt_assembly_realization_cogs.RackCode
	WHERE ivt_assembly_realization_item_detail.HeaderCode = ? 
	GROUP BY ivt_assembly_realization_item_detail.ItemCode"; 
	SET @prmCode = prmCode; 
	EXECUTE STMT USING @prmCode;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_assembly_realization_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_assembly_realization_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_assembly_realization_list`(
	IN prmCode VARCHAR(250),
	IN prmAssemblyJobOrderCode VARCHAR(250),
	IN prmFinishGoodsCode VARCHAR(50),
	IN prmFinishGoodsName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	PREPARE STMT FROM 
	"SELECT
		ivt_assembly_realization.Code,
		ivt_assembly_realization.BranchCode,
		mst_branch.Name AS BranchName,
		ivt_assembly_realization.TransactionDate,
		ivt_assembly_job_order.Code AS assemblyJobOrderCode,
		ivt_assembly_job_order.TransactionDate AS assemblyJobOrderDate,
		ivt_assembly_job_order.FinishGoodsCode,
		mst_item_material.Name AS FinishGoodsName,
		ivt_assembly_realization.RealizationQuantity,
		ivt_assembly_job_order.BillOfMaterialCode,
		mst_bill_of_material.Name AS billOfMaterialName,
		ivt_assembly_realization.RefNo,
		ivt_assembly_realization.Remark
	FROM ivt_assembly_realization
	INNER JOIN mst_branch ON ivt_assembly_realization.BranchCode=mst_branch.Code
	INNER JOIN ivt_assembly_job_order ON ivt_assembly_realization.AssemblyJobOrderCode=ivt_assembly_job_order.Code
	INNER JOIN mst_item_material ON ivt_assembly_job_order.FinishGoodsCode=mst_item_material.Code
	INNER JOIN mst_bill_of_material ON ivt_assembly_job_order.BillOfMaterialCode=mst_bill_of_material.Code
	WHERE ivt_assembly_realization.Code LIKE ?
	AND ivt_assembly_realization.AssemblyJobOrderCode LIKE ?
	AND ivt_assembly_job_order.FinishGoodsCode LIKE ?
	AND mst_item_material.Name LIKE ?
	AND ivt_assembly_realization.RefNo LIKE ?
	AND ivt_assembly_realization.Remark LIKE ?
	AND DATE(ivt_assembly_realization.TransactionDate) BETWEEN DATE(?) AND (?)
	LIMIT ?, ?"; 
	SET @prmCode = prmCode; 
	SET @prmAssemblyJobOrderCode = prmAssemblyJobOrderCode; 
	SET @prmFinishGoodsCode = prmFinishGoodsCode; 
	SET @prmFinishGoodsName = prmFinishGoodsName; 
	SET @prmRefNo = prmRefNo; 
	SET @prmRemark = prmRemark; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	SET @prmLimitFrom = prmLimitFrom; 
	SET @prmLimitUpTo = prmLimitUpTo; 
	EXECUTE STMT USING @prmCode,@prmAssemblyJobOrderCode,@prmFinishGoodsCode,@prmFinishGoodsName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_assembly_realization_list_count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_assembly_realization_list_count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_assembly_realization_list_count`(
	IN prmCode VARCHAR(250),
	IN prmAssemblyJobOrderCode VARCHAR(250),
	IN prmFinishGoodsCode VARCHAR(50),
	IN prmFinishGoodsName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME
    )
BEGIN
	PREPARE STMT FROM 
	"SELECT
		COUNT(*) 
	FROM ivt_assembly_realization
	INNER JOIN mst_branch ON ivt_assembly_realization.BranchCode=mst_branch.Code
	INNER JOIN ivt_assembly_job_order ON ivt_assembly_realization.AssemblyJobOrderCode=ivt_assembly_job_order.Code
	INNER JOIN mst_item_material ON ivt_assembly_job_order.FinishGoodsCode=mst_item_material.Code
	INNER JOIN mst_bill_of_material ON ivt_assembly_job_order.BillOfMaterialCode=mst_bill_of_material.Code
	WHERE ivt_assembly_realization.Code LIKE ?
	AND ivt_assembly_realization.AssemblyJobOrderCode LIKE ?
	AND ivt_assembly_job_order.FinishGoodsCode LIKE ?
	AND mst_item_material.Name LIKE ?
	AND ivt_assembly_realization.RefNo LIKE ?
	AND ivt_assembly_realization.Remark LIKE ?
	AND DATE(ivt_assembly_realization.TransactionDate) BETWEEN DATE(?) AND (?)"; 
	SET @prmCode = prmCode; 
	SET @prmAssemblyJobOrderCode = prmAssemblyJobOrderCode;
	SET @prmFinishGoodsCode = prmFinishGoodsCode; 
	SET @prmFinishGoodsName = prmFinishGoodsName; 
	SET @prmRefNo = prmRefNo; 
	SET @prmRemark = prmRemark; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	EXECUTE STMT USING @prmCode,@prmAssemblyJobOrderCode,@prmFinishGoodsCode,@prmFinishGoodsName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_bill_of_material_template_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_bill_of_material_template_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_bill_of_material_template_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(50),
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT
			COUNT(eng_material_template.Code)
		FROM eng_material_template
		INNER JOIN mst_item_finish_goods ON mst_item_finish_goods.Code = eng_material_template.ItemFinishGoodsCode
		INNER JOIN mst_valve_type ON mst_valve_type.Code = mst_item_finish_goods.ValveTypeCode
		WHERE eng_material_template.Code LIKE prmCode;
		
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT 
			eng_material_template.Code, 
			eng_material_template.TransactionDate, 
			eng_material_template.ItemFinishGoodsCode,
			mst_valve_type.Code AS valveTypeCode,
			mst_valve_type.Name AS valveTypeName,

			IFNULL(mst_item_finish_goods.ItemBodyConstructionCode,'') AS itemBodyConstructionCode, 
			IFNULL(mst_item_body_construction.Name,'') AS itemBodyConstructionName, 
			IFNULL(mst_item_finish_goods.ItemTypeDesignCode,'') AS itemTypeDesignCode, 
			IFNULL(mst_item_type_design.Name,'') AS itemTypeDesignName, 
			IFNULL(mst_item_finish_goods.ItemSeatDesignCode,'') AS itemSeatDesignCode, 
			IFNULL(mst_item_seat_design.Name,'') AS itemSeatDesignName, 
			IFNULL(mst_item_finish_goods.ItemSizeCode,'') AS itemSizeCode, 
			IFNULL(mst_item_size.Name,'') AS itemSizeName, 
			IFNULL(mst_item_finish_goods.ItemRatingCode,'') AS itemRatingCode, 
			IFNULL(mst_item_rating.Name,'') AS itemRatingName, 
			IFNULL(mst_item_finish_goods.ItemBoreCode,'') AS itemBoreCode, 
			IFNULL(mst_item_bore.Name,'') AS itemBoreName, 

			IFNULL(mst_item_finish_goods.ItemEndConCode,'') AS itemEndConCode, 
			IFNULL(mst_item_end_con.Name,'') AS itemEndConName, 
			IFNULL(mst_item_finish_goods.ItemBodyCode,'') AS itemBodyCode, 
			IFNULL(mst_item_body.Name,'') AS itemBodyName, 
			IFNULL(mst_item_finish_goods.ItemBallCode,'') AS itemBallCode, 
			IFNULL(mst_item_ball.Name,'') AS itemBallName, 
			IFNULL(mst_item_finish_goods.ItemSeatCode,'') AS itemSeatCode, 
			IFNULL(mst_item_seat.Name,'') AS itemSeatName, 
			IFNULL(mst_item_finish_goods.ItemSeatInsertCode,'') AS itemSeatInsertCode, 
			IFNULL(mst_item_seat_insert.Name,'') AS itemSeatInsertName, 
			IFNULL(mst_item_finish_goods.ItemStemCode,'') AS itemStemCode, 
			IFNULL(mst_item_stem.Name,'') AS itemStemName, 

			IFNULL(mst_item_finish_goods.ItemSealCode,'') AS itemSealCode, 
			IFNULL(mst_item_seal.Name,'') AS itemSealName, 
			IFNULL(mst_item_finish_goods.ItemBoltCode,'') AS itemBoltCode, 
			IFNULL(mst_item_bolt.Name,'') AS itemBoltName, 
			IFNULL(mst_item_finish_goods.ItemDiscCode,'') AS itemDiscCode, 
			IFNULL(mst_item_disc.Name,'') AS itemDiscName, 
			IFNULL(mst_item_finish_goods.ItemPlatesCode,'') AS itemPlatesCode, 
			IFNULL(mst_item_plates.Name,'') AS itemPlatesName, 
			IFNULL(mst_item_finish_goods.ItemShaftCode,'') AS itemShaftCode, 
			IFNULL(mst_item_shaft.Name,'') AS itemShaftName, 
			IFNULL(mst_item_finish_goods.ItemSpringCode,'') AS itemSpringCode, 
			IFNULL(mst_item_spring.Name,'') ItemSpringName, 

			IFNULL(mst_item_finish_goods.ItemArmPinCode,'') AS itemArmPinCode, 
			IFNULL(mst_item_arm.Name,'') AS itemArmPinName, 
			IFNULL(mst_item_finish_goods.ItemBackSeatCode,'') AS itemBackSeatCode, 
			IFNULL(mst_item_backseat.Name,'') AS itemBackSeatName, 
			IFNULL(mst_item_finish_goods.ItemArmCode,'') AS itemArmCode, 
			IFNULL(mst_item_arm.Name,'') AS itemArmName, 
			IFNULL(mst_item_finish_goods.ItemHingePinCode,'') AS itemHingePinCode, 
			IFNULL(mst_item_hinge_pin.Name,'') AS itemHingePinName, 
			IFNULL(mst_item_finish_goods.ItemStopPinCode,'') AS itemStopPinCode, 
			IFNULL(mst_item_stop_pin.Name,'') AS itemStopPinName, 
			IFNULL(mst_item_finish_goods.ItemOperatorCode,'') AS itemOperatorCode, 
			IFNULL(mst_item_operator.Name,'') AS itemOperatorName,
			
			eng_material_template.RefNo, 
			eng_material_template.Remark 
		FROM 
			eng_material_template
		INNER JOIN mst_item_finish_goods ON mst_item_finish_goods.Code = eng_material_template.ItemFinishGoodsCode
		INNER JOIN mst_valve_type ON mst_valve_type.Code = mst_item_finish_goods.ValveTypeCode
		LEFT JOIN mst_item_body_construction ON mst_item_body_construction.Code = mst_item_finish_goods.ItemBodyConstructionCode 

		LEFT JOIN mst_item_type_design ON mst_item_type_design.Code = mst_item_finish_goods.ItemTypeDesignCode 
		LEFT JOIN mst_item_seat_design ON mst_item_seat_design.Code = mst_item_finish_goods.ItemSeatDesignCode 
		LEFT JOIN mst_item_size ON mst_item_size.Code = mst_item_finish_goods.ItemSizeCode 
		LEFT JOIN mst_item_rating ON mst_item_rating.Code = mst_item_finish_goods.ItemRatingCode 
		LEFT JOIN mst_item_bore ON mst_item_bore.Code = mst_item_finish_goods.ItemBoreCode 

		LEFT JOIN mst_item_end_con ON mst_item_end_con.Code = mst_item_finish_goods.ItemEndConCode 
		LEFT JOIN mst_item_body ON mst_item_body.Code = mst_item_finish_goods.ItemBodyCode 
		LEFT JOIN mst_item_ball ON mst_item_ball.Code = mst_item_finish_goods.ItemBallCode 
		LEFT JOIN mst_item_seat ON mst_item_seat.Code = mst_item_finish_goods.ItemSeatCode 
		LEFT JOIN mst_item_seat_insert ON mst_item_seat_insert.Code = mst_item_finish_goods.ItemSeatInsertCode 
		LEFT JOIN mst_item_stem ON mst_item_stem.Code = mst_item_finish_goods.ItemStemCode 

		LEFT JOIN mst_item_seal ON mst_item_seal.Code = mst_item_finish_goods.ItemSealCode 
		LEFT JOIN mst_item_bolt ON mst_item_bolt.Code = mst_item_finish_goods.ItemBoltCode 
		LEFT JOIN mst_item_disc ON mst_item_disc.Code = mst_item_finish_goods.ItemDiscCode 
		LEFT JOIN mst_item_plates ON mst_item_plates.Code = mst_item_finish_goods.ItemPlatesCode 
		LEFT JOIN mst_item_shaft ON mst_item_shaft.Code = mst_item_finish_goods.ItemShaftCode 
		LEFT JOIN mst_item_spring ON mst_item_spring.Code = mst_item_finish_goods.ItemSpringCode 

		LEFT JOIN mst_item_arm_pin ON mst_item_arm_pin.Code = mst_item_finish_goods.ItemArmPinCode 
		LEFT JOIN mst_item_backseat ON mst_item_backseat.Code = mst_item_finish_goods.ItemBackSeatCode 
		LEFT JOIN mst_item_arm ON mst_item_arm.Code = mst_item_finish_goods.ItemArmCode 
		LEFT JOIN mst_item_hinge_pin ON mst_item_hinge_pin.Code = mst_item_finish_goods.ItemHingePinCode 
		LEFT JOIN mst_item_stop_pin ON mst_item_stop_pin.Code = mst_item_finish_goods.ItemStopPinCode 
		LEFT JOIN mst_item_operator ON mst_item_operator.Code = mst_item_finish_goods.ItemOperatorCode
		WHERE eng_material_template.Code LIKE ?
		LIMIT ?, ?";
		SET @prmCode = prmCode;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitUpTo = prmLimitUpTo; 
		EXECUTE STMT USING @prmCode,@prmLimitFrom, @prmLimitUpTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_blanket_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_blanket_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_blanket_order_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmApprovalStatus VARCHAR(50),
	IN prmClosingStatus VARCHAR(10),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT COUNT(sal_customer_blanket_order.Code)
		FROM sal_customer_blanket_order
		INNER JOIN mst_currency ON sal_customer_blanket_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_blanket_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_blanket_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_blanket_order.SalesPersonCode=mst_sales_person.Code
		INNER JOIN mst_project ON sal_customer_blanket_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_blanket_order.BranchCode
		LEFT JOIN mst_reason ON sal_customer_blanket_order.ApprovalReasonCode=mst_reason.Code
		WHERE sal_customer_blanket_order.ValidStatus=1
			AND sal_customer_blanket_order.Code like prmCode
			and sal_customer_blanket_order.CustomerCode LIKE prmCustomerCode
			AND mst_customer.Name LIKE prmCustomerName
			AND sal_customer_blanket_order.RefNo LIKE prmRefNo
			AND sal_customer_blanket_order.Remark LIKE prmRemark
			AND sal_customer_blanket_order.ApprovalStatus LIKE prmApprovalStatus  
			And sal_customer_blanket_order.ClosingStatus LIKE prmClosingStatus
			AND DATE(sal_customer_blanket_order.TransactionDate) BETWEEN prmFirstDate AND prmLastDate;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_blanket_order.Code,
			sal_customer_blanket_order.CUSTBONo,
			sal_customer_blanket_order.Revision,
			sal_customer_blanket_order.RevisionRemark,
			sal_customer_blanket_order.RefCUSTBOCode,
			sal_customer_blanket_order.TransactionDate,
			sal_customer_blanket_order.CustomerPurchaseOrderCode,
			sal_customer_blanket_order.BranchCode AS branchCode,
			mst_branch.Name AS branchName,
			sal_customer_blanket_order.RequestDeliveryDate,
			sal_customer_blanket_order.ExpiredDate,
			sal_customer_blanket_order.CustomerCode,
			mst_customer.Name AS CustomerName,
			sal_customer_blanket_order.EndUserCode,
			EndUser.Name AS EndUserName,
			sal_customer_blanket_order.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			sal_customer_blanket_order.SalesPersonCode,
			mst_sales_person.Name AS SalesPersonName,
			sal_customer_blanket_order.ProjectCode,
			mst_project.Name AS ProjectName,
			sal_customer_blanket_order.RefNo,
			sal_customer_blanket_order.Remark,
			sal_customer_blanket_order.TotalTransactionAmount,
			sal_customer_blanket_order.DiscountPercent,
			sal_customer_blanket_order.DiscountAmount,
			(SELECT fn_getAdditionalFee(sal_customer_blanket_order.Code,'BOD'))AS TotalAdditionalFeeAmount,
			sal_customer_blanket_order.TaxBaseAmount,
			sal_customer_blanket_order.Vatpercent,
			sal_customer_blanket_order.Vatamount,
			sal_customer_blanket_order.GrandTotalAmount,
			sal_customer_blanket_order.ApprovalStatus,
			sal_customer_blanket_order.ApprovalBy,
			sal_customer_blanket_order.ApprovalDate,
			sal_customer_blanket_order.ApprovalRemark,
			sal_customer_blanket_order.ApprovalReasonCode,
			mst_reason.Name AS ApprovalReasonName,
			sal_customer_blanket_order.ClosingStatus,
			sal_customer_blanket_order.ClosingBy,
			sal_customer_blanket_order.ClosingDate
		FROM sal_customer_blanket_order
		INNER JOIN mst_currency ON sal_customer_blanket_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_blanket_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_blanket_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_blanket_order.SalesPersonCode=mst_sales_person.Code
		INNER JOIN mst_project ON sal_customer_blanket_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_blanket_order.BranchCode
		LEFT JOIN mst_reason ON sal_customer_blanket_order.ApprovalReasonCode=mst_reason.Code
		WHERE sal_customer_blanket_order.ValidStatus=1
			AND sal_customer_blanket_order.Code LIKE ?
			AND sal_customer_blanket_order.CustomerCode LIKE ?
			AND mst_customer.Name LIKE ?
			AND sal_customer_blanket_order.RefNo LIKE ?
			AND sal_customer_blanket_order.Remark LIKE ?
			AND sal_customer_blanket_order.ApprovalStatus LIKE ?
			AND sal_customer_blanket_order.ClosingStatus LIKE ?
			AND DATE(sal_customer_blanket_order.TransactionDate) BETWEEN ? AND ?
		ORDER BY sal_customer_blanket_order.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		SET @prmApprovalStatus = prmApprovalStatus;
		set @prmClosingStatus=prmClosingStatus;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmRefNo,@prmRemark,@prmApprovalStatus,@prmClosingStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_customer_blanket_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_customer_blanket_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_customer_blanket_order_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmClosingStatus VARCHAR(10),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT COUNT(sal_customer_blanket_order.Code)
		FROM sal_customer_blanket_order
		INNER JOIN mst_currency ON sal_customer_blanket_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_blanket_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_blanket_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_blanket_order.SalesPersonCode=mst_sales_person.Code
		LEFT JOIN mst_project ON sal_customer_blanket_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_blanket_order.BranchCode
		WHERE sal_customer_blanket_order.ValidStatus=1
			AND sal_customer_blanket_order.Code like prmCode
			and sal_customer_blanket_order.CustomerCode LIKE prmCustomerCode
			AND mst_customer.Name LIKE prmCustomerName
			AND sal_customer_blanket_order.RefNo LIKE prmRefNo
			AND sal_customer_blanket_order.Remark LIKE prmRemark
			And sal_customer_blanket_order.ClosingStatus LIKE prmClosingStatus
			AND DATE(sal_customer_blanket_order.TransactionDate) BETWEEN prmFirstDate AND prmLastDate;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_blanket_order.Code,
			sal_customer_blanket_order.CUSTBONo,
			sal_customer_blanket_order.ValidStatus,
			sal_customer_blanket_order.Revision,
			sal_customer_blanket_order.RevisionRemark,
			sal_customer_blanket_order.RefCUSTBOCode,
			sal_customer_blanket_order.TransactionDate,
			sal_customer_blanket_order.CustomerPurchaseOrderCode,
			sal_customer_blanket_order.BranchCode AS branchCode,
			mst_branch.Name AS branchName,
			sal_customer_blanket_order.RequestDeliveryDate,
			sal_customer_blanket_order.ExpiredDate,
			sal_customer_blanket_order.CustomerCode,
			mst_customer.Name AS CustomerName,
			sal_customer_blanket_order.EndUserCode,
			EndUser.Name AS EndUserName,
			sal_customer_blanket_order.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			sal_customer_blanket_order.SalesPersonCode,
			mst_sales_person.Name AS SalesPersonName,
			sal_customer_blanket_order.ProjectCode,
			mst_project.Name AS ProjectName,
			sal_customer_blanket_order.RefNo,
			sal_customer_blanket_order.Remark,
			sal_customer_blanket_order.TotalTransactionAmount,
			sal_customer_blanket_order.DiscountPercent,
			sal_customer_blanket_order.DiscountAmount,
			(SELECT fn_getAdditionalFee(sal_customer_blanket_order.Code,'BOD'))AS TotalAdditionalFeeAmount,
			sal_customer_blanket_order.TaxBaseAmount,
			sal_customer_blanket_order.Vatpercent,
			sal_customer_blanket_order.Vatamount,
			sal_customer_blanket_order.GrandTotalAmount,
			sal_customer_blanket_order.ClosingStatus,
			sal_customer_blanket_order.ClosingBy,
			sal_customer_blanket_order.ClosingDate
		FROM sal_customer_blanket_order
		INNER JOIN mst_currency ON sal_customer_blanket_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_blanket_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_blanket_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_blanket_order.SalesPersonCode=mst_sales_person.Code
		LEFT JOIN mst_project ON sal_customer_blanket_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_blanket_order.BranchCode
		WHERE sal_customer_blanket_order.ValidStatus=1
			AND sal_customer_blanket_order.Code LIKE ?
			AND sal_customer_blanket_order.CustomerCode LIKE ?
			AND mst_customer.Name LIKE ?
			AND sal_customer_blanket_order.RefNo LIKE ?
			AND sal_customer_blanket_order.Remark LIKE ?
			AND sal_customer_blanket_order.ClosingStatus LIKE ?
			AND DATE(sal_customer_blanket_order.TransactionDate) BETWEEN ? AND ?
		ORDER BY sal_customer_blanket_order.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		set @prmClosingStatus=prmClosingStatus;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmRefNo,@prmRemark,@prmClosingStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_customer_blanket_order_search_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_customer_blanket_order_search_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_customer_blanket_order_search_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerPurchaseOrderCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(50),
	IN prmCustomerName VARCHAR(250),
	IN prmEndUserCode VARCHAR(50),
	IN prmEndUserName VARCHAR(250),
	IN prmSalesPersonCode VARCHAR(50),
	IN prmSalesPersonName VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
)
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT
			COUNT(sal_customer_blanket_order.`Code`)
		FROM `sal_customer_blanket_order`
		inner join `mst_currency` on  sal_customer_blanket_order.`CurrencyCode`=mst_currency.`Code`
		INNER JOIN `mst_customer` ON sal_customer_blanket_order.`CustomerCode`=mst_customer.`Code`
		INNER JOIN `mst_customer` end_user ON sal_customer_blanket_order.`EndUserCode`=end_user.`Code`
		INNER JOIN `mst_sales_person` ON sal_customer_blanket_order.`SalesPersonCode`=mst_sales_person.`Code`
		WHERE sal_customer_blanket_order.`Code` LIKE prmCode
		AND sal_customer_blanket_order.`CustomerPurchaseOrderCode` LIKE prmCustomerPurchaseOrderCode
		AND sal_customer_blanket_order.`CustomerCode` LIKE prmCustomerCode
		AND mst_customer.`Name` LIKE prmCustomerName
		AND sal_customer_blanket_order.`EndUserCode` LIKE prmEndUserCode
		AND end_user.`Name` LIKE prmEndUserName
		AND sal_customer_blanket_order.`SalesPersonCode` LIKE prmSalesPersonCode
		AND mst_sales_person.`Name` LIKE prmSalesPersonName
		AND DATE(sal_customer_blanket_order.`TransactionDate`) BETWEEN date(prmFirstDate) AND date(prmLastDate)
		AND sal_customer_blanket_order.ClosingStatus = 'OPEN'
		AND sal_customer_blanket_order.ValidStatus = TRUE
		ORDER BY DATE(sal_customer_blanket_order.`TransactionDate`) ASC;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_blanket_order.`Code`,
			sal_customer_blanket_order.`ValidStatus`,
			sal_customer_blanket_order.`TransactionDate`,
			sal_customer_blanket_order.`CustomerPurchaseOrderCode`,
			sal_customer_blanket_order.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			sal_customer_blanket_order.`CustomerCode`,
			mst_customer.`Name` AS CustomerName,
			sal_customer_blanket_order.`EndUserCode`,
			end_user.`Name` AS EndUserName,
			sal_customer_blanket_order.`CurrencyCode`,
			sal_customer_blanket_order.`SalesPersonCode`,
			mst_sales_person.`Name` AS SalesPersonName
		FROM `sal_customer_blanket_order`
		INNER JOIN `mst_currency` ON  sal_customer_blanket_order.`CurrencyCode`=mst_currency.`Code`
		INNER JOIN `mst_customer` ON sal_customer_blanket_order.`CustomerCode`=mst_customer.`Code`
		INNER JOIN `mst_customer` end_user ON sal_customer_blanket_order.`EndUserCode`=end_user.`Code`
		INNER JOIN `mst_sales_person` ON sal_customer_blanket_order.`SalesPersonCode`=mst_sales_person.`Code`
		WHERE sal_customer_blanket_order.`Code` LIKE ?
		AND sal_customer_blanket_order.`CustomerPurchaseOrderCode` LIKE ?
		AND sal_customer_blanket_order.`CustomerCode` LIKE ?
		AND mst_customer.`Name` LIKE ?
		AND sal_customer_blanket_order.`EndUserCode` LIKE ?
		AND end_user.`Name` LIKE ?
		AND sal_customer_blanket_order.`SalesPersonCode` LIKE ?
		AND mst_sales_person.`Name` LIKE ?
		AND DATE(sal_customer_blanket_order.`TransactionDate`) BETWEEN DATE(?) AND DATE(?)
		AND sal_customer_blanket_order.ClosingStatus = 'OPEN'
		AND sal_customer_blanket_order.ValidStatus = TRUE
		ORDER BY DATE(sal_customer_blanket_order.`TransactionDate`) ASC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SEt @prmCustomerPurchaseOrderCode = prmCustomerPurchaseOrderCode;
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		set @prmEndUserCode=prmEndUserCode;
		SET @prmEndUserName = prmEndUserName;
		SET @prmSalesPersonCode=prmSalesPersonCode;
		SET @prmSalesPersonName = prmSalesPersonName;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerPurchaseOrderCode,@prmCustomerCode,@prmCustomerName,@prmEndUserCode,@prmEndUserName,@prmSalesPersonCode,@prmSalesPersonName,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_customer_order_document_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_customer_order_document_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_customer_order_document_detail_list`(
	IN prmDocumentType VARCHAR(5),
	IN prmHeaderCode VARCHAR(50)
    )
BEGIN
	IF prmDocumentType='SO' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_sales_order_item_detail.`CustomerPurchaseOrderSortNo` AS SortNo,
			sal_customer_sales_order_item_detail.`ItemFinishGoodsCode`,
			mst_item_finish_goods.`ItemSizeCode`,
			mst_item_finish_goods.`ItemRatingCode`,
			mst_item_finish_goods.`ItemTypeDesignCode`,
			mst_item_finish_goods.`ItemEndConCode`,
			mst_item_finish_goods.`ItemBodyCode`,
			mst_item_finish_goods.`ItemBallCode`,
			mst_item_finish_goods.`ItemSeatCode`,
			mst_item_finish_goods.`ItemStemCode`,
			mst_item_finish_goods.`ItemSeatInsertCode`,
			mst_item_finish_goods.`ItemSealCode`,
			mst_item_finish_goods.`ItemBoltCode`,
			mst_item_finish_goods.`ItemSeatDesignCode`,
			mst_item_finish_goods.`ItemOperatorCode`,
			sal_customer_sales_order_item_detail.`Quantity`
		FROM `sal_customer_sales_order_item_detail`
		INNER JOIN `mst_item_finish_goods` ON sal_customer_sales_order_item_detail.`ItemFinishGoodsCode`=mst_item_finish_goods.`Code`
		WHERE sal_customer_sales_order_item_detail.`HeaderCode`=?"; 
		SET @prmHeaderCode = prmHeaderCode; 
		EXECUTE STMT USING @prmHeaderCode;
		DEALLOCATE PREPARE STMT;
	ELSEIF prmDocumentType='BO' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_blanket_order_item_detail.`CustomerPurchaseOrderSortNo` AS SortNo,
			sal_customer_blanket_order_item_detail.`ItemFinishGoodsCode`,
			mst_item_finish_goods.`ItemSizeCode`,
			mst_item_finish_goods.`ItemRatingCode`,
			mst_item_finish_goods.`ItemTypeDesignCode`,
			mst_item_finish_goods.`ItemEndConCode`,
			mst_item_finish_goods.`ItemBodyCode`,
			mst_item_finish_goods.`ItemBallCode`,
			mst_item_finish_goods.`ItemSeatCode`,
			mst_item_finish_goods.`ItemStemCode`,
			mst_item_finish_goods.`ItemSeatInsertCode`,
			mst_item_finish_goods.`ItemSealCode`,
			mst_item_finish_goods.`ItemBoltCode`,
			mst_item_finish_goods.`ItemSeatDesignCode`,
			mst_item_finish_goods.`ItemOperatorCode`,
			sal_customer_blanket_order_item_detail.`Quantity`
		FROM `sal_customer_blanket_order_item_detail`
		INNER JOIN `mst_item_finish_goods` ON sal_customer_blanket_order_item_detail.`ItemFinishGoodsCode`=mst_item_finish_goods.`Code`
		WHERE sal_customer_blanket_order_item_detail.`HeaderCode`=?"; 
		SET @prmHeaderCode = prmHeaderCode; 
		EXECUTE STMT USING @prmHeaderCode;
		DEALLOCATE PREPARE STMT;
	ELSEIF prmDocumentType='IM' THEN
		PREPARE STMT FROM 
		"SELECT
			1 AS SortNo,
			eng_internal_memo_detail.`ItemCode` AS `ItemFinishGoodsCode`,
			mst_item_finish_goods.`ItemSizeCode`,
			mst_item_finish_goods.`ItemRatingCode`,
			mst_item_finish_goods.`ItemTypeDesignCode`,
			mst_item_finish_goods.`ItemEndConCode`,
			mst_item_finish_goods.`ItemBodyCode`,
			mst_item_finish_goods.`ItemBallCode`,
			mst_item_finish_goods.`ItemSeatCode`,
			mst_item_finish_goods.`ItemStemCode`,
			mst_item_finish_goods.`ItemSeatInsertCode`,
			mst_item_finish_goods.`ItemSealCode`,
			mst_item_finish_goods.`ItemBoltCode`,
			mst_item_finish_goods.`ItemSeatDesignCode`,
			mst_item_finish_goods.`ItemOperatorCode`,
			eng_internal_memo_detail.`Quantity`
		FROM `eng_internal_memo_detail`
		INNER JOIN `mst_item_finish_goods` ON eng_internal_memo_detail.`ItemCode`=mst_item_finish_goods.`Code`
		WHERE eng_internal_memo_detail.`HeaderCode`=?"; 
		SET @prmHeaderCode = prmHeaderCode; 
		EXECUTE STMT USING @prmHeaderCode;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_customer_order_document_search_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_customer_order_document_search_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_customer_order_document_search_list`(
	IN prmFlag CHAR(5),
	in prmDocumentType varCHAR(5),
	IN prmCode VARCHAR(50),
	IN prmCustomerCode VARCHAR(50),
	IN prmCustomerName VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		if prmDocumentType='SO' then
			SELECT
				count(sal_customer_sales_order.`Code`)
			FROM `sal_customer_sales_order`
			INNER JOIN mst_branch ON sal_customer_sales_order.`BranchCode`=mst_branch.`Code`
			INNER JOIN `mst_customer` ON sal_customer_sales_order.`CustomerCode`=mst_customer.`Code`
			WHERE sal_customer_sales_order.`Code` LIKE prmCode
			and sal_customer_sales_order.`ValidStatus`=1
			AND sal_customer_sales_order.`CustomerCode` LIKE prmCustomerCode
			AND mst_customer.`Name` LIKE prmCustomerName
			AND DATE(sal_customer_sales_order.`TransactionDate`) BETWEEN prmFirstDate AND prmLastDate;
		elseif prmDocumentType='BO' THEN
			SELECT
				COUNT(sal_customer_blanket_order.`Code`)
			FROM `sal_customer_blanket_order`
			INNER JOIN mst_branch ON sal_customer_blanket_order.`BranchCode`=mst_branch.`Code`
			INNER JOIN `mst_customer` ON sal_customer_blanket_order.`CustomerCode`=mst_customer.`Code`
			WHERE sal_customer_blanket_order.`Code` LIKE prmCode
			and sal_customer_blanket_order.`ValidStatus`=1
			AND sal_customer_blanket_order.`CustomerCode` LIKE prmCustomerCode
			AND mst_customer.`Name` LIKE prmCustomerName
			AND DATE(sal_customer_blanket_order.`TransactionDate`) BETWEEN prmFirstDate AND prmLastDate;
		ELSEIF prmDocumentType='IM' then
			SELECT
				COUNT(eng_internal_memo.`Code`)
			FROM `eng_internal_memo`
			INNER JOIN mst_branch ON eng_internal_memo.`BranchCode`=mst_branch.`Code`
			INNER JOIN mst_customer ON eng_internal_memo.`CustomerCode`=mst_customer.`Code`
			WHERE eng_internal_memo.`Code` LIKE prmCode
			and eng_internal_memo.`CustomerCode` LIKE prmCustomerCode
			AND mst_customer.`Name` LIKE prmCustomerName
			AND DATE(eng_internal_memo.`TransactionDate`) BETWEEN prmFirstDate AND prmLastDate;
		end if;
	ELSEIF prmFlag='LISTS' THEN
		IF prmDocumentType='SO' THEN
			PREPARE STMT FROM 
			"SELECT
				sal_customer_sales_order.`Code` AS documentCode,
				sal_customer_sales_order.`BranchCode`,
				sal_customer_sales_order.`TransactionDate`,
				sal_customer_sales_order.`CustomerCode`,
				mst_customer.`Name` AS CustomerName
			FROM `sal_customer_sales_order`
			INNER JOIN mst_branch ON sal_customer_sales_order.`BranchCode`=mst_branch.`Code`
			INNER JOIN `mst_customer` ON sal_customer_sales_order.`CustomerCode`=mst_customer.`Code`
			WHERE sal_customer_sales_order.`Code` LIKE ?
			AND sal_customer_sales_order.`ValidStatus`=1
			AND sal_customer_sales_order.`CustomerCode` LIKE ?
			AND mst_customer.`Name` LIKE ?
			AND DATE(sal_customer_sales_order.`TransactionDate`) BETWEEN DATE(?) AND DATE(?)
			LIMIT ?, ?"; 
			SET @prmCode = prmCode; 
			SET @prmCustomerCode = prmCustomerCode; 
			SET @prmCustomerName = prmCustomerName; 
			SET @prmFirstDate = prmFirstDate; 
			SET @prmLastDate = prmLastDate;
			SET @prmLimitFrom = prmLimitFrom; 
			SET @prmLimitUpTo = prmLimitUpTo; 
			EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
			DEALLOCATE PREPARE STMT;
		ELSEIF prmDocumentType='BO' THEN
			PREPARE STMT FROM 
			"SELECT
				sal_customer_blanket_order.`Code` AS documentCode,
				sal_customer_blanket_order.`BranchCode`,
				sal_customer_blanket_order.`TransactionDate`,
				sal_customer_blanket_order.`CustomerCode`,
				mst_customer.`Name` AS CustomerName
			FROM `sal_customer_blanket_order`
			INNER JOIN mst_branch ON sal_customer_blanket_order.`BranchCode`=mst_branch.`Code`
			INNER JOIN `mst_customer` ON sal_customer_blanket_order.`CustomerCode`=mst_customer.`Code`
			WHERE sal_customer_blanket_order.`Code` LIKE ?
			AND sal_customer_blanket_order.`ValidStatus`=1
			AND sal_customer_blanket_order.`CustomerCode` LIKE ?
			AND mst_customer.`Name` LIKE ?
			AND DATE(sal_customer_blanket_order.`TransactionDate`) BETWEEN DATE(?) AND DATE(?)
			LIMIT ?, ?"; 
			SET @prmCode = prmCode; 
			SET @prmCustomerCode = prmCustomerCode; 
			SET @prmCustomerName = prmCustomerName; 
			SET @prmFirstDate = prmFirstDate; 
			SET @prmLastDate = prmLastDate;
			SET @prmLimitFrom = prmLimitFrom; 
			SET @prmLimitUpTo = prmLimitUpTo; 
			EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
			DEALLOCATE PREPARE STMT;
		ELSEIF prmDocumentType='IM' then
			PREPARE STMT FROM 
			"SELECT
				eng_internal_memo.`Code` AS documentCode,
				eng_internal_memo.`BranchCode`,
				eng_internal_memo.`TransactionDate`,
				eng_internal_memo.`CustomerCode`,
				mst_customer.`Name` AS CustomerName
			FROM `eng_internal_memo`
			INNER JOIN mst_branch ON eng_internal_memo.`BranchCode`=mst_branch.`Code`
			INNER JOIN `mst_customer` ON eng_internal_memo.`CustomerCode`=mst_customer.`Code`
			WHERE eng_internal_memo.`Code` LIKE ?
			AND eng_internal_memo.`CustomerCode` LIKE ?
			AND mst_customer.`Name` LIKE ?
			AND DATE(eng_internal_memo.`TransactionDate`) BETWEEN DATE(?) AND DATE(?)
			LIMIT ?, ?"; 
			SET @prmCode = prmCode; 
			SET @prmCustomerCode = prmCustomerCode; 
			SET @prmCustomerName = prmCustomerName; 
			SET @prmFirstDate = prmFirstDate; 
			SET @prmLastDate = prmLastDate;
			SET @prmLimitFrom = prmLimitFrom; 
			SET @prmLimitUpTo = prmLimitUpTo; 
			EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
			DEALLOCATE PREPARE STMT;
		END IF;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_customer_purchase_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_customer_purchase_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_customer_purchase_order_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmSalesPersonCode VARCHAR(250),
	IN prmSalesPersonName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmClosingStatus VARCHAR(10),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	
	IF prmFlag='COUNT' THEN
		SELECT COUNT(sal_customer_purchase_order.Code)
		FROM sal_customer_purchase_order
		INNER JOIN mst_customer ON sal_customer_purchase_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_sales_person ON sal_customer_purchase_order.SalesPersonCode=mst_sales_person.Code
		WHERE 
			sal_customer_purchase_order.Code like prmCode
			and sal_customer_purchase_order.CustomerCode LIKE prmCustomerCode
			AND mst_customer.Name LIKE prmCustomerName
			AND sal_customer_purchase_order.SalesPersonCode LIKE prmSalesPersonCode
			AND mst_sales_person.Name LIKE prmSalesPersonName
			AND sal_customer_purchase_order.RefNo LIKE prmRefNo
			AND sal_customer_purchase_order.Remark LIKE prmRemark
			and sal_customer_purchase_order.ClosingStatus like prmClosingStatus
			AND DATE(sal_customer_purchase_order.TransactionDate) BETWEEN prmFirstDate AND prmLastDate
			AND sal_customer_purchase_order.PurchaseOrderType = 'CPO-SO';
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_purchase_order.`Code`,
			sal_customer_purchase_order.`CUSTPONo`,
			sal_customer_purchase_order.BranchCode AS branchCode,
			mst_branch.Name AS branchName,
			sal_customer_purchase_order.`Revision`,
			sal_customer_purchase_order.orderStatus,
			sal_customer_purchase_order.`RefCUSTPOCode`,
			sal_customer_purchase_order.`TransactionDate`,
			sal_customer_purchase_order.`CustomerPurchaseOrderNo`,
			sal_customer_purchase_order.`CustomerCode`,
			mst_customer.Name AS CustomerName,
			sal_customer_purchase_order.`EndUserCode`,
			EndUser.`Name` AS EndUserName,
			sal_customer_purchase_order.`PartialShipmentStatus`,
			sal_customer_purchase_order.`RetentionPercent`,
			sal_customer_purchase_order.`CurrencyCode`,
			sal_customer_purchase_order.`SalesPersonCode`,
			mst_sales_person.`Name` AS SalesPersonName,
			sal_customer_purchase_order.`ProjectCode`,
			mst_project.`Name` AS ProjectName,
			sal_customer_purchase_order.`RefNo`,
			sal_customer_purchase_order.`Remark`,
			sal_customer_purchase_order.ClosingStatus,
			sal_customer_purchase_order.`TotalTransactionAmount`,
			sal_customer_purchase_order.`DiscountPercent`,
			sal_customer_purchase_order.`DiscountAmount`,
			(SELECT fn_getAdditionalFee(sal_customer_purchase_order.`Code`,'POC'))AS TotalAdditionalFeeAmount,
			sal_customer_purchase_order.`TaxBaseAmount`,
			sal_customer_purchase_order.`Vatpercent`,
			sal_customer_purchase_order.`Vatamount`,
			sal_customer_purchase_order.`GrandTotalAmount`,
			sal_customer_purchase_order.CurrencyCode AS currrencyCode,
			mst_currency.Name AS currencyName
		FROM sal_customer_purchase_order
		INNER JOIN mst_customer ON sal_customer_purchase_order.CustomerCode=mst_customer.Code
		INNER JOIN `mst_customer` EndUser ON sal_customer_purchase_order.`EndUserCode`=EndUser.`Code`
		INNER JOIN mst_sales_person ON sal_customer_purchase_order.SalesPersonCode=mst_sales_person.Code
		LEFT JOIN `mst_project` ON sal_customer_purchase_order.`ProjectCode`=mst_project.`Code`
		INNER JOIN mst_currency ON mst_currency.Code = sal_customer_purchase_order.CurrencyCode
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_purchase_order.BranchCode
		WHERE
			sal_customer_purchase_order.Code LIKE ?
			AND sal_customer_purchase_order.CustomerCode LIKE ?
			AND mst_customer.Name LIKE ?
			AND sal_customer_purchase_order.SalesPersonCode LIKE ?
			AND mst_sales_person.Name LIKE ?
			AND sal_customer_purchase_order.RefNo LIKE ?
			AND sal_customer_purchase_order.Remark LIKE ?
			AND sal_customer_purchase_order.ClosingStatus LIKE ?
			AND DATE(sal_customer_purchase_order.TransactionDate) BETWEEN ? AND ?
			AND sal_customer_purchase_order.ValidStatus = TRUE
			AND sal_customer_purchase_order.PurchaseOrderType = 'CPO-SO'
		ORDER BY sal_customer_purchase_order.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmSalesPersonCode = prmSalesPersonCode; 
		set @prmSalesPersonName = prmSalesPersonName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		set @prmClosingStatus = prmClosingStatus;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmSalesPersonCode,@prmSalesPersonName,@prmRefNo,@prmRemark,@prmClosingStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_customer_purchase_order_list_blanket_order` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_customer_purchase_order_list_blanket_order` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_customer_purchase_order_list_blanket_order`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmSalesPersonCode VARCHAR(250),
	IN prmSalesPersonName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmClosingStatus VARCHAR(10),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	
	IF prmFlag='COUNT' THEN
		SELECT COUNT(sal_customer_purchase_order.Code)
		FROM sal_customer_purchase_order
		INNER JOIN mst_customer ON sal_customer_purchase_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_sales_person ON sal_customer_purchase_order.SalesPersonCode=mst_sales_person.Code
		WHERE 
			sal_customer_purchase_order.Code LIKE prmCode
			AND sal_customer_purchase_order.CustomerCode LIKE prmCustomerCode
			AND mst_customer.Name LIKE prmCustomerName
			AND sal_customer_purchase_order.SalesPersonCode LIKE prmSalesPersonCode
			AND mst_sales_person.Name LIKE prmSalesPersonName
			AND sal_customer_purchase_order.RefNo LIKE prmRefNo
			AND sal_customer_purchase_order.Remark LIKE prmRemark
			AND sal_customer_purchase_order.ClosingStatus LIKE prmClosingStatus
			AND DATE(sal_customer_purchase_order.TransactionDate) BETWEEN prmFirstDate AND prmLastDate
			AND sal_customer_purchase_order.PurchaseOrderType = 'CPO-BO';
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_purchase_order.`Code`,
			sal_customer_purchase_order.`CUSTPONo`,
			sal_customer_purchase_order.BranchCode AS branchCode,
			mst_branch.Name AS branchName,
			sal_customer_purchase_order.`Revision`,
			sal_customer_purchase_order.orderStatus,
			sal_customer_purchase_order.`RefCUSTPOCode`,
			sal_customer_purchase_order.`TransactionDate`,
			sal_customer_purchase_order.`CustomerPurchaseOrderNo`,
			sal_customer_purchase_order.`CustomerCode`,
			mst_customer.Name AS CustomerName,
			sal_customer_purchase_order.`EndUserCode`,
			EndUser.`Name` AS EndUserName,
			sal_customer_purchase_order.`PartialShipmentStatus`,
			sal_customer_purchase_order.`RetentionPercent`,
			sal_customer_purchase_order.`CurrencyCode`,
			sal_customer_purchase_order.`SalesPersonCode`,
			mst_sales_person.`Name` AS SalesPersonName,
			sal_customer_purchase_order.`ProjectCode`,
			mst_project.`Name` AS ProjectName,
			sal_customer_purchase_order.`RefNo`,
			sal_customer_purchase_order.`Remark`,
			sal_customer_purchase_order.ClosingStatus,
			sal_customer_purchase_order.`TotalTransactionAmount`,
			sal_customer_purchase_order.`DiscountPercent`,
			sal_customer_purchase_order.`DiscountAmount`,
			(SELECT fn_getAdditionalFee(sal_customer_purchase_order.`Code`,'POC'))AS TotalAdditionalFeeAmount,
			sal_customer_purchase_order.`TaxBaseAmount`,
			sal_customer_purchase_order.`Vatpercent`,
			sal_customer_purchase_order.`Vatamount`,
			sal_customer_purchase_order.`GrandTotalAmount`,
			sal_customer_purchase_order.CurrencyCode AS currrencyCode,
			mst_currency.Name AS currencyName
		FROM sal_customer_purchase_order
		INNER JOIN mst_customer ON sal_customer_purchase_order.CustomerCode=mst_customer.Code
		INNER JOIN `mst_customer` EndUser ON sal_customer_purchase_order.`EndUserCode`=EndUser.`Code`
		INNER JOIN mst_sales_person ON sal_customer_purchase_order.SalesPersonCode=mst_sales_person.Code
		LEFT JOIN `mst_project` ON sal_customer_purchase_order.`ProjectCode`=mst_project.`Code`
		INNER JOIN mst_currency ON mst_currency.Code = sal_customer_purchase_order.CurrencyCode
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_purchase_order.BranchCode
		WHERE
			sal_customer_purchase_order.Code LIKE ?
			AND sal_customer_purchase_order.CustomerCode LIKE ?
			AND mst_customer.Name LIKE ?
			AND sal_customer_purchase_order.SalesPersonCode LIKE ?
			AND mst_sales_person.Name LIKE ?
			AND sal_customer_purchase_order.RefNo LIKE ?
			AND sal_customer_purchase_order.Remark LIKE ?
			AND sal_customer_purchase_order.ClosingStatus LIKE ?
			AND DATE(sal_customer_purchase_order.TransactionDate) BETWEEN ? AND ?
			AND sal_customer_purchase_order.ValidStatus = TRUE
			AND sal_customer_purchase_order.PurchaseOrderType = 'CPO-BO'
		ORDER BY sal_customer_purchase_order.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmSalesPersonCode = prmSalesPersonCode; 
		SET @prmSalesPersonName = prmSalesPersonName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		SET @prmClosingStatus = prmClosingStatus;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmSalesPersonCode,@prmSalesPersonName,@prmRefNo,@prmRemark,@prmClosingStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_customer_purchase_order_release_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_customer_purchase_order_release_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_customer_purchase_order_release_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmSalesPersonCode VARCHAR(250),
	IN prmSalesPersonName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmClosingStatus VARCHAR(10),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	
	IF prmFlag='COUNT' THEN
		SELECT COUNT(sal_customer_purchase_order.Code)
		FROM sal_customer_purchase_order
		INNER JOIN mst_customer ON sal_customer_purchase_order.CustomerCode = mst_customer.Code
		INNER JOIN `mst_customer` EndUser ON sal_customer_purchase_order.`EndUserCode` = EndUser.`Code`
		INNER JOIN mst_sales_person ON sal_customer_purchase_order.SalesPersonCode = mst_sales_person.Code
		LEFT JOIN `mst_project` ON sal_customer_purchase_order.`ProjectCode` = mst_project.`Code`
		INNER JOIN mst_currency ON mst_currency.Code = sal_customer_purchase_order.CurrencyCode
		INNER JOIN mst_branch ON mst_branch.Code = sal_customer_purchase_order.BranchCode
		INNER JOIN sal_customer_sales_order ON sal_customer_sales_order.CustomerPurchaseOrderCode = sal_customer_purchase_order.`Code`
		WHERE 
			sal_customer_purchase_order.Code LIKE prmCode
			AND sal_customer_purchase_order.CustomerCode LIKE prmCustomerCode
			AND mst_customer.Name LIKE prmCustomerName
			AND sal_customer_purchase_order.SalesPersonCode LIKE prmSalesPersonCode
			AND mst_sales_person.Name LIKE prmSalesPersonName
			AND sal_customer_purchase_order.RefNo LIKE prmRefNo
			AND sal_customer_purchase_order.Remark LIKE prmRemark
			AND sal_customer_purchase_order.ClosingStatus LIKE prmClosingStatus
			AND DATE(sal_customer_purchase_order.TransactionDate) BETWEEN prmFirstDate AND prmLastDate;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			  sal_customer_purchase_order.`Code`,
			  sal_customer_purchase_order.`CUSTPONo`,
			  sal_customer_purchase_order.BranchCode AS branchCode,
			  mst_branch.Name AS branchName,
			  sal_customer_purchase_order.`Revision`,
			  sal_customer_purchase_order.orderStatus,
			  sal_customer_purchase_order.`RefCUSTPOCode`,
			  sal_customer_purchase_order.`TransactionDate`,
			  sal_customer_purchase_order.`CustomerPurchaseOrderNo`,
			  sal_customer_purchase_order.`CustomerCode`,
			  mst_customer.Name AS CustomerName,
			  sal_customer_purchase_order.`EndUserCode`,
			  EndUser.`Name` AS EndUserName,
			  sal_customer_purchase_order.`PartialShipmentStatus`,
			  sal_customer_purchase_order.`RetentionPercent`,
			  sal_customer_purchase_order.`CurrencyCode`,
			  sal_customer_purchase_order.`SalesPersonCode`,
			  mst_sales_person.`Name` AS SalesPersonName,
			  sal_customer_purchase_order.`ProjectCode`,
			  mst_project.`Name` AS ProjectName,
			  sal_customer_purchase_order.`RefNo`,
			  sal_customer_purchase_order.`Remark`,
			  sal_customer_purchase_order.ClosingStatus,
			  sal_customer_purchase_order.`TotalTransactionAmount`,
			  sal_customer_purchase_order.`DiscountPercent`,
			  sal_customer_purchase_order.`DiscountAmount`,
			  (SELECT
			    fn_getAdditionalFee (
			      sal_customer_purchase_order.`Code`,
			      'POC'
			    )) AS TotalAdditionalFeeAmount,
			  sal_customer_purchase_order.`TaxBaseAmount`,
			  sal_customer_purchase_order.`Vatpercent`,
			  sal_customer_purchase_order.`Vatamount`,
			  sal_customer_purchase_order.`GrandTotalAmount`,
			  sal_customer_purchase_order.CurrencyCode AS currrencyCode,
			  mst_currency.Name AS currencyName,
			  GROUP_CONCAT(sal_customer_sales_order.code) AS salesOrderCode,
			  sal_customer_blanket_order.Code AS blanketOrderCode,
			  sal_customer_blanket_order.CustomerPurchaseOrderCode AS CustomerPurchaseOrderBOCode
			FROM
			  sal_customer_purchase_order
			  INNER JOIN mst_customer
			    ON sal_customer_purchase_order.CustomerCode = mst_customer.Code
			  INNER JOIN `mst_customer` EndUser
			    ON sal_customer_purchase_order.`EndUserCode` = EndUser.`Code`
			  INNER JOIN mst_sales_person
			    ON sal_customer_purchase_order.SalesPersonCode = mst_sales_person.Code
			  LEFT JOIN `mst_project`
			    ON sal_customer_purchase_order.`ProjectCode` = mst_project.`Code`
			  INNER JOIN mst_currency
			    ON mst_currency.Code = sal_customer_purchase_order.CurrencyCode
			  INNER JOIN mst_branch
			    ON mst_branch.Code = sal_customer_purchase_order.BranchCode
			  INNER JOIN sal_customer_sales_order
			    ON sal_customer_sales_order.CustomerPurchaseOrderCode = sal_customer_purchase_order.`Code`
			  LEFT JOIN sal_customer_blanket_order 
			    ON sal_customer_blanket_order.Code = sal_customer_sales_order.BlanketOrderCode
			WHERE sal_customer_purchase_order.Code LIKE ?
			AND sal_customer_purchase_order.CustomerCode LIKE ?
			AND mst_customer.Name LIKE ?
			AND sal_customer_purchase_order.SalesPersonCode LIKE ?
			AND mst_sales_person.Name LIKE ?
			AND sal_customer_purchase_order.RefNo LIKE ?
			AND sal_customer_purchase_order.Remark LIKE ?
			AND sal_customer_purchase_order.ClosingStatus LIKE ?
			AND DATE(sal_customer_purchase_order.TransactionDate) BETWEEN ? AND ?
			AND sal_customer_purchase_order.ValidStatus = TRUE
			AND sal_customer_purchase_order.PurchaseOrderType = 'CPO-RL'
		GROUP BY sal_customer_purchase_order.`Code`	
		ORDER BY sal_customer_purchase_order.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmSalesPersonCode = prmSalesPersonCode; 
		SET @prmSalesPersonName = prmSalesPersonName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		SET @prmClosingStatus = prmClosingStatus;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmSalesPersonCode,@prmSalesPersonName,@prmRefNo,@prmRemark,@prmClosingStatus,	@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_customer_sales_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_customer_sales_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_customer_sales_order_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmClosingStatus VARCHAR(10),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT COUNT(sal_customer_sales_order.Code)
		FROM sal_customer_sales_order
		INNER JOIN mst_currency ON sal_customer_sales_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_sales_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_sales_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_sales_order.SalesPersonCode=mst_sales_person.Code
		LEFT JOIN mst_project ON sal_customer_sales_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_sales_order.BranchCode
		WHERE sal_customer_sales_order.ValidStatus=1
			AND sal_customer_sales_order.Code LIKE prmCode
			AND sal_customer_sales_order.CustomerCode LIKE prmCustomerCode
			AND mst_customer.Name LIKE prmCustomerName
			AND sal_customer_sales_order.RefNo LIKE prmRefNo
			AND sal_customer_sales_order.Remark LIKE prmRemark
			AND sal_customer_sales_order.ClosingStatus LIKE prmClosingStatus
			AND DATE(sal_customer_sales_order.TransactionDate) BETWEEN prmFirstDate AND prmLastDate;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_sales_order.Code,
			sal_customer_sales_order.CUSTSONo,
			sal_customer_sales_order.Revision,
			sal_customer_sales_order.RevisionRemark,
			sal_customer_sales_order.RefCUSTBOCode,
			sal_customer_sales_order.TransactionDate,
			sal_customer_sales_order.CustomerPurchaseOrderCode,
			sal_customer_sales_order.BranchCode AS branchCode,
			mst_branch.Name AS branchName,
			sal_customer_sales_order.RequestDeliveryDate,
			sal_customer_sales_order.ExpiredDate,
			sal_customer_sales_order.CustomerCode,
			mst_customer.Name AS CustomerName,
			sal_customer_sales_order.EndUserCode,
			EndUser.Name AS EndUserName,
			sal_customer_sales_order.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			sal_customer_sales_order.SalesPersonCode,
			mst_sales_person.Name AS SalesPersonName,
			sal_customer_sales_order.ProjectCode,
			mst_project.Name AS ProjectName,
			sal_customer_sales_order.RefNo,
			sal_customer_sales_order.Remark,
			sal_customer_sales_order.TotalTransactionAmount,
			sal_customer_sales_order.DiscountPercent,
			sal_customer_sales_order.DiscountAmount,
			(SELECT fn_getAdditionalFee(sal_customer_sales_order.Code,'BOD'))AS TotalAdditionalFeeAmount,
			sal_customer_sales_order.TaxBaseAmount,
			sal_customer_sales_order.Vatpercent,
			sal_customer_sales_order.Vatamount,
			sal_customer_sales_order.GrandTotalAmount,
			sal_customer_sales_order.ClosingStatus,
			sal_customer_sales_order.ClosingBy,
			sal_customer_sales_order.ClosingDate
		FROM sal_customer_sales_order
		INNER JOIN mst_currency ON sal_customer_sales_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_sales_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_sales_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_sales_order.SalesPersonCode=mst_sales_person.Code
		LEFT JOIN mst_project ON sal_customer_sales_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_sales_order.BranchCode
		WHERE sal_customer_sales_order.ValidStatus=1
			AND sal_customer_sales_order.Code LIKE ?
			AND sal_customer_sales_order.CustomerCode LIKE ?
			AND mst_customer.Name LIKE ?
			AND sal_customer_sales_order.RefNo LIKE ?
			AND sal_customer_sales_order.Remark LIKE ?
			AND sal_customer_sales_order.ClosingStatus LIKE ?
			AND DATE(sal_customer_sales_order.TransactionDate) BETWEEN ? AND ?
		ORDER BY sal_customer_sales_order.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		SET @prmClosingStatus=prmClosingStatus;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmRefNo,@prmRemark,@prmClosingStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_customer_sales_order_search_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_customer_sales_order_search_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_customer_sales_order_search_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(50),
	IN prmCustomerName VARCHAR(250),
	IN prmEndUserCode VARCHAR(50),
	IN prmEndUserName VARCHAR(250),
	IN prmSalesPersonCode VARCHAR(50),
	IN prmSalesPersonName VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
)
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT
			COUNT(sal_customer_sales_order.`Code`)
		FROM `sal_customer_sales_order`
		INNER JOIN `mst_branch` ON  sal_customer_sales_order.`BranchCode`=mst_branch.`Code`
		INNER JOIN `mst_currency` ON  sal_customer_sales_order.`CurrencyCode`=mst_currency.`Code`
		INNER JOIN `mst_customer` ON sal_customer_sales_order.`CustomerCode`=mst_customer.`Code`
		INNER JOIN `mst_customer` end_user ON sal_customer_sales_order.`EndUserCode`=end_user.`Code`
		INNER JOIN `mst_sales_person` ON sal_customer_sales_order.`SalesPersonCode`=mst_sales_person.`Code`
		INNER JOIN sal_customer_blanket_order ON sal_customer_sales_order.`BlanketOrderCode` = sal_customer_blanket_order.`Code`
		WHERE sal_customer_sales_order.`Code` LIKE prmCode
		AND sal_customer_sales_order.`CustomerCode` LIKE prmCustomerCode
		AND mst_customer.`Name` LIKE prmCustomerName
		AND sal_customer_sales_order.`EndUserCode` LIKE prmEndUserCode
		AND end_user.`Name` LIKE prmEndUserName
		AND sal_customer_sales_order.`SalesPersonCode` LIKE prmSalesPersonCode
		AND mst_sales_person.`Name` LIKE prmSalesPersonName
		AND DATE(sal_customer_sales_order.`TransactionDate`) BETWEEN DATE(prmFirstDate) AND DATE(prmLastDate)
		ORDER BY DATE(sal_customer_sales_order.`TransactionDate`) ASC;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_sales_order.`Code`,
			sal_customer_sales_order.`BranchCode`,
			mst_branch.`Name` AS branchName,
			sal_customer_sales_order.`TransactionDate`,
			sal_customer_sales_order.`CustomerPurchaseOrderCode`,
			sal_customer_sales_order.`BlanketOrderCode`,
			sal_customer_sales_order.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			sal_customer_sales_order.`CustomerCode`,
			mst_customer.`Name` AS CustomerName,
			sal_customer_sales_order.`EndUserCode`,
			end_user.`Name` AS EndUserName,
			sal_customer_sales_order.`CurrencyCode`,
			sal_customer_sales_order.`SalesPersonCode`,
			mst_sales_person.`Name` AS SalesPersonName
		FROM `sal_customer_sales_order`
		INNER JOIN `mst_branch` ON  sal_customer_sales_order.`BranchCode`=mst_branch.`Code`
		INNER JOIN `mst_currency` ON  sal_customer_sales_order.`CurrencyCode`=mst_currency.`Code`
		INNER JOIN `mst_customer` ON sal_customer_sales_order.`CustomerCode`=mst_customer.`Code`
		INNER JOIN `mst_customer` end_user ON sal_customer_sales_order.`EndUserCode`=end_user.`Code`
		INNER JOIN `mst_sales_person` ON sal_customer_sales_order.`SalesPersonCode`=mst_sales_person.`Code`
		INNER JOIN sal_customer_blanket_order ON sal_customer_sales_order.`BlanketOrderCode` = sal_customer_blanket_order.`Code`
		WHERE sal_customer_sales_order.`Code` LIKE ?
		AND sal_customer_sales_order.`CustomerCode` LIKE ?
		AND mst_customer.`Name` LIKE ?
		AND sal_customer_sales_order.`EndUserCode` LIKE ?
		AND end_user.`Name` LIKE ?
		AND sal_customer_sales_order.`SalesPersonCode` LIKE ?
		AND mst_sales_person.`Name` LIKE ?
		AND DATE(sal_customer_sales_order.`TransactionDate`) BETWEEN DATE(?) AND DATE(?)
		ORDER BY DATE(sal_customer_sales_order.`TransactionDate`) ASC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmEndUserCode=prmEndUserCode;
		SET @prmEndUserName = prmEndUserName;
		SET @prmSalesPersonCode=prmSalesPersonCode;
		SET @prmSalesPersonName = prmSalesPersonName;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmEndUserCode,@prmEndUserName,@prmSalesPersonCode,@prmSalesPersonName,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_finance_document_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_finance_document_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_finance_document_list`(
	IN prmDocumentFinanceID VARCHAR(5), 
	IN prmBranchCode VARCHAR(50), 
	IN prmDocumentNo VARCHAR(50),
	IN prmDocumentRefNo VARCHAR(50),
	IN prmCustomerVendorCode VARCHAR(50),
	IN prmCustomerVendorName VARCHAR(250),
	IN prmCurrencyCode VARCHAR(50),
	IN prmFirstDate DATETIME, 
	IN prmLastDate DATETIME,
	IN prmLimitFrom INTEGER,
	IN prmLimitUpTo INTEGER
)
BEGIN
    --  IF prmDocumentFinanceID = 'BBM' THEN
	PREPARE STMT FROM
	"SELECT
			DocumentGJM.BranchCode,
			DocumentGJM.DocumentType,
			DocumentGJM.DocumentNo,
			DocumentGJM.DocumentRefNo,
			DocumentGJM.TransactionDate,
			DocumentGJM.DueDate,
			DocumentGJM.CustomerVendorCode,
			DocumentGJM.CustomerVendorNo,
			DocumentGJM.CustomerVendorName,
			DocumentGJM.CurrencyCode,
			DocumentGJM.CurrencyName,
			DocumentGJM.ExchangeRate,	
			DocumentGJM.chartOfAccountCode,
			DocumentGJM.chartOfAccountName,
			DocumentGJM.GrandTotalAmount,
			DocumentGJM.PaidAmount,
			DocumentGJM.Balance,
			DocumentGJM.Debit,
			DocumentGJM.Credit
		FROM( 
		
		SELECT
			fin_customer_credit_note.BranchCode,
			'CCN' AS DocumentType,
			fin_customer_credit_note.code AS DocumentNo,
			fin_customer_credit_note.RefNo AS DocumentRefNo,
			fin_customer_credit_note.TransactionDate,
			fin_customer_credit_note.DueDate,
			fin_customer_credit_note.CustomerCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_customer.name AS CustomerVendorName,
			fin_customer_credit_note.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_customer_credit_note.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_customer_credit_note.GrandTotalAmount,
			fin_customer_credit_note.PaidAmount,
			fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)
			ELSE
			0
			END AS Credit
		FROM fin_customer_credit_note
			INNER JOIN mst_customer ON fin_customer_credit_note.CustomerCode = mst_customer.Code
			INNER JOIN mst_currency ON fin_customer_credit_note.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'CCN'
			INNER JOIN mst_document_type_chart_of_account ON 'CCN' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_customer_credit_note.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
			
		UNION ALL
		SELECT
			fin_customer_debit_note.BranchCode,
			'CDN' AS DocumentType,
			fin_customer_debit_note.code AS DocumentNo,
			fin_customer_debit_note.RefNo AS DocumentRefNo,
			fin_customer_debit_note.TransactionDate,
			fin_customer_debit_note.DueDate,
			fin_customer_debit_note.CustomerCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_customer.name AS CustomerVendorName,
			fin_customer_debit_note.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_customer_debit_note.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_customer_debit_note.GrandTotalAmount,
			fin_customer_debit_note.PaidAmount,
			fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)
			ELSE
			0
			END AS Credit
		FROM fin_customer_debit_note
			INNER JOIN mst_customer ON fin_customer_debit_note.CustomerCode = mst_customer.Code
			INNER JOIN mst_currency ON fin_customer_debit_note.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'CDN'
			INNER JOIN mst_document_type_chart_of_account ON 'CDN' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_customer_debit_note.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
			
		UNION ALL
		
		SELECT
			fin_vendor_credit_note.BranchCode,
			'VCN' AS DocumentType,
			fin_vendor_credit_note.code AS DocumentNo,
			fin_vendor_credit_note.RefNo AS DocumentRefNo,
			fin_vendor_credit_note.TransactionDate,
			fin_vendor_credit_note.DueDate,
			fin_vendor_credit_note.VendorCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_vendor.name AS CustomerVendorName,
			fin_vendor_credit_note.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_vendor_credit_note.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_vendor_credit_note.GrandTotalAmount,
			fin_vendor_credit_note.PaidAmount,
			fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount)
			ELSE
			0
			END AS Credit
		FROM fin_vendor_credit_note
			INNER JOIN mst_vendor ON fin_vendor_credit_note.VendorCode = mst_vendor.Code
			INNER JOIN mst_currency ON fin_vendor_credit_note.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'VCN'
			INNER JOIN mst_document_type_chart_of_account ON 'VCN' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_vendor_credit_note.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
			
		UNION ALL
		SELECT
			fin_vendor_debit_note.BranchCode,
			'VDN' AS DocumentType,
			fin_vendor_debit_note.code AS DocumentNo,
			fin_vendor_debit_note.RefNo AS DocumentRefNo,
			fin_vendor_debit_note.TransactionDate,
			fin_vendor_debit_note.DueDate,
			fin_vendor_debit_note.VendorCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_vendor.name AS CustomerVendorName,
			fin_vendor_debit_note.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_vendor_debit_note.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_vendor_debit_note.GrandTotalAmount,
			fin_vendor_debit_note.PaidAmount,
			fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount)
			ELSE
			0
			END AS Credit
		FROM fin_vendor_debit_note
			INNER JOIN mst_vendor ON fin_vendor_debit_note.VendorCode = mst_vendor.Code
			INNER JOIN mst_currency ON fin_vendor_debit_note.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'VDN'
			INNER JOIN mst_document_type_chart_of_account ON 'VDN' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_vendor_debit_note.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
		
		UNION ALL
		SELECT
			fin_customer_down_payment.BranchCode,
			'CDP' AS DocumentType,
			fin_customer_down_payment.code AS DocumentNo,
			fin_customer_down_payment.RefNo AS DocumentRefNo,
			fin_customer_down_payment.TransactionDate,
			fin_customer_down_payment.TransactionDate AS DueDate,
			fin_customer_down_payment.CustomerCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_customer.name AS CustomerVendorName,
			fin_customer_down_payment.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_customer_down_payment.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_customer_down_payment.GrandTotalAmount,
			fin_customer_down_payment.GrandTotalAmount AS PaidAmount,
			fin_customer_down_payment.GrandTotalAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_customer_down_payment.GrandTotalAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_customer_down_payment.GrandTotalAmount)
			ELSE
			0
			END AS Credit
		FROM fin_customer_down_payment
			INNER JOIN mst_customer ON fin_customer_down_payment.CustomerCode = mst_customer.Code
			INNER JOIN mst_currency ON fin_customer_down_payment.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'CDP-P'
			INNER JOIN mst_document_type_chart_of_account ON 'CDP-P' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_customer_down_payment.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_customer_down_payment.GrandTotalAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
			
		)AS DocumentGJM
		
	WHERE DocumentGJM.BranchCode LIKE ?	
	AND DocumentGJM.DocumentNo LIKE ?
	AND DocumentGJM.DocumentRefNo LIKE ?
	AND DocumentGJM.CustomerVendorCode LIKE ?
	AND DocumentGJM.CustomerVendorName LIKE ?
	AND DocumentGJM.CurrencyCode LIKE ?
	AND DATE(DocumentGJM.TransactionDate) BETWEEN DATE(?) AND DATE(?)
	ORDER BY DocumentGJM.DocumentNo DESC
	LIMIT ?, ?";
	SET @prmBranchCode = prmBranchCode;
	SET @prmDocumentNo = prmDocumentNo;
	SET @prmDocumentRefNo = prmDocumentRefNo; 
	SET @prmCustomerVendorCode = prmCustomerVendorCode;
	SET @prmCustomerVendorName = prmCustomerVendorName; 
	SET @prmCurrencyCode = prmCurrencyCode; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate; 
	SET @prmLimitFrom = prmLimitFrom; 
	SET @prmLimitUpTo = prmLimitUpTo;
	
	EXECUTE STMT USING @prmBranchCode,@prmDocumentNo,@prmDocumentRefNo,@prmCustomerVendorCode,@prmCustomerVendorName,@prmCurrencyCode,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitUpTo;
	DEALLOCATE PREPARE STMT;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_finance_document_list_count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_finance_document_list_count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_finance_document_list_count`(
	IN prmDocumentFinanceID VARCHAR(5), 
	IN prmBranchCode VARCHAR(50),
	IN prmDocumentNo VARCHAR(50),
	IN prmDocumentRefNo VARCHAR(50),
	IN prmCustomerVendorCode VARCHAR(50),
	IN prmCustomerVendorName VARCHAR(250),
	IN prmCurrencyCode VARCHAR(50),
	IN prmFirstDate DATETIME, 
	IN prmLastDate DATETIME
    )
BEGIN
		PREPARE STMT FROM
	"SELECT
		COUNT(*)
		FROM( 
		
		SELECT
			fin_customer_credit_note.BranchCode,
			'CCN' AS DocumentType,
			fin_customer_credit_note.code AS DocumentNo,
			fin_customer_credit_note.RefNo AS DocumentRefNo,
			fin_customer_credit_note.TransactionDate,
			fin_customer_credit_note.DueDate,
			fin_customer_credit_note.CustomerCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_customer.name AS CustomerVendorName,
			fin_customer_credit_note.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_customer_credit_note.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_customer_credit_note.GrandTotalAmount,
			fin_customer_credit_note.PaidAmount,
			fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)
			ELSE
			0
			END AS Credit
		FROM fin_customer_credit_note
			INNER JOIN mst_customer ON fin_customer_credit_note.CustomerCode = mst_customer.Code
			INNER JOIN mst_currency ON fin_customer_credit_note.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'CCN'
			INNER JOIN mst_document_type_chart_of_account ON 'CCN' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_customer_credit_note.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
			
		UNION ALL
		SELECT
			fin_customer_debit_note.BranchCode,
			'CDN' AS DocumentType,
			fin_customer_debit_note.code AS DocumentNo,
			fin_customer_debit_note.RefNo AS DocumentRefNo,
			fin_customer_debit_note.TransactionDate,
			fin_customer_debit_note.DueDate,
			fin_customer_debit_note.CustomerCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_customer.name AS CustomerVendorName,
			fin_customer_debit_note.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_customer_debit_note.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_customer_debit_note.GrandTotalAmount,
			fin_customer_debit_note.PaidAmount,
			fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)
			ELSE
			0
			END AS Credit
		FROM fin_customer_debit_note
			INNER JOIN mst_customer ON fin_customer_debit_note.CustomerCode = mst_customer.Code
			INNER JOIN mst_currency ON fin_customer_debit_note.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'CDN'
			INNER JOIN mst_document_type_chart_of_account ON 'CDN' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_customer_debit_note.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
			
		UNION ALL
		
		SELECT
			fin_vendor_credit_note.BranchCode,
			'VCN' AS DocumentType,
			fin_vendor_credit_note.code AS DocumentNo,
			fin_vendor_credit_note.RefNo AS DocumentRefNo,
			fin_vendor_credit_note.TransactionDate,
			fin_vendor_credit_note.DueDate,
			fin_vendor_credit_note.VendorCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_vendor.name AS CustomerVendorName,
			fin_vendor_credit_note.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_vendor_credit_note.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_vendor_credit_note.GrandTotalAmount,
			fin_vendor_credit_note.PaidAmount,
			fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount)
			ELSE
			0
			END AS Credit
		FROM fin_vendor_credit_note
			INNER JOIN mst_vendor ON fin_vendor_credit_note.VendorCode = mst_vendor.Code
			INNER JOIN mst_currency ON fin_vendor_credit_note.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'VCN'
			INNER JOIN mst_document_type_chart_of_account ON 'VCN' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_vendor_credit_note.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
			
		UNION ALL
		SELECT
			fin_vendor_debit_note.BranchCode,
			'VDN' AS DocumentType,
			fin_vendor_debit_note.code AS DocumentNo,
			fin_vendor_debit_note.RefNo AS DocumentRefNo,
			fin_vendor_debit_note.TransactionDate,
			fin_vendor_debit_note.DueDate,
			fin_vendor_debit_note.VendorCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_vendor.name AS CustomerVendorName,
			fin_vendor_debit_note.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_vendor_debit_note.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_vendor_debit_note.GrandTotalAmount,
			fin_vendor_debit_note.PaidAmount,
			fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount)
			ELSE
			0
			END AS Credit
		FROM fin_vendor_debit_note
			INNER JOIN mst_vendor ON fin_vendor_debit_note.VendorCode = mst_vendor.Code
			INNER JOIN mst_currency ON fin_vendor_debit_note.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'VDN'
			INNER JOIN mst_document_type_chart_of_account ON 'VDN' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_vendor_debit_note.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
		
		UNION ALL
		SELECT
			fin_customer_down_payment.BranchCode,
			'CDP' AS DocumentType,
			fin_customer_down_payment.code AS DocumentNo,
			fin_customer_down_payment.RefNo AS DocumentRefNo,
			fin_customer_down_payment.TransactionDate,
			fin_customer_down_payment.TransactionDate AS DueDate,
			fin_customer_down_payment.CustomerCode AS CustomerVendorCode,
			'' AS CustomerVendorNo,
			mst_customer.name AS CustomerVendorName,
			fin_customer_down_payment.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			fin_customer_down_payment.ExchangeRate,
			mst_document_type_chart_of_account.AccountCode AS chartOfAccountCode,
			mst_chart_of_account.name AS chartOfAccountName,
			fin_customer_down_payment.GrandTotalAmount,
			fin_customer_down_payment.GrandTotalAmount AS PaidAmount,
			fin_customer_down_payment.GrandTotalAmount AS Balance,
			CASE WHEN mst_document_type.Position = 'Debit' THEN
			(fin_customer_down_payment.GrandTotalAmount)
			ELSE
			0
			END AS Debit,
			CASE WHEN mst_document_type.Position = 'Credit' THEN
			(fin_customer_down_payment.GrandTotalAmount)
			ELSE
			0
			END AS Credit
		FROM fin_customer_down_payment
			INNER JOIN mst_customer ON fin_customer_down_payment.CustomerCode = mst_customer.Code
			INNER JOIN mst_currency ON fin_customer_down_payment.CurrencyCode = mst_currency.Code
			INNER JOIN mst_document_type ON mst_document_type.Code = 'CDP-P'
			INNER JOIN mst_document_type_chart_of_account ON 'CDP-P' = mst_document_type_chart_of_account.DocumentTypeCode
			AND fin_customer_down_payment.CurrencyCode = mst_document_type_chart_of_account.CurrencyCode
			INNER JOIN mst_chart_of_account ON mst_document_type_chart_of_account.AccountCode = mst_chart_of_account.code
			INNER JOIN mst_search_document ON mst_search_document.Code=mst_document_type.Code
		WHERE fin_customer_down_payment.GrandTotalAmount <> 0
			AND mst_search_document.GJMStatus=TRUE
			
		)AS DocumentGJM
		
	WHERE DocumentGJM.BranchCode LIKE ?	
	AND DocumentGJM.DocumentNo LIKE ?
	AND DocumentGJM.DocumentRefNo LIKE ?
	AND DocumentGJM.CustomerVendorCode LIKE ?
	AND DocumentGJM.CustomerVendorName LIKE ?
	AND DocumentGJM.CurrencyCode LIKE ?
	AND DATE(DocumentGJM.TransactionDate) BETWEEN DATE(?) AND DATE(?)
	ORDER BY DocumentGJM.DocumentNo DESC";
	SET @prmBranchCode = prmBranchCode;
	SET @prmDocumentNo = prmDocumentNo;
	SET @prmDocumentRefNo = prmDocumentRefNo; 
	SET @prmCustomerVendorCode = prmCustomerVendorCode;
	SET @prmCustomerVendorName = prmCustomerVendorName; 
	SET @prmCurrencyCode = prmCurrencyCode; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate; 
	
	EXECUTE STMT USING @prmBranchCode,@prmDocumentNo,@prmDocumentRefNo,@prmCustomerVendorCode,@prmCustomerVendorName,@prmCurrencyCode,@prmFirstDate,@prmLastDate;
	DEALLOCATE PREPARE STMT;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_Finance_PaymentHistoryDetail_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_Finance_PaymentHistoryDetail_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`%` PROCEDURE `usp_Finance_PaymentHistoryDetail_Get`(
IN prmDocumentNo VARCHAR(50),
IN prmDocumentType VARCHAR(10)
)
BEGIN
SELECT paymentHistoryDetail_union.* FROM 
(
SELECT
	fin_cash_received_detail.DocumentBranchCode,
	fin_cash_received_detail.DocumentNo,
	fin_cash_received.CashAccountCode AS bankCashAccountCode,
	mst_cash_account.name AS bankCashAccountName,
	fin_cash_received.RefNo,
	fin_cash_received.code AS VoucherNo,
	fin_cash_received.TransactionDate,
	"Cash" AS paymentReceivedType,
	fin_cash_received.CurrencyCode,
	fin_cash_received.ExchangeRate,
	CASE WHEN fin_cash_received_detail.Debit > 0 THEN
		fin_cash_received_detail.Debit
	ELSE
		fin_cash_received_detail.Credit
	END AS Amount,
	CASE WHEN fin_cash_received_detail.DebitIDR > 0 THEN
		fin_cash_received_detail.DebitIDR
	ELSE
		fin_cash_received_detail.CreditIDR
	END AS AmountIDR,
	fin_cash_received_detail.ChartOfAccountCode,
	mst_chart_of_account.Name AS ChartOfAccountName,	
	fin_cash_received_detail.TransactionStatus
FROM fin_cash_received_detail
	INNER JOIN fin_cash_received ON fin_cash_received_detail.HeaderCode = fin_cash_received.code
	INNER JOIN mst_cash_account ON fin_cash_received.CashAccountCode = mst_cash_account.code
	INNER JOIN mst_chart_of_account ON fin_cash_received_detail.ChartOfAccountCode = mst_chart_of_account.Code
WHERE
	fin_cash_received_detail.DocumentNo = prmDocumentNo
	AND fin_cash_received_detail.DocumentType = prmDocumentType
	
UNION ALL
SELECT
	fin_bank_received_detail.DocumentBranchCode,
	fin_bank_received_detail.DocumentNo,
	fin_bank_received.BankAccountCode AS bankCashAccountCode,
	mst_bank_account.name AS bankCashAccountName,
	fin_bank_received.RefNo,
	fin_bank_received.code AS VoucherNo,
	fin_bank_received.TransactionDate,
	fin_bank_received.ReceivedType AS paymentReceivedType,
	fin_bank_received.CurrencyCode,
	fin_bank_received.ExchangeRate,
	CASE WHEN fin_bank_received_detail.Debit > 0 THEN
		fin_bank_received_detail.Debit
	ELSE
		fin_bank_received_detail.Credit
	END AS Amount,
	CASE WHEN fin_bank_received_detail.DebitIDR > 0 THEN
		fin_bank_received_detail.DebitIDR
	ELSE
		fin_bank_received_detail.CreditIDR
	END AS AmountIDR,
	fin_bank_received_detail.ChartOfAccountCode,
	mst_chart_of_account.Name AS ChartOfAccountName,	
	fin_bank_received_detail.TransactionStatus
FROM fin_bank_received_detail
	INNER JOIN fin_bank_received ON fin_bank_received_detail.HeaderCode = fin_bank_received.code
	INNER JOIN mst_bank_account ON fin_bank_received.BankAccountCode = mst_bank_account.code
	INNER JOIN mst_chart_of_account ON fin_bank_received_detail.ChartOfAccountCode = mst_chart_of_account.Code
WHERE
	fin_bank_received_detail.DocumentNo = prmDocumentNo
	AND fin_bank_received_detail.DocumentType = prmDocumentType
	
UNION ALL
SELECT
	fin_cash_payment_detail.DocumentBranchCode,
	fin_cash_payment_detail.DocumentNo,
	fin_cash_payment.CashAccountCode AS bankCashAccountCode,
	mst_cash_account.name AS bankCashAccountName,
	fin_cash_payment.RefNo,
	fin_cash_payment.Code AS VoucherNo,
	fin_cash_payment.TransactionDate,
	"Cash" AS paymentReceivedType,
	fin_cash_payment.CurrencyCode,
	fin_cash_payment.ExchangeRate,
	CASE WHEN fin_cash_payment_detail.Debit > 0 THEN
		fin_cash_payment_detail.Debit
	ELSE
		fin_cash_payment_detail.Credit
	END AS Amount,
	CASE WHEN fin_cash_payment_detail.DebitIDR > 0 THEN
		fin_cash_payment_detail.DebitIDR
	ELSE
		fin_cash_payment_detail.CreditIDR
	END AS AmountIDR,
	fin_cash_payment_detail.ChartOfAccountCode,
	mst_chart_of_account.Name AS ChartOfAccountName,	
	fin_cash_payment_detail.TransactionStatus
FROM fin_cash_payment_detail
	INNER JOIN fin_cash_payment ON fin_cash_payment_detail.HeaderCode = fin_cash_payment.Code
	INNER JOIN mst_cash_account ON fin_cash_payment.CashAccountCode = mst_cash_account.code
	INNER JOIN mst_chart_of_account ON fin_cash_payment_detail.ChartOfAccountCode = mst_chart_of_account.Code
WHERE
	fin_cash_payment_detail.DocumentNo = prmDocumentNo
	AND fin_cash_payment_detail.DocumentType = prmDocumentType
	
UNION ALL
SELECT
	fin_bank_payment_detail.DocumentBranchCode,
	fin_bank_payment_detail.DocumentNo,
	fin_bank_payment.BankAccountCode AS bankCashAccountCode,
	mst_bank_account.name AS bankCashAccountName,
	fin_bank_payment.RefNo,
	fin_bank_payment.Code AS VoucherNo,
	fin_bank_payment.TransactionDate,
	fin_bank_payment.PaymentType AS paymentReceivedType,
	fin_bank_payment.CurrencyCode,
	fin_bank_payment.ExchangeRate,
	CASE WHEN fin_bank_payment_detail.Debit > 0 THEN
		fin_bank_payment_detail.Debit
	ELSE
		fin_bank_payment_detail.Credit
	END AS Amount,
	CASE WHEN fin_bank_payment_detail.DebitIDR > 0 THEN
		fin_bank_payment_detail.DebitIDR
	ELSE
		fin_bank_payment_detail.CreditIDR
	END AS AmountIDR,
	fin_bank_payment_detail.ChartOfAccountCode,
	mst_chart_of_account.Name AS ChartOfAccountName,	
	fin_bank_payment_detail.TransactionStatus
FROM fin_bank_payment_detail
	INNER JOIN fin_bank_payment ON fin_bank_payment_detail.HeaderCode = fin_bank_payment.Code
	INNER JOIN mst_bank_account ON fin_bank_payment.BankAccountCode = mst_bank_account.code
	INNER JOIN mst_chart_of_account ON fin_bank_payment_detail.ChartOfAccountCode = mst_chart_of_account.Code
WHERE
	fin_bank_payment_detail.DocumentNo = prmDocumentNo
	AND fin_bank_payment_detail.DocumentType = prmDocumentType
	
UNION ALL
SELECT
	fin_general_journal_detail.DocumentBranchCode,
	fin_general_journal_detail.DocumentNo,
	"" AS bankCashAccountCode,
	"" AS bankCashAccountName,
	fin_general_journal.RefNo,
	fin_general_journal.Code AS VoucherNo,
	fin_general_journal.TransactionDate,
	"GJM" AS paymentReceivedType,
	fin_general_journal.CurrencyCode,
	fin_general_journal.ExchangeRate,
	CASE WHEN fin_general_journal_detail.Debit > 0 THEN
		fin_general_journal_detail.Debit
	ELSE
		fin_general_journal_detail.Credit
	END AS Amount,
	CASE WHEN fin_general_journal_detail.DebitIDR > 0 THEN
		fin_general_journal_detail.DebitIDR
	ELSE
		fin_general_journal_detail.CreditIDR
	END AS AmountIDR,
	fin_general_journal_detail.ChartOfAccountCode,
	mst_chart_of_account.Name AS ChartOfAccountName,	
	fin_general_journal_detail.TransactionStatus
FROM fin_general_journal_detail
	INNER JOIN fin_general_journal ON fin_general_journal_detail.HeaderCode = fin_general_journal.Code
	INNER JOIN mst_chart_of_account ON fin_general_journal_detail.ChartOfAccountCode = mst_chart_of_account.Code
WHERE
	fin_general_journal_detail.DocumentNo = prmDocumentNo
	AND fin_general_journal_detail.DocumentType = prmDocumentType
	
)AS paymentHistoryDetail_union;
		
		
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_Finance_PaymentHistoryHeader_Get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_Finance_PaymentHistoryHeader_Get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_Finance_PaymentHistoryHeader_Get`(
IN prmTransactionType VARCHAR(50),
IN prmFirstdate DATETIME,
IN prmLastdate DATETIME,
IN prmDocumentNo VARCHAR(50),
IN prmDocumentRefNo VARCHAR(50),
IN prmDocumentCustomerVendorCode VARCHAR(50),
IN prmDocumentCustomerVendorName VARCHAR(50),
IN prmLimitFrom INTEGER,
IN prmLimitTo INTEGER
)
BEGIN
SET @limit_sp = CONCAT(' LIMIT ', prmLimitFrom ,',', prmLimitTo,';');
		
IF prmTransactionType = 'INV' THEN
	SET @inQuery = CONCAT(
	"
	SELECT
		'INV' AS transactionType,
		fin_customer_invoice.BranchCode,
		fin_customer_invoice.code AS DocumentNo,
		fin_customer_invoice.RefNo AS DocumentRefNo,
		fin_customer_invoice.TransactionDate AS DocumentTransactionDate,
		fin_customer_invoice.CustomerCode AS DocumentCustomerVendorCode,
		mst_customer.Name AS DocumentCustomerVendorName,
		fin_customer_invoice.CurrencyCode AS DocumentCurrencyCode,
		fin_customer_invoice.ExchangeRate AS DocumentExchangeRate,
		fin_customer_invoice.TotalTransactionAmount  AS DocumentTotalTransactionAmount,
		fin_customer_invoice.DownPaymentAmount  AS DocumentDownPaymentAmount,
		fin_customer_invoice.TotalTransactionAmount - fin_customer_invoice.DownPaymentAmount AS DocumentNettAmount,
		fin_customer_invoice.PaidAmount AS DocumentPaidAmount,
		(fin_customer_invoice.TotalTransactionAmount - fin_customer_invoice.DownPaymentAmount) - fin_customer_invoice.PaidAmount AS DocumentBalanceAmount
	FROM fin_customer_invoice
	INNER JOIN mst_customer ON fin_customer_invoice.CustomerCode=mst_customer.Code
	WHERE
		DATE(fin_customer_invoice.TransactionDate) BETWEEN DATE('",prmFirstdate,"') AND DATE('",prmLastdate,"')
		AND fin_customer_invoice.code LIKE '",prmDocumentNo,"'
		AND fin_customer_invoice.RefNo LIKE '",prmDocumentRefNo,"'
		AND fin_customer_invoice.CustomerCode LIKE '",prmDocumentCustomerVendorCode,"'
		AND mst_customer.Name LIKE '",prmDocumentCustomerVendorName,"'
	ORDER BY fin_customer_invoice.TransactionDate
	");
	
	SET @queryFIX = CONCAT(@inQuery, @limit_sp);
	PREPARE STMT FROM @queryFIX;
	EXECUTE STMT;
	DEALLOCATE PREPARE STMT;	
	
ELSEIF prmTransactionType = 'CDN' THEN
	SET @inQuery = CONCAT(
	"
	SELECT
		'CDN' AS transactionType,
		fin_customer_debit_note.BranchCode,
		fin_customer_debit_note.code AS DocumentNo,
		fin_customer_debit_note.RefNo AS DocumentRefNo,
		fin_customer_debit_note.TransactionDate AS DocumentTransactionDate,
		fin_customer_debit_note.CustomerCode AS DocumentCustomerVendorCode,
		mst_customer.Name AS DocumentCustomerVendorName,
		fin_customer_debit_note.CurrencyCode AS DocumentCurrencyCode,
		fin_customer_debit_note.ExchangeRate AS DocumentExchangeRate,
		fin_customer_debit_note.TotalTransactionAmount AS DocumentTotalTransactionAmount,
		0  AS DocumentDownPaymentAmount,
		fin_customer_debit_note.TotalTransactionAmount AS DocumentNettAmount,
		fin_customer_debit_note.PaidAmount AS DocumentPaidAmount,
		fin_customer_debit_note.TotalTransactionAmount - fin_customer_debit_note.PaidAmount AS DocumentBalanceAmount
	FROM fin_customer_debit_note
	INNER JOIN mst_customer ON fin_customer_debit_note.CustomerCode=mst_customer.Code
	WHERE
		DATE(fin_customer_debit_note.TransactionDate) BETWEEN DATE('",prmFirstdate,"') AND DATE('",prmLastdate,"')
		AND fin_customer_debit_note.code LIKE '",prmDocumentNo,"'
		AND fin_customer_debit_note.RefNo LIKE '",prmDocumentRefNo,"'
		AND fin_customer_debit_note.CustomerCode LIKE '",prmDocumentCustomerVendorCode,"'
		AND mst_customer.Name LIKE '",prmDocumentCustomerVendorName,"'
	ORDER BY fin_customer_debit_note.TransactionDate
	");
	SET @queryFIX = CONCAT(@inQuery, @limit_sp);
	PREPARE STMT FROM @queryFIX;
	EXECUTE STMT;
	DEALLOCATE PREPARE STMT;	
	
ELSEIF prmTransactionType = 'CCN' THEN
	SET @inQuery = CONCAT(
	"
	SELECT
		'CCN' AS transactionType,
		fin_customer_credit_note.BranchCode,
		fin_customer_credit_note.code AS DocumentNo,
		fin_customer_credit_note.RefNo AS DocumentRefNo,
		fin_customer_credit_note.TransactionDate AS DocumentTransactionDate,
		fin_customer_credit_note.CustomerCode AS DocumentCustomerVendorCode,
		mst_customer.Name AS DocumentCustomerVendorName,
		fin_customer_credit_note.CurrencyCode AS DocumentCurrencyCode,
		fin_customer_credit_note.ExchangeRate AS DocumentExchangeRate,
		fin_customer_credit_note.TotalTransactionAmount AS DocumentTotalTransactionAmount,
		0  AS DocumentDownPaymentAmount,
		fin_customer_credit_note.TotalTransactionAmount AS DocumentNettAmount,
		fin_customer_credit_note.PaidAmount AS DocumentPaidAmount,
		fin_customer_credit_note.TotalTransactionAmount - fin_customer_credit_note.PaidAmount AS DocumentBalanceAmount
	FROM fin_customer_credit_note
	INNER JOIN mst_customer ON fin_customer_credit_note.CustomerCode=mst_customer.Code
	WHERE
		DATE(fin_customer_credit_note.TransactionDate) BETWEEN DATE('",prmFirstdate,"') AND DATE('",prmLastdate,"')
		AND fin_customer_credit_note.code LIKE '",prmDocumentNo,"'
		AND fin_customer_credit_note.RefNo LIKE '",prmDocumentRefNo,"'
		AND fin_customer_credit_note.CustomerCode LIKE '",prmDocumentCustomerVendorCode,"'
		AND mst_customer.Name LIKE '",prmDocumentCustomerVendorName,"'
	ORDER BY fin_customer_credit_note.TransactionDate
	");
	SET @queryFIX = CONCAT(@inQuery, @limit_sp);
	PREPARE STMT FROM @queryFIX;
	EXECUTE STMT;
	DEALLOCATE PREPARE STMT;	
			
ELSEIF prmTransactionType = 'VDN' THEN	
	SET @inQuery = CONCAT(
	"
	SELECT
		'VDN' AS transactionType,
		fin_vendor_debit_note.BranchCode,
		fin_vendor_debit_note.code AS DocumentNo,
		fin_vendor_debit_note.RefNo AS DocumentRefNo,
		fin_vendor_debit_note.TransactionDate AS DocumentTransactionDate,
		'' AS documentCustomerVendorCode,
		'' AS documentCustomerVendorName,
		fin_vendor_debit_note.CurrencyCode AS DocumentCurrencyCode,
		fin_vendor_debit_note.ExchangeRate AS DocumentExchangeRate,
		fin_vendor_debit_note.TotalTransactionAmount AS DocumentTotalTransactionAmount,
		0  AS DocumentDownPaymentAmount,
		fin_vendor_debit_note.TotalTransactionAmount AS DocumentNettAmount,
		fin_vendor_debit_note.PaidAmount AS DocumentPaidAmount,
		fin_vendor_debit_note.TotalTransactionAmount - fin_vendor_debit_note.PaidAmount AS DocumentBalanceAmount
	FROM fin_vendor_debit_note
	WHERE
		DATE(fin_vendor_debit_note.TransactionDate) BETWEEN DATE('",prmFirstdate,"') AND DATE('",prmLastdate,"')
		AND fin_vendor_debit_note.code LIKE '",prmDocumentNo,"'
		AND fin_vendor_debit_note.RefNo LIKE '",prmDocumentRefNo,"'
	ORDER BY fin_vendor_debit_note.TransactionDate
	");
	SET @queryFIX = CONCAT(@inQuery, @limit_sp);
	PREPARE STMT FROM @queryFIX;
	EXECUTE STMT;
	DEALLOCATE PREPARE STMT;
	
ELSEIF prmTransactionType = 'VCN' THEN	
	SET @inQuery = CONCAT(
	"
	SELECT
		'VCN' AS transactionType,
		fin_vendor_credit_note.BranchCode,
		fin_vendor_credit_note.code AS DocumentNo,
		fin_vendor_credit_note.RefNo AS DocumentRefNo,
		fin_vendor_credit_note.TransactionDate AS DocumentTransactionDate,
		'' AS DocumentCustomerVendorCode,
		'' AS DocumentCustomerVendorName,
		fin_vendor_credit_note.CurrencyCode AS DocumentCurrencyCode,
		fin_vendor_credit_note.ExchangeRate AS DocumentExchangeRate,
		fin_vendor_credit_note.TotalTransactionAmount AS DocumentTotalTransactionAmount,
		0  AS DocumentDownPaymentAmount,
		fin_vendor_credit_note.TotalTransactionAmount AS DocumentNettAmount,
		fin_vendor_credit_note.PaidAmount AS DocumentPaidAmount,
		fin_vendor_credit_note.TotalTransactionAmount - fin_vendor_credit_note.PaidAmount AS DocumentBalanceAmount
	FROM fin_vendor_credit_note
	WHERE
		DATE(fin_vendor_credit_note.TransactionDate) BETWEEN DATE('",prmFirstdate,"') AND DATE('",prmLastdate,"')
		AND fin_vendor_credit_note.code LIKE '",prmDocumentNo,"'
		AND fin_vendor_credit_note.RefNo LIKE '",prmDocumentRefNo,"'
	ORDER BY fin_vendor_credit_note.TransactionDate
	");
	SET @queryFIX = CONCAT(@inQuery, @limit_sp);
	PREPARE STMT FROM @queryFIX;
	EXECUTE STMT;
	DEALLOCATE PREPARE STMT;
	
ELSEIF prmTransactionType = 'VIN' THEN	
	SET @inQuery = CONCAT(
	"
	SELECT
		'VIN' AS transactionType,
		fin_vendor_invoice.BranchCode,
		fin_vendor_invoice.code AS DocumentNo,
		fin_vendor_invoice.RefNo AS DocumentRefNo,
		fin_vendor_invoice.TransactionDate AS DocumentTransactionDate,
		fin_vendor_invoice.VendorCode AS DocumentCustomerVendorCode,
		mst_vendor.Name AS DocumentCustomerVendorName,
		fin_vendor_invoice.CurrencyCode AS DocumentCurrencyCode,
		fin_vendor_invoice.ExchangeRate AS DocumentExchangeRate,
		fin_vendor_invoice.TotalTransactionAmount AS DocumentTotalTransactionAmount,
		0  AS DocumentDownPaymentAmount,
		fin_vendor_invoice.TotalTransactionAmount AS DocumentNettAmount,
		fin_vendor_invoice.PaidAmount AS DocumentPaidAmount,
		fin_vendor_invoice.TotalTransactionAmount - fin_vendor_invoice.PaidAmount AS DocumentBalanceAmount
	FROM fin_vendor_invoice
	INNER JOIN mst_vendor ON fin_vendor_invoice.VendorCode=mst_vendor.Code
	WHERE
		DATE(fin_vendor_invoice.TransactionDate) BETWEEN DATE('",prmFirstdate,"') AND DATE('",prmLastdate,"')
		AND fin_vendor_invoice.code LIKE '",prmDocumentNo,"'
		AND fin_vendor_invoice.RefNo LIKE '",prmDocumentRefNo,"'
		AND fin_vendor_invoice.VendorCode LIKE '",prmDocumentCustomerVendorCode,"'
		AND mst_vendor.Name LIKE '",prmDocumentCustomerVendorName,"'
	ORDER BY fin_vendor_invoice.TransactionDate
	");
	SET @queryFIX = CONCAT(@inQuery, @limit_sp);
	PREPARE STMT FROM @queryFIX;
	EXECUTE STMT;
	DEALLOCATE PREPARE STMT;
		
END IF;			
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_Finance_PaymentHistoryHeader_Get_Count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_Finance_PaymentHistoryHeader_Get_Count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_Finance_PaymentHistoryHeader_Get_Count`(
IN prmTransactionType VARCHAR(50),
IN prmFirstdate DATETIME,
IN prmLastdate DATETIME,
IN prmDocumentNo VARCHAR(50),
IN prmDocumentRefNo VARCHAR(50),
IN prmDocumentCustomerVendorCode VARCHAR(50),
IN prmDocumentCustomerVendorName VARCHAR(50)
)
BEGIN
		
IF prmTransactionType = 'INV' THEN
	SELECT
		COUNT(*)
	FROM fin_customer_invoice
		INNER JOIN mst_customer ON fin_customer_invoice.CustomerCode = mst_customer.Code
	WHERE
		DATE(fin_customer_invoice.TransactionDate) BETWEEN DATE(prmFirstdate) AND DATE(prmLastdate)
		AND fin_customer_invoice.code LIKE prmDocumentNo
		AND fin_customer_invoice.RefNo LIKE prmDocumentRefNo
		AND fin_customer_invoice.CustomerCode LIKE prmDocumentCustomerVendorCode
		AND mst_customer.Name LIKE prmDocumentCustomerVendorName;
		
ELSEIF prmTransactionType = 'CDN' THEN
	SELECT
		COUNT(*)
	FROM fin_customer_debit_note
		INNER JOIN mst_customer ON fin_customer_debit_note.CustomerCode = mst_customer.Code
	WHERE
		DATE(fin_customer_debit_note.TransactionDate) BETWEEN DATE(prmFirstdate) AND DATE(prmLastdate)
		AND fin_customer_debit_note.Code LIKE prmDocumentNo
		AND fin_customer_debit_note.RefNo LIKE prmDocumentRefNo
		AND fin_customer_debit_note.CustomerCode LIKE prmDocumentCustomerVendorCode
		AND mst_customer.Name LIKE prmDocumentCustomerVendorName;
	
ELSEIF prmTransactionType = 'CCN' THEN
	SELECT
		COUNT(*)
	FROM fin_customer_credit_note
		INNER JOIN mst_customer ON fin_customer_credit_note.CustomerCode = mst_customer.Code
	WHERE
		DATE(fin_customer_credit_note.TransactionDate) BETWEEN DATE(prmFirstdate) AND DATE(prmLastdate)
		AND fin_customer_credit_note.Code LIKE prmDocumentNo
		AND fin_customer_credit_note.RefNo LIKE prmDocumentRefNo
		AND fin_customer_credit_note.CustomerCode LIKE prmDocumentCustomerVendorCode
		AND mst_customer.Name LIKE prmDocumentCustomerVendorName;
		
ELSEIF prmTransactionType = 'VDN' THEN	
	SELECT
		COUNT(*)
	FROM fin_vendor_debit_note
		INNER JOIN mst_vendor ON fin_vendor_debit_note.VendorCode = mst_vendor.Code
	WHERE
		DATE(fin_vendor_debit_note.TransactionDate) BETWEEN DATE(prmFirstdate) AND DATE(prmLastdate)
		AND fin_vendor_debit_note.Code LIKE prmDocumentNo
		AND fin_vendor_debit_note.RefNo LIKE prmDocumentRefNo
		AND fin_vendor_debit_note.VendorCode LIKE prmDocumentCustomerVendorCode
		AND mst_vendor.Name LIKE prmDocumentCustomerVendorName;	
		
ELSEIF prmTransactionType = 'VCN' THEN	
	SELECT
		COUNT(*)
	FROM fin_vendor_credit_note
		INNER JOIN mst_vendor ON fin_vendor_credit_note.VendorCode = mst_vendor.Code
	WHERE
		DATE(fin_vendor_credit_note.TransactionDate) BETWEEN DATE(prmFirstdate) AND DATE(prmLastdate)
		AND fin_vendor_credit_note.Code LIKE prmDocumentNo
		AND fin_vendor_credit_note.RefNo LIKE prmDocumentRefNo
		AND fin_vendor_credit_note.VendorCode LIKE prmDocumentCustomerVendorCode
		AND mst_vendor.Name LIKE prmDocumentCustomerVendorName;	
ELSEIF prmTransactionType = 'VIN' THEN	
	SELECT
		COUNT(*)
	FROM fin_vendor_invoice
		INNER JOIN mst_vendor ON fin_vendor_invoice.VendorCode = mst_vendor.Code
	WHERE
		DATE(fin_vendor_invoice.TransactionDate) BETWEEN DATE(prmFirstdate) AND DATE(prmLastdate)
		AND fin_vendor_invoice.Code LIKE prmDocumentNo
		AND fin_vendor_invoice.RefNo LIKE prmDocumentRefNo
		AND fin_vendor_invoice.VendorCode LIKE prmDocumentCustomerVendorCode
		AND mst_vendor.Name LIKE prmDocumentCustomerVendorName;	
				
END IF;				
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_Finance_Recalculating_Empty_DocumentPaidAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_Finance_Recalculating_Empty_DocumentPaidAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_Finance_Recalculating_Empty_DocumentPaidAmount`()
BEGIN	
	-- CCN
	UPDATE fin_customer_credit_note SET
		fin_customer_credit_note.SettlementDocumentNo = '',
		fin_customer_credit_note.SettlementDate = '1900-01-01',
		fin_customer_credit_note.PaidAmount = 0;
	-- CDN
	UPDATE fin_customer_debit_note SET
		fin_customer_debit_note.SettlementDocumentNo = '',
		fin_customer_debit_note.SettlementDate = '1900-01-01',
		fin_customer_debit_note.PaidAmount = 0;
	-- CDP-BBM
	UPDATE fin_bank_received_deposit SET
		fin_bank_received_deposit.SettlementDocumentNo = '',
		fin_bank_received_deposit.SettlementDate = '1900-01-01',
		fin_bank_received_deposit.PaidAmount = 0;
	-- CDP-BKM
	UPDATE fin_cash_received_deposit SET
		fin_cash_received_deposit.SettlementDocumentNo = '',
		fin_cash_received_deposit.SettlementDate = '1900-01-01',
		fin_cash_received_deposit.PaidAmount = 0;
	
	-- CDP-P
	UPDATE fin_customer_down_payment_paid SET
		fin_customer_down_payment_paid.PaidAmount = 0;
	
	-- CIN
	UPDATE fin_customer_invoice SET
		fin_customer_invoice.SettlementDocumentNo = '',
		fin_customer_invoice.SettlementDate = '1900-01-01',
		fin_customer_invoice.PaidAmount = 0;
	-- VCN
	UPDATE fin_vendor_credit_note SET
		fin_vendor_credit_note.SettlementDocumentNo = '',
		fin_vendor_credit_note.SettlementDate = '1900-01-01',
		fin_vendor_credit_note.PaidAmount = 0;
	-- VDN
	UPDATE fin_vendor_debit_note SET
		fin_vendor_debit_note.SettlementDocumentNo = '',
		fin_vendor_debit_note.SettlementDate = '1900-01-01',
		fin_vendor_debit_note.PaidAmount = 0;
		
	-- VDP-BKK
	UPDATE fin_cash_payment_deposit SET
		fin_cash_payment_deposit.SettlementDocumentNo = '',
		fin_cash_payment_deposit.SettlementDate = '1900-01-01',
		fin_cash_payment_deposit.PaidAmount = 0;
	-- VDP-BBK
	UPDATE fin_bank_payment_deposit SET
		fin_bank_payment_deposit.SettlementDocumentNo = '',
		fin_bank_payment_deposit.SettlementDate = '1900-01-01',
		fin_bank_payment_deposit.PaidAmount = 0;		
		
	-- VDP-P
	UPDATE fin_vendor_down_payment_paid SET
		fin_vendor_down_payment_paid.PaidAmount = 0;
	
	-- VIN
	UPDATE fin_vendor_invoice SET
		fin_vendor_invoice.SettlementDocumentNo = '',
		fin_vendor_invoice.SettlementDate = '1900-01-01',
		fin_vendor_invoice.PaidAmount = 0;
	
				
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_Finance_Recalculating_New_SummaryAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_Finance_Recalculating_New_SummaryAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_Finance_Recalculating_New_SummaryAmount`()
BEGIN
	DECLARE prmDefaultCurrency VARCHAR(50); 
	SELECT CurrencyCode INTO prmDefaultCurrency FROM sys_setup; 
	DROP  TABLE IF EXISTS NRF_;
	CREATE  TABLE NRF_ (
		VoucherNo VARCHAR(50) NOT NULL DEFAULT '',
		VoucherDate DATETIME NOT NULL DEFAULT '1900-01-01',
		DocumentType VARCHAR(20) NOT NULL DEFAULT '',
		BranchCode VARCHAR(50) NOT NULL DEFAULT '',
		DocumentNo VARCHAR(50) NOT NULL DEFAULT '',
		Amount DECIMAL(18,4) NOT NULL DEFAULT '0.0000'
	)ENGINE=MYISAM;
	INSERT INTO NRF_ (VoucherNo, VoucherDate, DocumentType, BranchCode, DocumentNo, Amount)
	SELECT 
		MAX(qry1.VoucherNo),
		MAX(qry1.VoucherDate),
		qry1.DocumentType, 
		qry1.BranchCode, 
		qry1.DocumentNo, 
		ABS(SUM((qry1.Amount))) AS Amount
	FROM
	(
		SELECT
			fin_cash_received.TransactionDate AS VoucherDate,
			fin_cash_received.code AS VoucherNo,
			fin_cash_received_detail.DocumentType,
			fin_cash_received_detail.DocumentBranchCode AS BranchCode,
			fin_cash_received_detail.DocumentNo,
			CASE WHEN fin_cash_received_detail.CurrencyCode = 'IDR' THEN
				ABS(fin_cash_received_detail.DebitIDR - fin_cash_received_detail.CreditIDR)
			ELSE
				ABS(fin_cash_received_detail.Debit - fin_cash_received_detail.Credit)
			END AS Amount
		FROM fin_cash_received_detail
		INNER JOIN fin_cash_received ON fin_cash_received_detail.headerCode = fin_cash_received.code
			
		UNION ALL
		SELECT
			fin_bank_received.TransactionDate AS VoucherDate,
			fin_bank_received.code AS VoucherNo,
			fin_bank_received_detail.DocumentType,
			fin_bank_received_detail.DocumentBranchCode AS BranchCode,
			fin_bank_received_detail.DocumentNo,
			CASE WHEN fin_bank_received_detail.CurrencyCode = 'IDR' THEN
				ABS(fin_bank_received_detail.DebitIDR - fin_bank_received_detail.CreditIDR)
			ELSE
				ABS(fin_bank_received_detail.Debit - fin_bank_received_detail.Credit)
			END AS Amount
		FROM fin_bank_received_detail
		INNER JOIN fin_bank_received ON fin_bank_received_detail.headerCode = fin_bank_received.code
			
		UNION ALL
		SELECT
			fin_cash_payment.TransactionDate AS VoucherDate,
			fin_cash_payment.code AS VoucherNo,
			fin_cash_payment_detail.DocumentType,
			fin_cash_payment_detail.DocumentBranchCode AS BranchCode,
			fin_cash_payment_detail.DocumentNo,
			CASE WHEN fin_cash_payment_detail.CurrencyCode = 'IDR' THEN
				ABS(fin_cash_payment_detail.DebitIDR - fin_cash_payment_detail.CreditIDR)
			ELSE
				ABS(fin_cash_payment_detail.Debit - fin_cash_payment_detail.Credit)
			END AS Amount
		FROM fin_cash_payment_detail
		INNER JOIN fin_cash_payment ON fin_cash_payment_detail.headerCode = fin_cash_payment.code
			
		UNION ALL
		SELECT
			fin_bank_payment.TransactionDate AS VoucherDate,
			fin_bank_payment.code AS VoucherNo,
			fin_bank_payment_detail.DocumentType,
			fin_bank_payment_detail.DocumentBranchCode AS BranchCode,
			fin_bank_payment_detail.DocumentNo,
			CASE WHEN fin_bank_payment_detail.CurrencyCode = 'IDR' THEN
				ABS(fin_bank_payment_detail.DebitIDR - fin_bank_payment_detail.CreditIDR)
			ELSE
				ABS(fin_bank_payment_detail.Debit - fin_bank_payment_detail.Credit)
			END AS Amount
		FROM fin_bank_payment_detail
		INNER JOIN fin_bank_payment ON fin_bank_payment_detail.headerCode = fin_bank_payment.code
		
		UNION ALL
		SELECT
			fin_general_journal.TransactionDate AS VoucherDate,
			fin_general_journal.code AS VoucherNo,
			fin_general_journal_detail.DocumentType,
			fin_general_journal_detail.DocumentBranchCode AS BranchCode,
			fin_general_journal_detail.DocumentNo,
			CASE WHEN fin_general_journal_detail.CurrencyCode = 'IDR' THEN
				ABS(fin_general_journal_detail.DebitIDR - fin_general_journal_detail.CreditIDR)
			ELSE
				ABS(fin_general_journal_detail.Debit - fin_general_journal_detail.Credit)
			END AS Amount
		FROM fin_general_journal_detail
		INNER JOIN fin_general_journal ON fin_general_journal_detail.headerCode = fin_general_journal.code
							
	) AS qry1
	WHERE qry1.DocumentNo <> ''
	GROUP BY 
		qry1.DocumentType,
		qry1.BranchCode,
		qry1.DocumentNo; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_Finance_Recalculating_New_Update_DocumentAmount` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_Finance_Recalculating_New_Update_DocumentAmount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_Finance_Recalculating_New_Update_DocumentAmount`()
BEGIN
	-- CCN
	UPDATE fin_customer_credit_note 
	INNER JOIN NRF_ ON fin_customer_credit_note.BranchCode = NRF_.BranchCode
		AND fin_customer_credit_note.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'CCN'
	SET
		fin_customer_credit_note.PaidAmount = NRF_.Amount;
	-- CDN
	UPDATE fin_customer_debit_note 
	INNER JOIN NRF_ ON fin_customer_debit_note.BranchCode = NRF_.BranchCode
		AND fin_customer_debit_note.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'CDN'
	SET
		fin_customer_debit_note.PaidAmount = NRF_.Amount;
	
	-- CDP-BBM
	UPDATE fin_bank_received_deposit
	INNER JOIN NRF_ ON fin_bank_received_deposit.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'CDP-BBM'
	SET
		fin_bank_received_deposit.PaidAmount = NRF_.Amount;
	
	-- CDP-BKM
	UPDATE fin_cash_received_deposit
	INNER JOIN NRF_ ON fin_cash_received_deposit.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'CDP-BKM'
	SET
		fin_cash_received_deposit.PaidAmount = NRF_.Amount;
		
	-- CDP-P
	UPDATE fin_customer_down_payment_paid
	INNER JOIN NRF_ ON fin_customer_down_payment_paid.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'CDP-P'
	SET
		fin_customer_down_payment_paid.PaidAmount = NRF_.Amount;
	-- CIN
	UPDATE fin_customer_invoice
	INNER JOIN NRF_ ON fin_customer_invoice.BranchCode = NRF_.BranchCode
		AND fin_customer_invoice.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'CIN'
	SET
		fin_customer_invoice.PaidAmount = NRF_.Amount;
		
	-- VCN
	UPDATE fin_vendor_credit_note 
	INNER JOIN NRF_ ON fin_vendor_credit_note.BranchCode = NRF_.BranchCode
		AND fin_vendor_credit_note.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'VCN'
	SET
		fin_vendor_credit_note.PaidAmount = NRF_.Amount;
	-- VDN
	UPDATE fin_vendor_debit_note 
	INNER JOIN NRF_ ON fin_vendor_debit_note.BranchCode = NRF_.BranchCode
		AND fin_vendor_debit_note.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'VDN'
	SET
		fin_vendor_debit_note.PaidAmount = NRF_.Amount;
			
	-- VDP-BKK
	UPDATE fin_cash_payment_deposit
	INNER JOIN NRF_ ON fin_cash_payment_deposit.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'VDP-BKK'
	SET
		fin_cash_payment_deposit.PaidAmount = NRF_.Amount;
		
	-- VDP-BBK
	UPDATE fin_bank_payment_deposit
	INNER JOIN NRF_ ON fin_bank_payment_deposit.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'VDP-BBK'
	SET
		fin_bank_payment_deposit.PaidAmount = NRF_.Amount;
	
	-- VDP-P
	UPDATE fin_vendor_down_payment_paid
	INNER JOIN NRF_ ON fin_vendor_down_payment_paid.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'VDP-P'
	SET
		fin_vendor_down_payment_paid.PaidAmount = NRF_.Amount;	
	
	-- VIN
	UPDATE fin_vendor_invoice
	INNER JOIN NRF_ ON fin_vendor_invoice.BranchCode = NRF_.BranchCode
		AND fin_vendor_invoice.Code = NRF_.DocumentNo
		AND NRF_.DocumentType = 'VIN'
	SET
		fin_vendor_invoice.PaidAmount = NRF_.Amount;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_bank_payment_detail_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_bank_payment_detail_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_fin_bank_payment_detail_get`(
	IN prmHeaderCode VARCHAR(50)
)
BEGIN
SELECT
	fin_bank_payment_detail.code,
	fin_bank_payment_detail.headerCode,
	fin_bank_payment_detail.documentBranchCode,
	fin_bank_payment_detail.documentType,
	fin_bank_payment_detail.documentNo,
	fin_bank_payment_detail.currencyCode,
	fin_bank_payment_detail.exchangeRate,
	fin_bank_payment_detail.chartOfAccountCode,
	mst_chart_of_account.name AS chartOfAccountName,
	CASE 
	WHEN fin_bank_payment_detail.DocumentType='CCN' THEN 
		(SELECT fin_customer_credit_note.GrandTotalAmount FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_bank_payment_detail.DocumentNo)
	WHEN fin_bank_payment_detail.DocumentType='CDN' THEN 
		(SELECT fin_customer_debit_note.GrandTotalAmount FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='FCN' THEN
--		(SELECT fin_fee_receiver_credit_note.GrandTotalAmount FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='FDN' THEN
--		(SELECT fin_fee_receiver_debit_note.GrandTotalAmount FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='INV' THEN
--		(SELECT sal_invoice.GrandTotalAmount FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='INV_ITM' THEN
--		(SELECT fin_invoice_item.GrandTotalAmount FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SCN' THEN
--		(SELECT pur_supplier_credit_note.GrandTotalAmount FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDN' THEN
--		(SELECT pur_supplier_debit_note.GrandTotalAmount FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='VIN' THEN
--		(SELECT fin_supplier_invoice.GrandTotalAmount FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-U' THEN
--		(SELECT fin_customer_down_payment_used.totalTransactionAmount FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_used.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-P' THEN
--		(SELECT fin_customer_down_payment_paid.GrandTotalAmount FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_paid.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-U' THEN
--		(SELECT fin_supplier_down_payment_used.totalTransactionAmount FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_used.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-P' THEN
--		(SELECT fin_supplier_down_payment_paid.GrandTotalAmount FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_paid.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-BBK' THEN
--		(SELECT fin_bank_payment_downpayment.GrandTotalAmount FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-BKK' THEN
--		(SELECT fin_cash_payment_downpayment.GrandTotalAmount FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-BBM' THEN
--		(SELECT fin_bank_received_downpayment.GrandTotalAmount FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-BKM' THEN
--		(SELECT fin_cash_received_downpayment.GrandTotalAmount FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_bank_payment_detail.DocumentNo)
	ELSE 0
	END AS documentAmount,
	CASE 
	WHEN fin_bank_payment_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_bank_payment_detail.DocumentNo)
	WHEN fin_bank_payment_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='FCN' THEN
--		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='FDN' THEN
--		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='INV' THEN
--		(SELECT (sal_invoice.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='INV_ITM' THEN
--		(SELECT (fin_invoice_item.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SCN' THEN
--		(SELECT (pur_supplier_credit_note.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDN' THEN
--		(SELECT (pur_supplier_debit_note.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='VIN' THEN
--		(SELECT (fin_supplier_invoice.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-U' THEN
--		(SELECT (fin_customer_down_payment_used.totalTransactionAmount * fin_bank_payment_detail.exchangeRate) FROM fin_customer_down_payment_used WHERE fin_customer_down_payment_used.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-P' THEN
--		(SELECT (fin_customer_down_payment_paid.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_customer_down_payment_paid WHERE fin_customer_down_payment_paid.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-U' THEN
--		(SELECT (fin_supplier_down_payment_used.totalTransactionAmount * fin_bank_payment_detail.exchangeRate) FROM fin_supplier_down_payment_used WHERE fin_supplier_down_payment_used.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-P' THEN
--		(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_supplier_down_payment_paid WHERE fin_supplier_down_payment_paid.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-BBK' THEN
--		(SELECT (fin_bank_payment_downpayment.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-BKK' THEN
--		(SELECT (fin_cash_payment_downpayment.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_bank_payment_detail.DocumentNo)	
--	WHEN fin_bank_payment_detail.DocumentType='CDP-BBM' THEN
--		(SELECT (fin_bank_received_downpayment.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-BKM' THEN
--		(SELECT (fin_cash_received_downpayment.GrandTotalAmount * fin_bank_payment_detail.exchangeRate) FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_bank_payment_detail.DocumentNo)	
	ELSE 0
	END AS documentAmountIDR,
	CASE
	WHEN fin_bank_payment_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_bank_payment_detail.DocumentNo)
	WHEN fin_bank_payment_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='FCN' THEN
--		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='FDN' THEN
--		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='INV' THEN
--		(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='INV_ITM' THEN
--		(SELECT (fin_invoice_item.GrandTotalAmount - fin_invoice_item.PaidAmount)FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SCN' THEN
--		(SELECT (pur_supplier_credit_note.GrandTotalAmount - pur_supplier_credit_note.PaidAmount)FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDN' THEN
--		(SELECT (pur_supplier_debit_note.GrandTotalAmount - pur_supplier_debit_note.PaidAmount)FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='VIN' THEN
--		(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-U' THEN
--		(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-P' THEN
--		(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-U' THEN
--		(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_used.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-P' THEN
--		(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_paid.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-BBK' THEN
--		(SELECT (fin_bank_payment_downpayment.GrandTotalAmount - fin_bank_payment_downpayment.UsedAmount)FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-BKK' THEN
--		(SELECT (fin_cash_payment_downpayment.GrandTotalAmount - fin_cash_payment_downpayment.UsedAmount)FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-BBM' THEN
--		(SELECT (fin_bank_received_downpayment.GrandTotalAmount - fin_bank_received_downpayment.UsedAmount)FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-BKM' THEN
--		(SELECT (fin_cash_received_downpayment.GrandTotalAmount - fin_cash_received_downpayment.UsedAmount)FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_bank_payment_detail.DocumentNo)
	ELSE 0
	END AS documentBalanceAmount,
	CASE 
	WHEN fin_bank_payment_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_bank_payment_detail.DocumentNo)
	WHEN fin_bank_payment_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='FCN' THEN
--		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='FDN' THEN
--		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='INV' THEN
--		(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='INV_ITM' THEN
--		(SELECT (fin_invoice_item.GrandTotalAmount - fin_invoice_item.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SCN' THEN
--		(SELECT (pur_supplier_credit_note.GrandTotalAmount - pur_supplier_credit_note.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDN' THEN
--		(SELECT (pur_supplier_debit_note.GrandTotalAmount - pur_supplier_debit_note.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='VIN' THEN
--		(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-U' THEN
--		(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)*fin_bank_payment_detail.exchangeRate FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-P' THEN
--		(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-U' THEN
--		(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)*fin_bank_payment_detail.exchangeRate FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_used.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-P' THEN
--		(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)*fin_bank_payment_detail.exchangeRate FROM fin_supplier_down_payment_paid  INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_paid.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-BBK' THEN
--		(SELECT (fin_bank_payment_downpayment.GrandTotalAmount - fin_bank_payment_downpayment.UsedAmount)*fin_bank_payment_detail.exchangeRate FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='SDP-BKK' THEN
--		(SELECT (fin_cash_payment_downpayment.GrandTotalAmount - fin_cash_payment_downpayment.UsedAmount)*fin_bank_payment_detail.exchangeRate FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-BBM' THEN
--		(SELECT (fin_bank_received_downpayment.GrandTotalAmount - fin_bank_received_downpayment.UsedAmount)*fin_bank_payment_detail.exchangeRate FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_bank_payment_detail.DocumentNo)
--	WHEN fin_bank_payment_detail.DocumentType='CDP-BKM' THEN
--		(SELECT (fin_cash_received_downpayment.GrandTotalAmount - fin_cash_received_downpayment.UsedAmount)*fin_bank_payment_detail.exchangeRate FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_bank_payment_detail.DocumentNo)	
	ELSE 0
	END AS documentBalanceAmountIDR,
	fin_bank_payment_detail.transactionStatus,
	fin_bank_payment_detail.debit,
	fin_bank_payment_detail.debitIDR,
	fin_bank_payment_detail.credit,
	fin_bank_payment_detail.creditIDR,
	fin_bank_payment_detail.remark
FROM fin_bank_payment_detail
INNER JOIN mst_chart_of_account ON fin_bank_payment_detail.chartOfAccountCode = mst_chart_of_account.code
WHERE fin_bank_payment_detail.HeaderCode = prmHeaderCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_bank_received_detail_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_bank_received_detail_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_fin_bank_received_detail_get`(
	IN prmHeaderCode VARCHAR(50)
    )
BEGIN
	SELECT
		fin_bank_received_detail.code,
		fin_bank_received_detail.headerCode,
		fin_bank_received_detail.BranchCode,
		fin_bank_received_detail.documentBranchCode,
		fin_bank_received_detail.documentType,
		fin_bank_received_detail.documentNo,
		fin_bank_received_detail.currencyCode,
		fin_bank_received_detail.exchangeRate,
		fin_bank_received_detail.chartOfAccountCode,
		mst_chart_of_account.name AS chartOfAccountName,
		-- CASE 
-- 		WHEN fin_bank_received_detail.DocumentType='CCN' THEN 
-- 			(SELECT sal_customer_credit_note.GrandTotalAmount FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDN' THEN 
-- 			(SELECT sal_customer_debit_note.GrandTotalAmount FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='FCN' THEN
-- 			(SELECT fin_fee_receiver_credit_note.GrandTotalAmount FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='FDN' THEN
-- 			(SELECT fin_fee_receiver_debit_note.GrandTotalAmount FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='INV' THEN
-- 			(SELECT sal_invoice.GrandTotalAmount FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT fin_invoice_item.GrandTotalAmount FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SCN' THEN
-- 			(SELECT pur_supplier_credit_note.GrandTotalAmount FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDN' THEN
-- 			(SELECT pur_supplier_debit_note.GrandTotalAmount FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='VIN' THEN
-- 			(SELECT fin_supplier_invoice.GrandTotalAmount FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-U' THEN
-- 			(SELECT fin_customer_down_payment_used.totalTransactionAmount FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_used.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-P' THEN
-- 			(SELECT fin_customer_down_payment_paid.GrandTotalAmount FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_paid.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-U' THEN
-- 			(SELECT fin_supplier_down_payment_used.totalTransactionAmount FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_used.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-P' THEN
-- 			(SELECT fin_supplier_down_payment_paid.GrandTotalAmount FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_paid.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT fin_bank_payment_downpayment.GrandTotalAmount FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT fin_cash_payment_downpayment.GrandTotalAmount FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT fin_bank_received_downpayment.GrandTotalAmount FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT fin_cash_received_downpayment.GrandTotalAmount FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		ELSE 0
-- 		END AS documentAmount,
		0 AS documentAmount,
		-- CASE 
-- 		WHEN fin_bank_received_detail.DocumentType='CCN' THEN 
-- 			(SELECT (sal_customer_credit_note.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDN' THEN 
-- 			(SELECT (sal_customer_debit_note.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='FCN' THEN
-- 			(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='FDN' THEN
-- 			(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='INV' THEN
-- 			(SELECT (sal_invoice.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT (fin_invoice_item.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SCN' THEN
-- 			(SELECT (pur_supplier_credit_note.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDN' THEN
-- 			(SELECT (pur_supplier_debit_note.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='VIN' THEN
-- 			(SELECT (fin_supplier_invoice.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-U' THEN
-- 			(SELECT (fin_customer_down_payment_used.totalTransactionAmount * fin_bank_received_detail.exchangeRate) FROM fin_customer_down_payment_used WHERE fin_customer_down_payment_used.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-P' THEN
-- 			(SELECT (fin_customer_down_payment_paid.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_customer_down_payment_paid WHERE fin_customer_down_payment_paid.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-U' THEN
-- 			(SELECT (fin_supplier_down_payment_used.totalTransactionAmount * fin_bank_received_detail.exchangeRate) FROM fin_supplier_down_payment_used WHERE fin_supplier_down_payment_used.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-P' THEN
-- 			(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_supplier_down_payment_paid WHERE fin_supplier_down_payment_paid.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT (fin_bank_payment_downpayment.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT (fin_cash_payment_downpayment.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_bank_received_detail.DocumentNo)	
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT (fin_bank_received_downpayment.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT (fin_cash_received_downpayment.GrandTotalAmount * fin_bank_received_detail.exchangeRate) FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_bank_received_detail.DocumentNo)	
-- 		ELSE 0
-- 		END AS documentAmountIDR,
		0 AS documentAmountIDR,
		-- CASE
-- 		WHEN fin_bank_received_detail.DocumentType='CCN' THEN 
-- 			(SELECT (sal_customer_credit_note.GrandTotalAmount - sal_customer_credit_note.PaidAmount)FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDN' THEN 
-- 			(SELECT (sal_customer_debit_note.GrandTotalAmount - sal_customer_debit_note.PaidAmount)FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='FCN' THEN
-- 			(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='FDN' THEN
-- 			(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='INV' THEN
-- 			(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT (fin_invoice_item.GrandTotalAmount - fin_invoice_item.PaidAmount)FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SCN' THEN
-- 			(SELECT (pur_supplier_credit_note.GrandTotalAmount - pur_supplier_credit_note.PaidAmount)FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDN' THEN
-- 			(SELECT (pur_supplier_debit_note.GrandTotalAmount - pur_supplier_debit_note.PaidAmount)FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='VIN' THEN
-- 			(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-U' THEN
-- 			(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-P' THEN
-- 			(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-U' THEN
-- 			(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_used.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-P' THEN
-- 			(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_paid.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT (fin_bank_payment_downpayment.GrandTotalAmount - fin_bank_payment_downpayment.UsedAmount)FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT (fin_cash_payment_downpayment.GrandTotalAmount - fin_cash_payment_downpayment.UsedAmount)FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT (fin_bank_received_downpayment.GrandTotalAmount - fin_bank_received_downpayment.UsedAmount)FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT (fin_cash_received_downpayment.GrandTotalAmount - fin_cash_received_downpayment.UsedAmount)FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		ELSE 0
-- 		END AS documentBalanceAmount,
		0 AS documentBalanceAmount,
		-- CASE 
-- 		WHEN fin_bank_received_detail.DocumentType='CCN' THEN 
-- 			(SELECT (sal_customer_credit_note.GrandTotalAmount - sal_customer_credit_note.PaidAmount)*fin_bank_received_detail.exchangeRate FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDN' THEN 
-- 			(SELECT (sal_customer_debit_note.GrandTotalAmount - sal_customer_debit_note.PaidAmount)*fin_bank_received_detail.exchangeRate FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='FCN' THEN
-- 			(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)*fin_bank_received_detail.exchangeRate FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='FDN' THEN
-- 			(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)*fin_bank_received_detail.exchangeRate FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='INV' THEN
-- 			(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)*fin_bank_received_detail.exchangeRate FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT (fin_invoice_item.GrandTotalAmount - fin_invoice_item.PaidAmount)*fin_bank_received_detail.exchangeRate FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SCN' THEN
-- 			(SELECT (pur_supplier_credit_note.GrandTotalAmount - pur_supplier_credit_note.PaidAmount)*fin_bank_received_detail.exchangeRate FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDN' THEN
-- 			(SELECT (pur_supplier_debit_note.GrandTotalAmount - pur_supplier_debit_note.PaidAmount)*fin_bank_received_detail.exchangeRate FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='VIN' THEN
-- 			(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)*fin_bank_received_detail.exchangeRate FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-U' THEN
-- 			(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)*fin_bank_received_detail.exchangeRate FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-P' THEN
-- 			(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)*fin_bank_received_detail.exchangeRate FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-U' THEN
-- 			(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)*fin_bank_received_detail.exchangeRate FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_used.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-P' THEN
-- 			(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)*fin_bank_received_detail.exchangeRate FROM fin_supplier_down_payment_paid  INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_paid.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT (fin_bank_payment_downpayment.GrandTotalAmount - fin_bank_payment_downpayment.UsedAmount)*fin_bank_received_detail.exchangeRate FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT (fin_cash_payment_downpayment.GrandTotalAmount - fin_cash_payment_downpayment.UsedAmount)*fin_bank_received_detail.exchangeRate FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT (fin_bank_received_downpayment.GrandTotalAmount - fin_bank_received_downpayment.UsedAmount)*fin_bank_received_detail.exchangeRate FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_bank_received_detail.DocumentNo)
-- 		WHEN fin_bank_received_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT (fin_cash_received_downpayment.GrandTotalAmount - fin_cash_received_downpayment.UsedAmount)*fin_bank_received_detail.exchangeRate FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_bank_received_detail.DocumentNo)	
-- 		ELSE 0
-- 		END AS documentBalanceAmountIDR,
		0 AS documentBalanceAmountIDR,
		fin_bank_received_detail.transactionStatus,
		fin_bank_received_detail.debit,
		fin_bank_received_detail.debitIDR,
		fin_bank_received_detail.credit,
		fin_bank_received_detail.creditIDR,
		fin_bank_received_detail.remark
	FROM fin_bank_received_detail
	INNER JOIN mst_chart_of_account ON fin_bank_received_detail.chartOfAccountCode = mst_chart_of_account.code
	WHERE fin_bank_received_detail.HeaderCode = prmHeaderCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_cash_payment_detail_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_cash_payment_detail_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_fin_cash_payment_detail_get`(
	IN prmHeaderCode VARCHAR(50)
)
BEGIN
SELECT
	fin_cash_payment_detail.code,
	fin_cash_payment_detail.PaymentRequestCode,
	fin_cash_payment_detail.headerCode,
	fin_cash_payment_detail.documentBranchCode,
	fin_cash_payment_detail.documentType,
	fin_cash_payment_detail.documentNo,
	fin_cash_payment_detail.currencyCode,
	fin_cash_payment_detail.exchangeRate,
	fin_cash_payment_detail.chartOfAccountCode,
	mst_chart_of_account.name AS chartOfAccountName,
	CASE 
	WHEN fin_cash_payment_detail.DocumentType='CCN' THEN 
		(SELECT fin_customer_credit_note.GrandTotalAmount FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_cash_payment_detail.DocumentNo)
	WHEN fin_cash_payment_detail.DocumentType='CDN' THEN 
		(SELECT fin_customer_debit_note.GrandTotalAmount FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='FCN' THEN
--		(SELECT fin_fee_receiver_credit_note.GrandTotalAmount FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='FDN' THEN
--		(SELECT fin_fee_receiver_debit_note.GrandTotalAmount FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='INV' THEN
--		(SELECT sal_invoice.GrandTotalAmount FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='INV_ITM' THEN
--		(SELECT fin_invoice_item.GrandTotalAmount FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SCN' THEN
--		(SELECT pur_supplier_credit_note.GrandTotalAmount FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDN' THEN
--		(SELECT pur_supplier_debit_note.GrandTotalAmount FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='VIN' THEN
--		(SELECT fin_supplier_invoice.GrandTotalAmount FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-U' THEN
--		(SELECT fin_customer_down_payment_used.totalTransactionAmount FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_used.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-P' THEN
--		(SELECT fin_customer_down_payment_paid.GrandTotalAmount FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_paid.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-U' THEN
--		(SELECT fin_supplier_down_payment_used.totalTransactionAmount FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_used.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-P' THEN
--		(SELECT fin_supplier_down_payment_paid.GrandTotalAmount FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_paid.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-BBK' THEN
--		(SELECT fin_bank_payment_downpayment.GrandTotalAmount FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-BKK' THEN
--		(SELECT fin_cash_payment_downpayment.GrandTotalAmount FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-BBM' THEN
--		(SELECT fin_bank_received_downpayment.GrandTotalAmount FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-BKM' THEN
--		(SELECT fin_cash_received_downpayment.GrandTotalAmount FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_cash_payment_detail.DocumentNo)
	ELSE 0
	END AS documentAmount,
	CASE 
	WHEN fin_cash_payment_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_cash_payment_detail.DocumentNo)
	WHEN fin_cash_payment_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='FCN' THEN
--		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='FDN' THEN
--		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='INV' THEN
--		(SELECT (sal_invoice.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='INV_ITM' THEN
--		(SELECT (fin_invoice_item.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SCN' THEN
--		(SELECT (pur_supplier_credit_note.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDN' THEN
--		(SELECT (pur_supplier_debit_note.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='VIN' THEN
--		(SELECT (fin_supplier_invoice.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-U' THEN
--		(SELECT (fin_customer_down_payment_used.totalTransactionAmount * fin_cash_payment_detail.exchangeRate) FROM fin_customer_down_payment_used WHERE fin_customer_down_payment_used.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-P' THEN
--		(SELECT (fin_customer_down_payment_paid.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_customer_down_payment_paid WHERE fin_customer_down_payment_paid.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-U' THEN
--		(SELECT (fin_supplier_down_payment_used.totalTransactionAmount * fin_cash_payment_detail.exchangeRate) FROM fin_supplier_down_payment_used WHERE fin_supplier_down_payment_used.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-P' THEN
--		(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_supplier_down_payment_paid WHERE fin_supplier_down_payment_paid.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-BBK' THEN
--		(SELECT (fin_bank_payment_downpayment.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-BKK' THEN
--		(SELECT (fin_cash_payment_downpayment.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_cash_payment_detail.DocumentNo)	
--	WHEN fin_cash_payment_detail.DocumentType='CDP-BBM' THEN
--		(SELECT (fin_bank_received_downpayment.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-BKM' THEN
--		(SELECT (fin_cash_received_downpayment.GrandTotalAmount * fin_cash_payment_detail.exchangeRate) FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_cash_payment_detail.DocumentNo)	
	ELSE 0
	END AS documentAmountIDR,
	CASE
	WHEN fin_cash_payment_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_cash_payment_detail.DocumentNo)
	WHEN fin_cash_payment_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='FCN' THEN
--		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='FDN' THEN
--		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='INV' THEN
--		(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='INV_ITM' THEN
--		(SELECT (fin_invoice_item.GrandTotalAmount - fin_invoice_item.PaidAmount)FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SCN' THEN
--		(SELECT (pur_supplier_credit_note.GrandTotalAmount - pur_supplier_credit_note.PaidAmount)FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDN' THEN
--		(SELECT (pur_supplier_debit_note.GrandTotalAmount - pur_supplier_debit_note.PaidAmount)FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='VIN' THEN
--		(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-U' THEN
--		(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-P' THEN
--		(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-U' THEN
--		(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_used.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-P' THEN
--		(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_paid.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-BBK' THEN
--		(SELECT (fin_bank_payment_downpayment.GrandTotalAmount - fin_bank_payment_downpayment.UsedAmount)FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-BKK' THEN
--		(SELECT (fin_cash_payment_downpayment.GrandTotalAmount - fin_cash_payment_downpayment.UsedAmount)FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-BBM' THEN
--		(SELECT (fin_bank_received_downpayment.GrandTotalAmount - fin_bank_received_downpayment.UsedAmount)FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-BKM' THEN
--		(SELECT (fin_cash_received_downpayment.GrandTotalAmount - fin_cash_received_downpayment.UsedAmount)FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_cash_payment_detail.DocumentNo)
	ELSE 0
	END AS documentBalanceAmount,
	CASE 
	WHEN fin_cash_payment_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_cash_payment_detail.DocumentNo)
	WHEN fin_cash_payment_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='FCN' THEN
--		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='FDN' THEN
--		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='INV' THEN
--		(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='INV_ITM' THEN
--		(SELECT (fin_invoice_item.GrandTotalAmount - fin_invoice_item.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SCN' THEN
--		(SELECT (pur_supplier_credit_note.GrandTotalAmount - pur_supplier_credit_note.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDN' THEN
--		(SELECT (pur_supplier_debit_note.GrandTotalAmount - pur_supplier_debit_note.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='VIN' THEN
--		(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-U' THEN
--		(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)*fin_cash_payment_detail.exchangeRate FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-P' THEN
--		(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-U' THEN
--		(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)*fin_cash_payment_detail.exchangeRate FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_used.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-P' THEN
--		(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)*fin_cash_payment_detail.exchangeRate FROM fin_supplier_down_payment_paid  INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_paid.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-BBK' THEN
--		(SELECT (fin_bank_payment_downpayment.GrandTotalAmount - fin_bank_payment_downpayment.UsedAmount)*fin_cash_payment_detail.exchangeRate FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='SDP-BKK' THEN
--		(SELECT (fin_cash_payment_downpayment.GrandTotalAmount - fin_cash_payment_downpayment.UsedAmount)*fin_cash_payment_detail.exchangeRate FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-BBM' THEN
--		(SELECT (fin_bank_received_downpayment.GrandTotalAmount - fin_bank_received_downpayment.UsedAmount)*fin_cash_payment_detail.exchangeRate FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_cash_payment_detail.DocumentNo)
--	WHEN fin_cash_payment_detail.DocumentType='CDP-BKM' THEN
--		(SELECT (fin_cash_received_downpayment.GrandTotalAmount - fin_cash_received_downpayment.UsedAmount)*fin_cash_payment_detail.exchangeRate FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_cash_payment_detail.DocumentNo)	
	ELSE 0
	END AS documentBalanceAmountIDR,
	fin_cash_payment_detail.transactionStatus,
	fin_cash_payment_detail.debit,
	fin_cash_payment_detail.debitIDR,
	fin_cash_payment_detail.credit,
	fin_cash_payment_detail.creditIDR,
	fin_cash_payment_detail.remark
FROM fin_cash_payment_detail
INNER JOIN mst_chart_of_account ON fin_cash_payment_detail.chartOfAccountCode = mst_chart_of_account.code
WHERE fin_cash_payment_detail.HeaderCode = prmHeaderCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_cash_received_detail_get` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_cash_received_detail_get` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_fin_cash_received_detail_get`(
	IN prmHeaderCode VARCHAR(50)
    )
BEGIN
	SELECT
		fin_cash_received_detail.code,
		fin_cash_received_detail.headerCode,
		fin_cash_received_detail.`BranchCode`,
		fin_cash_received_detail.documentBranchCode,
		fin_cash_received_detail.documentType,
		fin_cash_received_detail.documentNo,
		fin_cash_received_detail.currencyCode,
		fin_cash_received_detail.exchangeRate,
		fin_cash_received_detail.chartOfAccountCode,
		mst_chart_of_account.name AS chartOfAccountName,
		-- CASE
-- 		WHEN fin_cash_received_detail.DocumentType='CCN' THEN 
-- 			(SELECT sal_customer_credit_note.GrandTotalAmount FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDN' THEN 
-- 			(SELECT sal_customer_debit_note.GrandTotalAmount FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='FCN' THEN
-- 			(SELECT fin_fee_receiver_credit_note.GrandTotalAmount FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='FDN' THEN
-- 			(SELECT fin_fee_receiver_debit_note.GrandTotalAmount FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='INV' THEN
-- 			(SELECT sal_invoice.GrandTotalAmount FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT fin_invoice_item.GrandTotalAmount FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SCN' THEN
-- 			(SELECT pur_supplier_credit_note.GrandTotalAmount FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDN' THEN
-- 			(SELECT pur_supplier_debit_note.GrandTotalAmount FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='VIN' THEN
-- 			(SELECT fin_supplier_invoice.GrandTotalAmount FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-U' THEN
-- 			(SELECT fin_customer_down_payment_used.totalTransactionAmount FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_used.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-P' THEN
-- 			(SELECT fin_customer_down_payment_paid.GrandTotalAmount FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_paid.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-U' THEN
-- 			(SELECT fin_supplier_down_payment_used.totalTransactionAmount FROM fin_supplier_down_payment_used  WHERE fin_supplier_down_payment_used.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-P' THEN
-- 			(SELECT fin_supplier_down_payment_paid.GrandTotalAmount FROM fin_supplier_down_payment_paid  WHERE fin_supplier_down_payment_paid.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT fin_bank_payment_downpayment.GrandTotalAmount FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT fin_cash_payment_downpayment.GrandTotalAmount FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT fin_bank_received_downpayment.GrandTotalAmount FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT fin_cash_received_downpayment.GrandTotalAmount FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		ELSE 0
-- 		END AS documentAmount,
		0 AS documentAmount,
		-- CASE 
-- 		WHEN fin_cash_received_detail.DocumentType='CCN' THEN 
-- 			(SELECT (sal_customer_credit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDN' THEN 
-- 			(SELECT (sal_customer_debit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='FCN' THEN
-- 			(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='FDN' THEN
-- 			(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='INV' THEN
-- 			(SELECT (sal_invoice.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT (fin_invoice_item.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SCN' THEN
-- 			(SELECT (pur_supplier_credit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDN' THEN
-- 			(SELECT (pur_supplier_debit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='VIN' THEN
-- 			(SELECT (fin_supplier_invoice.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-U' THEN
-- 			(SELECT (fin_customer_down_payment_used.totalTransactionAmount * fin_cash_received_detail.exchangeRate) FROM fin_customer_down_payment_used WHERE fin_customer_down_payment_used.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-P' THEN
-- 			(SELECT (fin_customer_down_payment_paid.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_customer_down_payment_paid WHERE fin_customer_down_payment_paid.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-U' THEN
-- 			(SELECT (fin_supplier_down_payment_used.totalTransactionAmount * fin_cash_received_detail.exchangeRate) FROM fin_supplier_down_payment_used WHERE fin_supplier_down_payment_used.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-P' THEN
-- 			(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_supplier_down_payment_paid WHERE fin_supplier_down_payment_paid.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT (fin_bank_payment_downpayment.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT (fin_cash_payment_downpayment.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_cash_received_detail.DocumentNo)	
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT (fin_bank_received_downpayment.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT (fin_cash_received_downpayment.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_cash_received_detail.DocumentNo)	
-- 		ELSE 0
-- 		END AS documentAmountIDR,
		0 AS documentAmountIDR,
		-- CASE
-- 		WHEN fin_cash_received_detail.DocumentType='CCN' THEN 
-- 			(SELECT (sal_customer_credit_note.GrandTotalAmount - sal_customer_credit_note.PaidAmount)FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDN' THEN 
-- 			(SELECT (sal_customer_debit_note.GrandTotalAmount - sal_customer_debit_note.PaidAmount)FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='FCN' THEN
-- 			(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='FDN' THEN
-- 			(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='INV' THEN
-- 			(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT (fin_invoice_item.GrandTotalAmount - fin_invoice_item.PaidAmount)FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SCN' THEN
-- 			(SELECT (pur_supplier_credit_note.GrandTotalAmount - pur_supplier_credit_note.PaidAmount)FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDN' THEN
-- 			(SELECT (pur_supplier_debit_note.GrandTotalAmount - pur_supplier_debit_note.PaidAmount)FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='VIN' THEN
-- 			(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-U' THEN
-- 			(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-P' THEN
-- 			(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-U' THEN
-- 			(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)FROM fin_supplier_down_payment_used WHERE fin_supplier_down_payment_used.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-P' THEN
-- 			(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)FROM fin_supplier_down_payment_paid WHERE fin_supplier_down_payment_paid.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT (fin_bank_payment_downpayment.GrandTotalAmount - fin_bank_payment_downpayment.UsedAmount)FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT (fin_cash_payment_downpayment.GrandTotalAmount - fin_cash_payment_downpayment.UsedAmount)FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT (fin_bank_received_downpayment.GrandTotalAmount - fin_bank_received_downpayment.UsedAmount)FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT (fin_cash_received_downpayment.GrandTotalAmount - fin_cash_received_downpayment.UsedAmount)FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		ELSE 0
-- 		END AS documentBalanceAmount,
		0 AS documentBalanceAmount,
		-- CASE 
-- 		WHEN fin_cash_received_detail.DocumentType='CCN' THEN 
-- 			(SELECT (sal_customer_credit_note.GrandTotalAmount - sal_customer_credit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDN' THEN 
-- 			(SELECT (sal_customer_debit_note.GrandTotalAmount - sal_customer_debit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='FCN' THEN
-- 			(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='FDN' THEN
-- 			(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='INV' THEN
-- 			(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)*fin_cash_received_detail.exchangeRate FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT (fin_invoice_item.GrandTotalAmount - fin_invoice_item.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SCN' THEN
-- 			(SELECT (pur_supplier_credit_note.GrandTotalAmount - pur_supplier_credit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDN' THEN
-- 			(SELECT (pur_supplier_debit_note.GrandTotalAmount - pur_supplier_debit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='VIN' THEN
-- 			(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-U' THEN
-- 			(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)*fin_cash_received_detail.exchangeRate FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-P' THEN
-- 			(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-U' THEN
-- 			(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)*fin_cash_received_detail.exchangeRate FROM fin_supplier_down_payment_used WHERE fin_supplier_down_payment_used.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-P' THEN
-- 			(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_supplier_down_payment_paid WHERE fin_supplier_down_payment_paid.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT (fin_bank_payment_downpayment.GrandTotalAmount - fin_bank_payment_downpayment.UsedAmount)*fin_cash_received_detail.exchangeRate FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT (fin_cash_payment_downpayment.GrandTotalAmount - fin_cash_payment_downpayment.UsedAmount)*fin_cash_received_detail.exchangeRate FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT (fin_bank_received_downpayment.GrandTotalAmount - fin_bank_received_downpayment.UsedAmount)*fin_cash_received_detail.exchangeRate FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_cash_received_detail.DocumentNo)
-- 		WHEN fin_cash_received_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT (fin_cash_received_downpayment.GrandTotalAmount - fin_cash_received_downpayment.UsedAmount)*fin_cash_received_detail.exchangeRate FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_cash_received_detail.DocumentNo)	
-- 		ELSE 0
-- 		END AS documentBalanceAmountIDR,
		0 AS documentBalanceAmountIDR,
		fin_cash_received_detail.transactionStatus,
		fin_cash_received_detail.debit,
		fin_cash_received_detail.debitIDR,
		fin_cash_received_detail.credit,
		fin_cash_received_detail.creditIDR,
		fin_cash_received_detail.remark
	FROM fin_cash_received_detail
	INNER JOIN mst_chart_of_account ON fin_cash_received_detail.chartOfAccountCode = mst_chart_of_account.code
	WHERE fin_cash_received_detail.HeaderCode = prmHeaderCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_cash_received_detail_get_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_cash_received_detail_get_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_fin_cash_received_detail_get_update`(
	IN prmHeaderCode VARCHAR(50)
)
BEGIN
SELECT
	fin_cash_received_detail.code,
	fin_cash_received_detail.headerCode,
	fin_cash_received_detail.documentBranchCode,
	fin_cash_received_detail.documentType,
	fin_cash_received_detail.documentNo,
	fin_cash_received_detail.currencyCode,
	fin_cash_received_detail.exchangeRate,
	fin_cash_received_detail.chartOfAccountCode,
	mst_chart_of_account.name AS chartOfAccountName,
	/*CASE 
	WHEN fin_cash_received_detail.DocumentType='CCN' THEN 
		(SELECT fin_customer_credit_note.GrandTotalAmount FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_customer_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDN' THEN 
		(SELECT fin_customer_debit_note.GrandTotalAmount FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_customer_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CNU' THEN
		(SELECT fin_m2_commission.GrandTotalAmount FROM fin_m2_commission WHERE fin_m2_commission.Code=fin_cash_received_detail.DocumentNo AND fin_m2_commission.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='DNU' THEN
		(SELECT ivt_sales_return_debit_note_detail.GrandTotalAmount FROM ivt_sales_return_debit_note_detail WHERE ivt_sales_return_debit_note_detail.Code=fin_cash_received_detail.DocumentNo AND ivt_sales_return_debit_note_detail.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='FCN' THEN
		(SELECT fin_fee_receiver_credit_note.GrandTotalAmount FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_fee_receiver_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='FDN' THEN
		(SELECT fin_fee_receiver_debit_note.GrandTotalAmount FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_fee_receiver_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='INV' THEN
		(SELECT sal_invoice.GrandTotalAmount FROM sal_invoice WHERE sal_invoice.Code=fin_cash_received_detail.DocumentNo AND sal_invoice.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='PRT' THEN
		(SELECT ivt_purchase_return.GrandTotalAmount FROM ivt_purchase_return WHERE ivt_purchase_return.Code=fin_cash_received_detail.DocumentNo AND ivt_purchase_return.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VCN' THEN
		(SELECT fin_vendor_credit_note.GrandTotalAmount FROM fin_vendor_credit_note WHERE fin_vendor_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VDN' THEN
		(SELECT fin_vendor_debit_note.GrandTotalAmount FROM fin_vendor_debit_note WHERE fin_vendor_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SRT' THEN
		(SELECT ivt_sales_return.GrandTotalAmount FROM ivt_sales_return WHERE ivt_sales_return.Code=fin_cash_received_detail.DocumentNo AND ivt_sales_return.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VIN' THEN
		(SELECT fin_vendor_invoice.GrandTotalAmount FROM fin_vendor_invoice WHERE fin_vendor_invoice.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_invoice.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDP-U' THEN
		(SELECT fin_customer_down_received_used.totalTransactionAmount FROM fin_customer_down_received_used INNER JOIN fin_customer_down_received ON fin_customer_down_received_used.code=fin_customer_down_received.code WHERE fin_customer_down_received_used.Code=fin_cash_received_detail.DocumentNo AND fin_customer_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDP-P' THEN
		(SELECT fin_customer_down_received_paid.GrandTotalAmount FROM fin_customer_down_received_paid INNER JOIN fin_customer_down_received ON fin_customer_down_received_paid.code=fin_customer_down_received.code WHERE fin_customer_down_received_paid.Code=fin_cash_received_detail.DocumentNo AND fin_customer_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SDP-U' THEN
		(SELECT fin_vendor_down_received_used.totalTransactionAmount FROM fin_vendor_down_received_used INNER JOIN fin_vendor_down_received ON fin_vendor_down_received_used.code=fin_vendor_down_received.code WHERE fin_vendor_down_received_used.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SDP-P' THEN
		(SELECT fin_vendor_down_received_paid.GrandTotalAmount FROM fin_vendor_down_received_paid INNER JOIN fin_vendor_down_received ON fin_vendor_down_received_paid.code=fin_vendor_down_received.code WHERE fin_vendor_down_received_paid.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	else 0
	END*/ 0 AS documentAmount,
	/*CASE 
	WHEN fin_cash_received_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_customer_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_customer_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CNU' THEN
		(SELECT (fin_m2_commission.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_m2_commission WHERE fin_m2_commission.Code=fin_cash_received_detail.DocumentNo AND fin_m2_commission.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='DNU' THEN
		(SELECT (ivt_sales_return_debit_note_detail.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM ivt_sales_return_debit_note_detail WHERE ivt_sales_return_debit_note_detail.Code=fin_cash_received_detail.DocumentNo AND ivt_sales_return_debit_note_detail.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='FCN' THEN
		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_fee_receiver_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='FDN' THEN
		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_fee_receiver_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='INV' THEN
		(SELECT (sal_invoice.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM sal_invoice WHERE sal_invoice.Code=fin_cash_received_detail.DocumentNo AND sal_invoice.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='PRT' THEN
		(SELECT (ivt_purchase_return.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM ivt_purchase_return WHERE ivt_purchase_return.Code=fin_cash_received_detail.DocumentNo AND ivt_purchase_return.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VCN' THEN
		(SELECT (fin_vendor_credit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_vendor_credit_note WHERE fin_vendor_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VDN' THEN
		(SELECT (fin_vendor_debit_note.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_vendor_debit_note WHERE fin_vendor_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SRT' THEN
		(SELECT (ivt_sales_return.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM ivt_sales_return WHERE ivt_sales_return.Code=fin_cash_received_detail.DocumentNo AND ivt_sales_return.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VIN' THEN
		(SELECT (fin_vendor_invoice.GrandTotalAmount * fin_cash_received_detail.exchangeRate) FROM fin_vendor_invoice WHERE fin_vendor_invoice.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_invoice.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	ELSE 0
	END*/ 0 AS documentAmountIDR,
	/*CASE
	WHEN fin_cash_received_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_customer_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_customer_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CNU' THEN
		(SELECT (fin_m2_commission.GrandTotalAmount - fin_m2_commission.PaidAmount)FROM fin_m2_commission WHERE fin_m2_commission.Code=fin_cash_received_detail.DocumentNo AND fin_m2_commission.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='DNU' THEN
		(SELECT (ivt_sales_return_debit_note_detail.GrandTotalAmount - ivt_sales_return_debit_note_detail.PaidAmount)FROM ivt_sales_return_debit_note_detail WHERE ivt_sales_return_debit_note_detail.Code=fin_cash_received_detail.DocumentNo AND ivt_sales_return_debit_note_detail.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='FCN' THEN
		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_fee_receiver_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='FDN' THEN
		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_fee_receiver_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='INV' THEN
		(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)FROM sal_invoice WHERE sal_invoice.Code=fin_cash_received_detail.DocumentNo AND sal_invoice.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='PRT' THEN
		(SELECT (ivt_purchase_return.GrandTotalAmount - ivt_purchase_return.PaidAmount)FROM ivt_purchase_return WHERE ivt_purchase_return.Code=fin_cash_received_detail.DocumentNo AND ivt_purchase_return.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VCN' THEN
		(SELECT (fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount)FROM fin_vendor_credit_note WHERE fin_vendor_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VDN' THEN
		(SELECT (fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount)FROM fin_vendor_debit_note WHERE fin_vendor_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SRT' THEN
		(SELECT (ivt_sales_return.GrandTotalAmount - ivt_sales_return.PaidAmount)FROM ivt_sales_return WHERE ivt_sales_return.Code=fin_cash_received_detail.DocumentNo AND ivt_sales_return.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VIN' THEN
		(SELECT (fin_vendor_invoice.GrandTotalAmount - fin_vendor_invoice.PaidAmount)FROM fin_vendor_invoice WHERE fin_vendor_invoice.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_invoice.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDP-U' THEN
		(SELECT (fin_customer_down_received_used.TotalTransactionAmount - fin_customer_down_received_used.UsedAmount)FROM fin_customer_down_received_used INNER JOIN fin_customer_down_received ON fin_customer_down_received_used.Code=fin_customer_down_received.Code WHERE fin_customer_down_received_used.Code=fin_cash_received_detail.DocumentNo AND fin_customer_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDP-P' THEN
		(SELECT (fin_customer_down_received_paid.GrandTotalAmount - fin_customer_down_received_paid.PaidAmount)FROM fin_customer_down_received_paid INNER JOIN fin_customer_down_received ON fin_customer_down_received_paid.Code=fin_customer_down_received.Code WHERE fin_customer_down_received_paid.Code=fin_cash_received_detail.DocumentNo AND fin_customer_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SDP-U' THEN
		(SELECT (fin_vendor_down_received_used.TotalTransactionAmount - fin_vendor_down_received_used.UsedAmount)FROM fin_vendor_down_received_used INNER JOIN fin_vendor_down_received ON fin_vendor_down_received_used.Code=fin_vendor_down_received.Code WHERE fin_vendor_down_received_used.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SDP-P' THEN
		(SELECT (fin_vendor_down_received_paid.GrandTotalAmount - fin_vendor_down_received_paid.PaidAmount)FROM fin_vendor_down_received_paid INNER JOIN fin_vendor_down_received ON fin_vendor_down_received_paid.Code=fin_vendor_down_received.Code WHERE fin_vendor_down_received_paid.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	ELSE 0
	END*/ 0 AS documentBalanceAmount,
	/*CASE 
	WHEN fin_cash_received_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_customer_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_customer_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CNU' THEN
		(SELECT (fin_m2_commission.GrandTotalAmount - fin_m2_commission.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_m2_commission WHERE fin_m2_commission.Code=fin_cash_received_detail.DocumentNo AND fin_m2_commission.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='DNU' THEN
		(SELECT (ivt_sales_return_debit_note_detail.GrandTotalAmount - ivt_sales_return_debit_note_detail.PaidAmount)*fin_cash_received_detail.exchangeRate FROM ivt_sales_return_debit_note_detail WHERE ivt_sales_return_debit_note_detail.Code=fin_cash_received_detail.DocumentNo AND ivt_sales_return_debit_note_detail.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='FCN' THEN
		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_fee_receiver_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='FDN' THEN
		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_fee_receiver_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='INV' THEN
		(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)*fin_cash_received_detail.exchangeRate FROM sal_invoice WHERE sal_invoice.Code=fin_cash_received_detail.DocumentNo AND sal_invoice.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='PRT' THEN
		(SELECT (ivt_purchase_return.GrandTotalAmount - ivt_purchase_return.PaidAmount)*fin_cash_received_detail.exchangeRate FROM ivt_purchase_return WHERE ivt_purchase_return.Code=fin_cash_received_detail.DocumentNo AND ivt_purchase_return.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VCN' THEN
		(SELECT (fin_vendor_credit_note.GrandTotalAmount - fin_vendor_credit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_vendor_credit_note WHERE fin_vendor_credit_note.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_credit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VDN' THEN
		(SELECT (fin_vendor_debit_note.GrandTotalAmount - fin_vendor_debit_note.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_vendor_debit_note WHERE fin_vendor_debit_note.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_debit_note.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SRT' THEN
		(SELECT (ivt_sales_return.GrandTotalAmount - ivt_sales_return.PaidAmount)*fin_cash_received_detail.exchangeRate FROM ivt_sales_return WHERE ivt_sales_return.Code=fin_cash_received_detail.DocumentNo AND ivt_sales_return.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='VIN' THEN
		(SELECT (fin_vendor_invoice.GrandTotalAmount - fin_vendor_invoice.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_vendor_invoice WHERE fin_vendor_invoice.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_invoice.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDP-U' THEN
		(SELECT (fin_customer_down_received_used.TotalTransactionAmount - fin_customer_down_received_used.UsedAmount)*fin_cash_received_detail.exchangeRate FROM fin_customer_down_received_used INNER JOIN fin_customer_down_received ON fin_customer_down_received_used.Code=fin_customer_down_received.Code WHERE fin_customer_down_received_used.Code=fin_cash_received_detail.DocumentNo AND fin_customer_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='CDP-P' THEN
		(SELECT (fin_customer_down_received_paid.GrandTotalAmount - fin_customer_down_received_paid.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_customer_down_received_paid INNER JOIN fin_customer_down_received ON fin_customer_down_received_paid.Code=fin_customer_down_received.Code WHERE fin_customer_down_received_paid.Code=fin_cash_received_detail.DocumentNo AND fin_customer_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SDP-U' THEN
		(SELECT (fin_vendor_down_received_used.TotalTransactionAmount - fin_vendor_down_received_used.UsedAmount)*fin_cash_received_detail.exchangeRate FROM fin_vendor_down_received_used INNER JOIN fin_vendor_down_received ON fin_vendor_down_received_used.Code=fin_vendor_down_received.Code WHERE fin_vendor_down_received_used.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	WHEN fin_cash_received_detail.DocumentType='SDP-P' THEN
		(SELECT (fin_vendor_down_received_paid.GrandTotalAmount - fin_vendor_down_received_paid.PaidAmount)*fin_cash_received_detail.exchangeRate FROM fin_vendor_down_received_paid  INNER JOIN fin_vendor_down_received ON fin_vendor_down_received_paid.Code=fin_vendor_down_received.Code WHERE fin_vendor_down_received_paid.Code=fin_cash_received_detail.DocumentNo AND fin_vendor_down_received.BranchCode=fin_cash_received_detail.DocumentBranchCode)
	ELSE 0
	END*/ 0 AS documentBalanceAmountIDR,
	fin_cash_received_detail.transactionStatus,
	fin_cash_received_detail.debit,
	fin_cash_received_detail.debitIDR,
	fin_cash_received_detail.credit,
	fin_cash_received_detail.creditIDR,
	fin_cash_received_detail.remark
FROM fin_cash_received_detail
INNER JOIN mst_chart_of_account ON fin_cash_received_detail.chartOfAccountCode = mst_chart_of_account.code
WHERE fin_cash_received_detail.HeaderCode = prmHeaderCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_fin_general_journal_detail_get_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_fin_general_journal_detail_get_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_fin_general_journal_detail_get_update`(
	IN prmHeaderCode VARCHAR(50)
)
BEGIN
SELECT
	fin_general_journal_detail.code,
	fin_general_journal_detail.headerCode,
	fin_general_journal_detail.documentBranchCode,
	fin_general_journal_detail.documentType,
	fin_general_journal_detail.documentNo,
	fin_general_journal_detail.currencyCode,
	fin_general_journal_detail.exchangeRate,
	fin_general_journal_detail.ChartOfAccountCode,
	mst_chart_of_account.Name AS chartOfAccountName,
	/*CASE 
	WHEN fin_general_journal_detail.DocumentType='CCN' THEN 
		(SELECT fin_customer_credit_note.GrandTotalAmount FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_customer_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDN' THEN 
		(SELECT fin_customer_debit_note.GrandTotalAmount FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_customer_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CNU' THEN
		(SELECT fin_m2_commission.GrandTotalAmount FROM fin_m2_commission WHERE fin_m2_commission.Code=fin_general_journal_detail.DocumentNo AND fin_m2_commission.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='DNU' THEN
		(SELECT ivt_sales_return_debit_note_detail.GrandTotalAmount FROM ivt_sales_return_debit_note_detail WHERE ivt_sales_return_debit_note_detail.Code=fin_general_journal_detail.DocumentNo AND ivt_sales_return_debit_note_detail.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='FCN' THEN
		(SELECT fin_fee_receiver_credit_note.GrandTotalAmount FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_fee_receiver_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='FDN' THEN
		(SELECT fin_fee_receiver_debit_note.GrandTotalAmount FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_fee_receiver_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='INV' THEN
		(SELECT sal_invoice.GrandTotalAmount FROM sal_invoice WHERE sal_invoice.Code=fin_general_journal_detail.DocumentNo AND sal_invoice.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='PRT' THEN
		(SELECT ivt_purchase_return.GrandTotalAmount FROM ivt_purchase_return WHERE ivt_purchase_return.Code=fin_general_journal_detail.DocumentNo AND ivt_purchase_return.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SCN' THEN
		(SELECT fin_supplier_credit_note.GrandTotalAmount FROM fin_supplier_credit_note WHERE fin_supplier_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDN' THEN
		(SELECT fin_supplier_debit_note.GrandTotalAmount FROM fin_supplier_debit_note WHERE fin_supplier_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SRT' THEN
		(SELECT ivt_sales_return.GrandTotalAmount FROM ivt_sales_return WHERE ivt_sales_return.Code=fin_general_journal_detail.DocumentNo AND ivt_sales_return.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='VIN' THEN
		(SELECT fin_supplier_invoice.GrandTotalAmount FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_invoice.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDP-U' THEN
		(SELECT fin_customer_down_payment_used.totalTransactionAmount FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_used.Code=fin_general_journal_detail.DocumentNo AND fin_customer_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDP-P' THEN
		(SELECT fin_customer_down_payment_paid.GrandTotalAmount FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_paid.Code=fin_general_journal_detail.DocumentNo AND fin_customer_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDP-U' THEN
		(SELECT fin_supplier_down_payment_used.totalTransactionAmount FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_used.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDP-P' THEN
		(SELECT fin_supplier_down_payment_paid.GrandTotalAmount FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_paid.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	else 0
	END*/ 0 AS documentAmount,
	/*CASE 
	WHEN fin_general_journal_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_customer_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_customer_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CNU' THEN
		(SELECT (fin_m2_commission.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM fin_m2_commission WHERE fin_m2_commission.Code=fin_general_journal_detail.DocumentNo AND fin_m2_commission.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='DNU' THEN
		(SELECT (ivt_sales_return_debit_note_detail.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM ivt_sales_return_debit_note_detail WHERE ivt_sales_return_debit_note_detail.Code=fin_general_journal_detail.DocumentNo AND ivt_sales_return_debit_note_detail.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='FCN' THEN
		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_fee_receiver_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='FDN' THEN
		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_fee_receiver_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='INV' THEN
		(SELECT (sal_invoice.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM sal_invoice WHERE sal_invoice.Code=fin_general_journal_detail.DocumentNo AND sal_invoice.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='PRT' THEN
		(SELECT (ivt_purchase_return.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM ivt_purchase_return WHERE ivt_purchase_return.Code=fin_general_journal_detail.DocumentNo AND ivt_purchase_return.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SCN' THEN
		(SELECT (fin_supplier_credit_note.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM fin_supplier_credit_note WHERE fin_supplier_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDN' THEN
		(SELECT (fin_supplier_debit_note.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM fin_supplier_debit_note WHERE fin_supplier_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SRT' THEN
		(SELECT (ivt_sales_return.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM ivt_sales_return WHERE ivt_sales_return.Code=fin_general_journal_detail.DocumentNo AND ivt_sales_return.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='VIN' THEN
		(SELECT (fin_supplier_invoice.GrandTotalAmount * fin_general_journal_detail.exchangeRate) FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_invoice.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	ELSE 0
	END*/ 0 AS documentAmountIDR,
	/*CASE
	WHEN fin_general_journal_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_customer_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_customer_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CNU' THEN
		(SELECT (fin_m2_commission.GrandTotalAmount - fin_m2_commission.PaidAmount)FROM fin_m2_commission WHERE fin_m2_commission.Code=fin_general_journal_detail.DocumentNo AND fin_m2_commission.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='DNU' THEN
		(SELECT (ivt_sales_return_debit_note_detail.GrandTotalAmount - ivt_sales_return_debit_note_detail.PaidAmount)FROM ivt_sales_return_debit_note_detail WHERE ivt_sales_return_debit_note_detail.Code=fin_general_journal_detail.DocumentNo AND ivt_sales_return_debit_note_detail.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='FCN' THEN
		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_fee_receiver_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='FDN' THEN
		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_fee_receiver_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='INV' THEN
		(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)FROM sal_invoice WHERE sal_invoice.Code=fin_general_journal_detail.DocumentNo AND sal_invoice.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='PRT' THEN
		(SELECT (ivt_purchase_return.GrandTotalAmount - ivt_purchase_return.PaidAmount)FROM ivt_purchase_return WHERE ivt_purchase_return.Code=fin_general_journal_detail.DocumentNo AND ivt_purchase_return.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SCN' THEN
		(SELECT (fin_supplier_credit_note.GrandTotalAmount - fin_supplier_credit_note.PaidAmount)FROM fin_supplier_credit_note WHERE fin_supplier_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDN' THEN
		(SELECT (fin_supplier_debit_note.GrandTotalAmount - fin_supplier_debit_note.PaidAmount)FROM fin_supplier_debit_note WHERE fin_supplier_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SRT' THEN
		(SELECT (ivt_sales_return.GrandTotalAmount - ivt_sales_return.PaidAmount)FROM ivt_sales_return WHERE ivt_sales_return.Code=fin_general_journal_detail.DocumentNo AND ivt_sales_return.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='VIN' THEN
		(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_invoice.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDP-U' THEN
		(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_general_journal_detail.DocumentNo AND fin_customer_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDP-P' THEN
		(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_general_journal_detail.DocumentNo AND fin_customer_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDP-U' THEN
		(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_used.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDP-P' THEN
		(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_paid.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	ELSE 0
	END */ 0 AS documentBalanceAmount,
	/*CASE 
	WHEN fin_general_journal_detail.DocumentType='CCN' THEN 
		(SELECT (fin_customer_credit_note.GrandTotalAmount - fin_customer_credit_note.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_customer_credit_note WHERE fin_customer_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_customer_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDN' THEN 
		(SELECT (fin_customer_debit_note.GrandTotalAmount - fin_customer_debit_note.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_customer_debit_note WHERE fin_customer_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_customer_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CNU' THEN
		(SELECT (fin_m2_commission.GrandTotalAmount - fin_m2_commission.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_m2_commission WHERE fin_m2_commission.Code=fin_general_journal_detail.DocumentNo AND fin_m2_commission.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='DNU' THEN
		(SELECT (ivt_sales_return_debit_note_detail.GrandTotalAmount - ivt_sales_return_debit_note_detail.PaidAmount)*fin_general_journal_detail.exchangeRate FROM ivt_sales_return_debit_note_detail WHERE ivt_sales_return_debit_note_detail.Code=fin_general_journal_detail.DocumentNo AND ivt_sales_return_debit_note_detail.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='FCN' THEN
		(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_fee_receiver_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='FDN' THEN
		(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_fee_receiver_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='INV' THEN
		(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)*fin_general_journal_detail.exchangeRate FROM sal_invoice WHERE sal_invoice.Code=fin_general_journal_detail.DocumentNo AND sal_invoice.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='PRT' THEN
		(SELECT (ivt_purchase_return.GrandTotalAmount - ivt_purchase_return.PaidAmount)*fin_general_journal_detail.exchangeRate FROM ivt_purchase_return WHERE ivt_purchase_return.Code=fin_general_journal_detail.DocumentNo AND ivt_purchase_return.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SCN' THEN
		(SELECT (fin_supplier_credit_note.GrandTotalAmount - fin_supplier_credit_note.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_supplier_credit_note WHERE fin_supplier_credit_note.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_credit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDN' THEN
		(SELECT (fin_supplier_debit_note.GrandTotalAmount - fin_supplier_debit_note.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_supplier_debit_note WHERE fin_supplier_debit_note.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_debit_note.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SRT' THEN
		(SELECT (ivt_sales_return.GrandTotalAmount - ivt_sales_return.PaidAmount)*fin_general_journal_detail.exchangeRate FROM ivt_sales_return WHERE ivt_sales_return.Code=fin_general_journal_detail.DocumentNo AND ivt_sales_return.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='VIN' THEN
		(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_invoice.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDP-U' THEN
		(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)*fin_general_journal_detail.exchangeRate FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_general_journal_detail.DocumentNo AND fin_customer_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='CDP-P' THEN
		(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_general_journal_detail.DocumentNo AND fin_customer_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDP-U' THEN
		(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)*fin_general_journal_detail.exchangeRate FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_used.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	WHEN fin_general_journal_detail.DocumentType='SDP-P' THEN
		(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)*fin_general_journal_detail.exchangeRate FROM fin_supplier_down_payment_paid  INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_paid.Code=fin_general_journal_detail.DocumentNo AND fin_supplier_down_payment.BranchCode=fin_general_journal_detail.DocumentBranchCode)
	ELSE 0
	END*/ 0 AS documentBalanceAmountIDR,
	fin_general_journal_detail.transactionStatus,
	fin_general_journal_detail.debit,
	fin_general_journal_detail.debitIDR,
	fin_general_journal_detail.credit,
	fin_general_journal_detail.creditIDR,
	fin_general_journal_detail.remark
FROM fin_general_journal_detail
LEFT JOIN mst_chart_of_account ON fin_general_journal_detail.ChartOfAccountCode=mst_chart_of_account.Code
WHERE fin_general_journal_detail.HeaderCode = prmHeaderCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_good_received_note_detail_item_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_good_received_note_detail_item_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_good_received_note_detail_item_detail_list`(
	IN prmHeaderCode VARCHAR(250)
    )
BEGIN
	SET @inQuery = CONCAT(
	"SELECT
		ivt_goods_received_note_item_detail.Code,
		ivt_goods_received_note_item_detail.HeaderCode	,
		ivt_goods_received_note_item_detail.ItemMaterialCode,  
		mst_item_material.Name AS ItemMaterialName,
		mst_item_material.UnitOfMeasureCode AS ItemMaterialUnitOfMeasureCode, 
		CASE  
		 WHEN mst_item_material.SerialNoStatus = 1 THEN 'YES'  
		 WHEN mst_item_material.SerialNoStatus = 0 THEN 'NO'  
		END AS serialStatus,
		ivt_goods_received_note_item_detail.ItemAlias,
		ivt_goods_received_note_item_detail.Price,
		IFNULL(pur_purchase_order_detail.quantity,0)AS PoQuantity,
		IFNULL(data_grn.quantity,0) AS ReceivedQuantity,
		CASE 
			WHEN pur_purchase_order_detail.Quantity IS NULL THEN 0
			ELSE pur_purchase_order_detail.Quantity - data_grn.quantity
		END AS BalanceQuantity,
		ivt_goods_received_note_item_detail.Quantity, 
		ivt_goods_received_note_item_detail.DiscountPercent, 
		ivt_goods_received_note_item_detail.DiscountAmount, 
		ivt_goods_received_note_item_detail.NettPrice,
		ivt_goods_received_note_item_detail.TotalAmount,  
		ivt_goods_received_note_item_detail.heatNo,
		ivt_goods_received_note_item_detail.batchNo,
		ivt_goods_received_note_item_detail.PurchaseRequestCode,
		ivt_goods_received_note_item_detail.`PurchaseOrderDetailCode`,
		ivt_goods_received_note_item_detail.Remark,
		ivt_goods_received_note_item_detail.RackCode,
		mst_rack.name AS rackName	
	FROM ivt_goods_received_note_item_detail
	INNER JOIN ivt_goods_received_note ON ivt_goods_received_note_item_detail.HeaderCode=ivt_goods_received_note.Code
	LEFT JOIN pur_purchase_order_detail ON ivt_goods_received_note_item_detail.PurchaseOrderDetailCode=pur_purchase_order_detail.code
	INNER JOIN mst_item_material ON ivt_goods_received_note_item_detail.ItemMaterialCode=mst_item_material.Code
	INNER JOIN mst_rack ON mst_rack.code = ivt_goods_received_note_item_detail.RackCode
	LEFT JOIN(
		SELECT  
			ivt_goods_received_note.Code AS GRNCode, 
			ivt_goods_received_note.PurchaseOrderCode, 
			ivt_goods_received_note_item_detail.ItemMaterialCode,
			SUM(ivt_goods_received_note_item_detail.Quantity) AS quantity,
			ivt_goods_received_note_item_detail.`PurchaseOrderDetailCode` 
		FROM ivt_goods_received_note    
		INNER JOIN ivt_goods_received_note_item_detail   
		ON ivt_goods_received_note.Code=ivt_goods_received_note_item_detail.HeaderCode    
		GROUP BY ivt_goods_received_note_item_detail.`PurchaseOrderDetailCode`, ivt_goods_received_note_item_detail.ItemMaterialCode
	)data_grn ON ivt_goods_received_note_item_detail.PurchaseOrderDetailCode=data_grn.PurchaseOrderDetailCode
	 WHERE ivt_goods_received_note.code='",prmHeaderCode,"'
	ORDER BY ivt_goods_received_note_item_detail.ItemMaterialCode ASC");
	
	PREPARE STMT FROM @inQuery;
	EXECUTE STMT;
	DEALLOCATE PREPARE STMT;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_good_received_note_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_good_received_note_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_good_received_note_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmPurchaseOrderCode VARCHAR(250),
	IN prmVendorCode VARCHAR(250),
	IN prmVendorName VARCHAR(250),
	IN prmWarehouseCode VARCHAR(250),
	IN prmWarehouseName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT COUNT(ivt_goods_received_note.Code) 
		FROM ivt_goods_received_note
		INNER JOIN mst_vendor ON ivt_goods_received_note.VendorCode=mst_vendor.Code
		INNER JOIN mst_warehouse ON ivt_goods_received_note.WarehouseCode=mst_warehouse.Code
		inner join pur_purchase_order on pur_purchase_order.Code = ivt_goods_received_note.PurchaseOrderCode
		WHERE ivt_goods_received_note.Code LIKE prmCode
		AND ivt_goods_received_note.PurchaseOrderCode LIKE prmPurchaseOrderCode
		AND ivt_goods_received_note.VendorCode LIKE prmVendorCode
		AND mst_vendor.Name LIKE prmVendorName
		AND ivt_goods_received_note.WarehouseCode LIKE prmWarehouseCode
		AND mst_warehouse.Name LIKE prmWarehouseName
		and ivt_goods_received_note.RefNo like prmRefNo
		AND ivt_goods_received_note.Remark LIKE prmRemark  
		AND DATE(ivt_goods_received_note.TransactionDate) BETWEEN prmFirstDate AND prmLastDate;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT 
			ivt_goods_received_note.Code,
			ivt_goods_received_note.BranchCode,
			ivt_goods_received_note.TransactionDate,
			ivt_goods_received_note.PurchaseOrderCode,
			ivt_goods_received_note.CurrencyCode,
			ivt_goods_received_note.ExchangeRate,
			ivt_goods_received_note.VendorCode,
			mst_vendor.Name AS VendorName,
			ivt_goods_received_note.ReceivedBy,
			ivt_goods_received_note.WarehouseCode,
			mst_warehouse.Name AS WarehouseName,
			ivt_goods_received_note.ExpeditionCode,
			ivt_goods_received_note.TotalTransactionAmount,
			ivt_goods_received_note.DiscountPercent,
			ivt_goods_received_note.DiscountAmount,
			(ivt_goods_received_note.TotalTransactionAmount - ivt_goods_received_note.DiscountAmount) AS TaxBaseAmount,
			ivt_goods_received_note.VATPercent,
			ivt_goods_received_note.VATAmount,
			ivt_goods_received_note.GrandTotalAmount,
			ivt_goods_received_note.ExchangeRate,
			ivt_goods_received_note.RefNo,
			ivt_goods_received_note.Remark,
			ivt_goods_received_note.ConfirmationStatus
		FROM ivt_goods_received_note
		INNER JOIN mst_vendor ON ivt_goods_received_note.VendorCode=mst_vendor.Code
		INNER JOIN mst_warehouse ON ivt_goods_received_note.WarehouseCode=mst_warehouse.Code
		INNER JOIN pur_purchase_order ON pur_purchase_order.Code = ivt_goods_received_note.PurchaseOrderCode
		WHERE ivt_goods_received_note.Code LIKE ?
		AND ivt_goods_received_note.PurchaseOrderCode LIKE ?
		AND ivt_goods_received_note.VendorCode LIKE ?
		AND mst_vendor.Name LIKE ?
		AND ivt_goods_received_note.WarehouseCode LIKE ?
		AND mst_warehouse.Name LIKE ?
		AND ivt_goods_received_note.RefNo LIKE ?
		AND ivt_goods_received_note.Remark LIKE ?
		AND DATE(ivt_goods_received_note.TransactionDate) BETWEEN ? AND ?
		ORDER BY ivt_goods_received_note.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmPurchaseOrderCode = prmPurchaseOrderCode;
		SET @prmVendorCode = prmVendorCode; 
		SET @prmVendorName = prmVendorName;
		SET @prmWarehouseCode = prmWarehouseCode; 
		SET @prmWarehouseName = prmWarehouseName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmPurchaseOrderCode,@prmVendorCode,@prmVendorName,@prmWarehouseCode,@prmWarehouseName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_good_receive_note_serial_no_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_good_receive_note_serial_no_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_good_receive_note_serial_no_detail_list`(
	IN prmHeaderCode VARCHAR(250)
    )
BEGIN
	SET @inQuery = CONCAT(
		"SELECT
		ivt_goods_received_note_serial_no_detail.Code,
		ivt_goods_received_note_serial_no_detail.HeaderCode,	
		ivt_goods_received_note_serial_no_detail.ItemMaterialCode,  
		mst_item_material.Name AS ItemMaterialName,
		mst_item_material.UnitOfMeasureCode AS ItemMaterialUnitOfMeasureCode,
		ivt_goods_received_note_serial_no_detail.SerialNo,
		pur_purchase_order_detail.Quantity AS PoQuantity,
		ivt_goods_received_note_serial_no_detail.Capacity, 
		ivt_goods_received_note_serial_no_detail.itemAlias,
		ivt_goods_received_note_serial_no_detail.HeatNo,
		ivt_goods_received_note_serial_no_detail.BatchNo,
		ivt_goods_received_note_serial_no_detail.PurchaseOrderDetailCode,
		ivt_goods_received_note_serial_no_detail.Remark,
		ivt_goods_received_note_serial_no_detail.RackCode,
		mst_rack.Name AS RackName
	FROM ivt_goods_received_note_serial_no_detail
	INNER JOIN ivt_goods_received_note ON ivt_goods_received_note_serial_no_detail.HeaderCode=ivt_goods_received_note.Code
	INNER JOIN pur_purchase_order_detail ON ivt_goods_received_note_serial_no_detail.PurchaseOrderDetailCode=pur_purchase_order_detail.code
	INNER JOIN mst_item_material ON ivt_goods_received_note_serial_no_detail.ItemMaterialCode=mst_item_material.Code
	INNER JOIN mst_rack ON ivt_goods_received_note_serial_no_detail.RackCode=mst_rack.Code
	LEFT JOIN(
		SELECT  
			ivt_goods_received_note.Code AS GRNCode, 
			ivt_goods_received_note.PurchaseOrderCode, 
			ivt_goods_received_note_item_detail.ItemMaterialCode,
			ivt_goods_received_note_item_detail.`PurchaseOrderDetailCode` 
		FROM ivt_goods_received_note    
		INNER JOIN ivt_goods_received_note_item_detail   
		ON ivt_goods_received_note.Code=ivt_goods_received_note_item_detail.HeaderCode    
		GROUP BY ivt_goods_received_note_item_detail.`PurchaseOrderDetailCode`, ivt_goods_received_note_item_detail.ItemMaterialCode
	)data_grn ON ivt_goods_received_note_serial_no_detail.PurchaseOrderDetailCode=data_grn.PurchaseOrderDetailCode
	WHERE ivt_goods_received_note.code='",prmHeaderCode,"'
	ORDER BY ivt_goods_received_note_serial_no_detail.ItemMaterialCode ASC");
	
	PREPARE STMT FROM @inQuery;
	EXECUTE STMT;
	DEALLOCATE PREPARE STMT;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_list_of_applicable_document_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_list_of_applicable_document_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_list_of_applicable_document_detail_list`(
	IN prmHeaderCode VARCHAR(250)
)
BEGIN
	SELECT
		sal_list_of_applicable_document_detail.NameOfDocument,
		sal_list_of_applicable_document_detail.DocumentNo,
		sal_list_of_applicable_document_detail.VersionEdition,
		sal_list_of_applicable_document_detail.DocumentPath
	FROM sal_list_of_applicable_document_detail
	WHERE sal_list_of_applicable_document_detail.HeaderCode=prmHeaderCode
	order by sal_list_of_applicable_document_detail.Code ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_list_of_applicable_document_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_list_of_applicable_document_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_list_of_applicable_document_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmSalesOrderCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT COUNT(sal_list_of_applicable_document.`Code`)
		FROM `sal_list_of_applicable_document`
		INNER JOIN(
			SELECT
				sal_customer_purchase_order.`Code`,
				sal_customer_purchase_order.`CustomerCode`,
				sal_customer_purchase_order.`SalesPersonCode`
			FROM `sal_customer_purchase_order` 
			
			UNION ALL
				
			SELECT
				sal_customer_sales_order.`Code`,
				sal_customer_sales_order.`CustomerCode`,
				sal_customer_sales_order.`SalesPersonCode`
			FROM `sal_customer_sales_order`
		)AS customer_sales_order ON sal_list_of_applicable_document.`SalesOrderCode`=customer_sales_order.Code
		INNER JOIN `mst_customer` ON customer_sales_order.CustomerCode=mst_customer.`Code`
		INNER JOIN mst_sales_person ON customer_sales_order.SalesPersonCode=mst_sales_person.`Code`
		WHERE sal_list_of_applicable_document.`Code` LIKE prmCode
		AND sal_list_of_applicable_document.`SalesOrderCode` LIKE prmSalesOrderCode
		AND customer_sales_order.CustomerCode LIKE prmCustomerCode
		AND mst_customer.`Name` LIKE prmCustomerName
		AND sal_list_of_applicable_document.`RefNo` LIKE prmRefNo
		AND sal_list_of_applicable_document.`Remark` LIKE prmRemark
		AND DATE(sal_list_of_applicable_document.`TransactionDate`) BETWEEN prmFirstDate AND prmLastDate;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_list_of_applicable_document.`Code`,
			sal_list_of_applicable_document.`BranchCode`,
			sal_list_of_applicable_document.`TransactionDate`,
			sal_list_of_applicable_document.`SalesOrderCode`,
-- 			sal_list_of_applicable_document.`SalesOrderSource`,
			customer_sales_order.CustomerCode AS SalesOrderCustomerCode,
			mst_customer.Name AS SalesOrderCustomerName,
			customer_sales_order.SalesPersonCode AS SalesOrderSalesPersonCode,
			mst_sales_person.`Name` AS SalesOrderSalesPersonName,
			sal_list_of_applicable_document.`RefNo`,
			sal_list_of_applicable_document.`Remark`,
			sal_list_of_applicable_document.`PreparedBy`,
			sal_list_of_applicable_document.`ApprovedBy`
		FROM `sal_list_of_applicable_document`
		INNER JOIN(
			SELECT
				sal_customer_purchase_order.`Code`,
				sal_customer_purchase_order.`CustomerCode`,
				sal_customer_purchase_order.`SalesPersonCode`
			FROM `sal_customer_purchase_order` 
			
			UNION ALL
				
			SELECT
				sal_customer_sales_order.`Code`,
				sal_customer_sales_order.`CustomerCode`,
				sal_customer_sales_order.`SalesPersonCode`
			FROM `sal_customer_sales_order`
		)AS customer_sales_order ON sal_list_of_applicable_document.`SalesOrderCode`=customer_sales_order.Code
		INNER JOIN `mst_customer` ON customer_sales_order.CustomerCode=mst_customer.`Code`
		INNER JOIN mst_sales_person ON customer_sales_order.SalesPersonCode=mst_sales_person.`Code`
		WHERE sal_list_of_applicable_document.`Code` LIKE ?
		AND sal_list_of_applicable_document.`SalesOrderCode` LIKE ?
		AND customer_sales_order.CustomerCode LIKE ?
		AND mst_customer.`Name` LIKE ?
		AND sal_list_of_applicable_document.`RefNo` LIKE ?
		AND sal_list_of_applicable_document.`Remark` LIKE ?
		AND DATE(sal_list_of_applicable_document.`TransactionDate`) BETWEEN ? AND ?
		ORDER BY sal_list_of_applicable_document.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmSalesOrderCode=prmSalesOrderCode;
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmSalesOrderCode,@prmCustomerCode,@prmCustomerName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_menu_active_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_menu_active_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_menu_active_list`(
	prmRole VARCHAR(50)
    )
BEGIN
	SELECT lv1.* 
	FROM(
		SELECT * 
		FROM scr_menu WHERE scr_menu.ParentCode = '' AND scr_menu.classes <> ''
	)AS lv1
	INNER JOIN(
		SELECT lv2.* 
		FROM(
			SELECT scr_menu_l2.*
			FROM scr_menu 
			INNER JOIN scr_menu scr_menu_l2 ON scr_menu.code=scr_menu_l2.parentcode
			WHERE scr_menu.ParentCode = '' AND scr_menu.Classes <> '' AND scr_menu_l2.classes='folder'
		)AS lv2
		INNER JOIN(
			SELECT lv3.* 
			FROM(
				SELECT scr_menu_l3.*
				FROM scr_menu 
				INNER JOIN scr_menu scr_menu_l2 ON scr_menu.code=scr_menu_l2.parentcode
				INNER JOIN scr_menu scr_menu_l3 ON scr_menu_l2.code=scr_menu_l3.parentcode
				WHERE scr_menu.ParentCode = '' AND scr_menu.Classes <> '' AND scr_menu_l3.classes='folder'
			)AS lv3
			INNER JOIN(
				SELECT scr_menu.*
				FROM scr_menu
				INNER JOIN scr_authorization ON scr_authorization.ModuleCode = scr_menu.Code 
				INNER JOIN scr_role_authorization ON scr_role_authorization.AuthorizationCode = scr_authorization.Code
				WHERE scr_role_authorization.AssignAuthority = 1 
				AND scr_role_authorization.headercode = prmRole
			)AS lv3_aktif ON lv3.code=lv3_aktif.parentcode
			GROUP BY lv3.code
			
			UNION ALL
			
			SELECT lv3.* 
			FROM(
				SELECT scr_menu_l3.*
				FROM scr_menu 
				INNER JOIN scr_menu scr_menu_l2 ON scr_menu.code=scr_menu_l2.parentcode
				INNER JOIN scr_menu scr_menu_l3 ON scr_menu_l2.code=scr_menu_l3.parentcode
				WHERE scr_menu.ParentCode = '' AND scr_menu.Classes <> '' AND scr_menu_l3.classes='file'
			)AS lv3
			INNER JOIN(
				SELECT scr_menu.*
				FROM scr_menu
				INNER JOIN scr_authorization ON scr_authorization.ModuleCode = scr_menu.Code 
				INNER JOIN scr_role_authorization ON scr_role_authorization.AuthorizationCode = scr_authorization.Code
				WHERE scr_role_authorization.AssignAuthority = 1 
				AND scr_role_authorization.headercode = prmRole
			)AS lv3_aktif ON lv3.code=lv3_aktif.code
		)AS lv3union ON lv2.code=lv3union.parentcode
		GROUP BY lv2.code
				
		UNION ALL
			
		SELECT lv2.* 
		FROM(
			SELECT scr_menu_l2.*
			FROM scr_menu 
			INNER JOIN scr_menu scr_menu_l2 ON scr_menu.code=scr_menu_l2.parentcode
			WHERE scr_menu.ParentCode = '' AND scr_menu.Classes <> '' AND scr_menu_l2.classes='file'
		)AS lv2 
		INNER JOIN(
			SELECT scr_menu.*
			FROM scr_menu
			INNER JOIN scr_authorization ON scr_authorization.ModuleCode = scr_menu.Code 
			INNER JOIN scr_role_authorization ON scr_role_authorization.AuthorizationCode = scr_authorization.Code
			WHERE scr_role_authorization.AssignAuthority = 1 
			AND scr_role_authorization.headercode = prmRole
		)AS lv2_aktif ON lv2.code=lv2_aktif.code
	)AS lv2union ON lv1.code=lv2union.parentcode
	GROUP BY lv1.code
	ORDER BY lv1.sortno;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_payment_request_approval_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_payment_request_approval_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_payment_request_approval_list`(
	IN prmCode VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmCreatedBy VARCHAR(250),
	IN prmPaymentTo VARCHAR(250),
	IN prmApprovalStatus VARCHAR(50),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	PREPARE STMT FROM "
	SELECT
		fin_payment_request.Code,
		fin_payment_request.BranchCode,
		fin_payment_request.TransactionDate,
		fin_payment_request.TransactionType,
		fin_payment_request.PaymentTo,
		fin_payment_request.CurrencyCode,
		fin_payment_request.TotalTransactionAmount,
		fin_payment_request.ApprovalStatus,
		fin_payment_request.ApprovalBy,
		fin_payment_request.ApprovalDate,
		fin_payment_request.RefNo,
		fin_payment_request.CreatedBy,
		fin_payment_request.Remark
	FROM fin_payment_request
		INNER JOIN mst_currency ON fin_payment_request.CurrencyCode = mst_currency.Code
		
	WHERE 
		fin_payment_request.Code LIKE ?
		AND fin_payment_request.RefNo LIKE ?
		AND fin_payment_request.Remark LIKE ?
		AND fin_payment_request.CreatedBy LIKE ?
		AND fin_payment_request.PaymentTo LIKE ?
		AND fin_payment_request.ApprovalStatus LIKE ?
		AND DATE(fin_payment_request.TransactionDate) BETWEEN DATE(?) AND DATE(?)
	LIMIT ?, ?"; 
	
	SET @prmCode = prmCode; 
		
	SET @prmRefNo = prmRefNo; 
	SET @prmRemark = prmRemark; 
	SET @prmCreatedBy = prmCreatedBy;
	SET @prmPaymentTo=prmPaymentTo;
	SET @prmApprovalStatus = prmApprovalStatus; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	SET @prmLimitFrom = prmLimitFrom; 
	SET @prmLimitUpTo = prmLimitUpTo; 
	EXECUTE STMT USING @prmCode,@prmRefNo,@prmRemark,@prmCreatedBy,@prmPaymentTo,@prmApprovalStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_payment_request_approval_list_count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_payment_request_approval_list_count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_payment_request_approval_list_count`(
	IN prmCode VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmPaymentTo VARCHAR(250),
	IN prmApprovalStatus VARCHAR(50),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME
)
BEGIN
	SELECT COUNT(*)
	FROM fin_payment_request
	WHERE 
		fin_payment_request.Code LIKE prmCode
		AND fin_payment_request.RefNo LIKE prmRefNo
		AND fin_payment_request.Remark LIKE prmRemark
		AND fin_payment_request.PaymentTo LIKE prmPaymentTo
		AND fin_payment_request.ApprovalStatus LIKE prmApprovalStatus
		AND DATE(fin_payment_request.TransactionDate) BETWEEN DATE(prmFirstDate) AND DATE(prmLastDate);
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_payment_request_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_payment_request_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_payment_request_detail_list`(
	IN prmHeaderCode VARCHAR(250)
    )
BEGIN
	SELECT
		fin_payment_request_detail.code,
		fin_payment_request_detail.headerCode,
		fin_payment_request_detail.documentBranchCode,
		fin_payment_request_detail.documentType,
		fin_payment_request_detail.documentNo,
		fin_payment_request_detail.currencyCode,
		fin_payment_request_detail.exchangeRate,
		fin_payment_request_detail.`ChartOfAccountCode`,
		mst_chart_of_account.name AS ChartOfAccountName,
		0 AS documentAmount,
		0 AS documentBalanceAmount,
		-- CASE 
-- 		WHEN fin_payment_request_detail.DocumentType='CCN' THEN 
-- 			(SELECT sal_customer_credit_note.GrandTotalAmount FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDN' THEN 
-- 			(SELECT sal_customer_debit_note.GrandTotalAmount FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='FCN' THEN
-- 			(SELECT fin_fee_receiver_credit_note.GrandTotalAmount FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='FDN' THEN
-- 			(SELECT fin_fee_receiver_debit_note.GrandTotalAmount FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='INV' THEN
-- 			(SELECT sal_invoice.GrandTotalAmount FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT fin_invoice_item.GrandTotalAmount FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SCN' THEN
-- 			(SELECT pur_supplier_credit_note.GrandTotalAmount FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDN' THEN
-- 			(SELECT pur_supplier_debit_note.GrandTotalAmount FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='VIN' THEN
-- 			(SELECT fin_supplier_invoice.GrandTotalAmount FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDP-U' THEN
-- 			(SELECT fin_customer_down_payment_used.totalTransactionAmount FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_used.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDP-P' THEN
-- 			(SELECT fin_customer_down_payment_paid.GrandTotalAmount FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.code=fin_customer_down_payment.code WHERE fin_customer_down_payment_paid.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDP-U' THEN
-- 			(SELECT fin_supplier_down_payment_used.totalTransactionAmount FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_used.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDP-P' THEN
-- 			(SELECT fin_supplier_down_payment_paid.GrandTotalAmount FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.code=fin_supplier_down_payment.code WHERE fin_supplier_down_payment_paid.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT fin_bank_payment_downpayment.GrandTotalAmount FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT fin_cash_payment_downpayment.GrandTotalAmount FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT fin_bank_received_downpayment.GrandTotalAmount FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT fin_cash_received_downpayment.GrandTotalAmount FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_payment_request_detail.DocumentNo)
-- 		ELSE 0
-- 		END AS documentAmount,
-- 		CASE
-- 		WHEN fin_payment_request_detail.DocumentType='CCN' THEN 
-- 			(SELECT (sal_customer_credit_note.GrandTotalAmount - sal_customer_credit_note.PaidAmount)FROM sal_customer_credit_note WHERE sal_customer_credit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDN' THEN 
-- 			(SELECT (sal_customer_debit_note.GrandTotalAmount - sal_customer_debit_note.PaidAmount)FROM sal_customer_debit_note WHERE sal_customer_debit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='FCN' THEN
-- 			(SELECT (fin_fee_receiver_credit_note.GrandTotalAmount - fin_fee_receiver_credit_note.PaidAmount)FROM fin_fee_receiver_credit_note WHERE fin_fee_receiver_credit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='FDN' THEN
-- 			(SELECT (fin_fee_receiver_debit_note.GrandTotalAmount - fin_fee_receiver_debit_note.PaidAmount)FROM fin_fee_receiver_debit_note WHERE fin_fee_receiver_debit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='INV' THEN
-- 			(SELECT (sal_invoice.GrandTotalAmount - sal_invoice.PaidAmount)FROM sal_invoice WHERE sal_invoice.InvoiceNo=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='INV_ITM' THEN
-- 			(SELECT (fin_invoice_item.GrandTotalAmount - fin_invoice_item.PaidAmount)FROM fin_invoice_item WHERE fin_invoice_item.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SCN' THEN
-- 			(SELECT (pur_supplier_credit_note.GrandTotalAmount - pur_supplier_credit_note.PaidAmount)FROM pur_supplier_credit_note WHERE pur_supplier_credit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDN' THEN
-- 			(SELECT (pur_supplier_debit_note.GrandTotalAmount - pur_supplier_debit_note.PaidAmount)FROM pur_supplier_debit_note WHERE pur_supplier_debit_note.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='VIN' THEN
-- 			(SELECT (fin_supplier_invoice.GrandTotalAmount - fin_supplier_invoice.PaidAmount)FROM fin_supplier_invoice WHERE fin_supplier_invoice.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDP-U' THEN
-- 			(SELECT (fin_customer_down_payment_used.TotalTransactionAmount - fin_customer_down_payment_used.UsedAmount)FROM fin_customer_down_payment_used INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_used.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_used.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDP-P' THEN
-- 			(SELECT (fin_customer_down_payment_paid.GrandTotalAmount - fin_customer_down_payment_paid.PaidAmount)FROM fin_customer_down_payment_paid INNER JOIN fin_customer_down_payment ON fin_customer_down_payment_paid.Code=fin_customer_down_payment.Code WHERE fin_customer_down_payment_paid.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDP-U' THEN
-- 			(SELECT (fin_supplier_down_payment_used.TotalTransactionAmount - fin_supplier_down_payment_used.UsedAmount)FROM fin_supplier_down_payment_used INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_used.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_used.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDP-P' THEN
-- 			(SELECT (fin_supplier_down_payment_paid.GrandTotalAmount - fin_supplier_down_payment_paid.PaidAmount)FROM fin_supplier_down_payment_paid INNER JOIN fin_supplier_down_payment ON fin_supplier_down_payment_paid.Code=fin_supplier_down_payment.Code WHERE fin_supplier_down_payment_paid.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDP-BBK' THEN
-- 			(SELECT (fin_bank_payment_downpayment.GrandTotalAmount - fin_bank_payment_downpayment.UsedAmount)FROM fin_bank_payment_downpayment WHERE fin_bank_payment_downpayment.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='SDP-BKK' THEN
-- 			(SELECT (fin_cash_payment_downpayment.GrandTotalAmount - fin_cash_payment_downpayment.UsedAmount)FROM fin_cash_payment_downpayment WHERE fin_cash_payment_downpayment.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDP-BBM' THEN
-- 			(SELECT (fin_bank_received_downpayment.GrandTotalAmount - fin_bank_received_downpayment.UsedAmount)FROM fin_bank_received_downpayment WHERE fin_bank_received_downpayment.Code=fin_payment_request_detail.DocumentNo)
-- 		WHEN fin_payment_request_detail.DocumentType='CDP-BKM' THEN
-- 			(SELECT (fin_cash_received_downpayment.GrandTotalAmount - fin_cash_received_downpayment.UsedAmount)FROM fin_cash_received_downpayment WHERE fin_cash_received_downpayment.Code=fin_payment_request_detail.DocumentNo)
-- 		ELSE 0
-- 		END AS documentBalanceAmount,
		fin_payment_request_detail.transactionStatus,
		fin_payment_request_detail.debit,
		fin_payment_request_detail.credit,
		fin_payment_request_detail.remark
	FROM fin_payment_request_detail
	INNER JOIN mst_chart_of_account ON fin_payment_request_detail.ChartOfAccountCode= mst_chart_of_account.code
	WHERE fin_payment_request_detail.HeaderCode = prmHeaderCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_payment_request_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_payment_request_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_payment_request_list`(
	
	IN prmCode VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	PREPARE STMT FROM 
	"SELECT
		fin_payment_request.Code,
		fin_payment_request.BranchCode,
		mst_branch.Name AS BranchName,
		fin_payment_request.TransactionDate,
		fin_payment_request.TransactionType,
		fin_payment_request.PaymentTo,
		fin_payment_request.CurrencyCode,
		mst_currency.Name AS CurrencyName,
		fin_payment_request.TotalTransactionAmount,
		fin_payment_request.ApprovalStatus,
		fin_payment_request.ApprovalBy,
		fin_payment_request.ApprovalDate,
		fin_payment_request.RefNo,
		fin_payment_request.Remark
		FROM fin_payment_request
		INNER JOIN mst_branch ON fin_payment_request.BranchCode=mst_branch.Code
		INNER JOIN mst_currency ON fin_payment_request.CurrencyCode=mst_currency.Code
		WHERE fin_payment_request.Code LIKE ?
		AND fin_payment_request.RefNo LIKE ?
		AND fin_payment_request.Remark LIKE ?
		AND DATE(fin_payment_request.TransactionDate) BETWEEN DATE(?) AND (?)
		ORDER BY fin_payment_request.TransactionDate DESC,fin_payment_request.Code ASC
                LIMIT ?, ?"; 
            
	SET @prmCode = prmCode; 
	SET @prmRefNo = prmRefNo; 
	SET @prmRemark = prmRemark; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	SET @prmLimitFrom = prmLimitFrom; 
	SET @prmLimitUpTo = prmLimitUpTo; 
	EXECUTE STMT USING @prmCode,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_payment_request_list_count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_payment_request_list_count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_payment_request_list_count`(
	IN prmCode VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME
    )
BEGIN
	SELECT count(fin_payment_request.`Code`)
	FROM fin_payment_request
	INNER JOIN mst_branch ON fin_payment_request.BranchCode=mst_branch.Code
	INNER JOIN mst_currency ON fin_payment_request.CurrencyCode=mst_currency.Code
	WHERE fin_payment_request.Code LIKE prmCode
	AND fin_payment_request.RefNo LIKE prmRefNo
	AND fin_payment_request.Remark LIKE prmRemark
	AND DATE(fin_payment_request.TransactionDate) BETWEEN DATE(prmFirstDate) AND (prmLastDate);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_production_planning_approval_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_production_planning_approval_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_production_planning_approval_order_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(50),
	IN prmCustomerCode VARCHAR(50),
	IN prmCustomerName VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmDocumentType CHAR(10),
	IN prmApprovalStatus VARCHAR(50),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT
			COUNT(ppic_production_planning_order.`Code`)
		FROM ppic_production_planning_order
		INNER JOIN mst_branch ON ppic_production_planning_order.`BranchCode`=mst_branch.`Code`
		INNER JOIN `mst_customer` ON ppic_production_planning_order.`CustomerCode`=mst_customer.`Code`
		WHERE ppic_production_planning_order.`Code` LIKE prmCode
		AND ppic_production_planning_order.`CustomerCode` LIKE prmCustomerCode
		AND mst_customer.`Name` LIKE prmCustomerName
		AND ppic_production_planning_order.Remark LIKE prmRemark
		AND ppic_production_planning_order.RefNo LIKE prmRefNo
		AND ppic_production_planning_order.DocumentType LIKE prmDocumentType
		AND ppic_production_planning_order.ApprovalStatus LIKE prmApprovalStatus
		and ppic_production_planning_order.ClosingStatus = 'OPEN'
		AND DATE(ppic_production_planning_order.`TransactionDate`) BETWEEN prmFirstDate AND prmLastDate;
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			ppic_production_planning_order.`Code`,
			ppic_production_planning_order.`BranchCode`,
			mst_branch.`Name` AS BranchName,
			ppic_production_planning_order.`TransactionDate`,
			ppic_production_planning_order.`DocumentType`,
			ppic_production_planning_order.`DocumentCode`,
			ppic_production_planning_order.`TargetDate`,
			ppic_production_planning_order.`CustomerCode`,
			mst_customer.`Name` AS CustomerName,
			ppic_production_planning_order.`RefNo`,
			ppic_production_planning_order.`Remark`,
			ppic_production_planning_order.ApprovalStatus
		FROM ppic_production_planning_order
		INNER JOIN mst_branch ON ppic_production_planning_order.`BranchCode`=mst_branch.`Code`
		INNER JOIN `mst_customer` ON ppic_production_planning_order.`CustomerCode`=mst_customer.`Code`
		WHERE ppic_production_planning_order.`Code` LIKE ?
		AND ppic_production_planning_order.`CustomerCode` LIKE ?
		AND mst_customer.`Name` LIKE ?
		AND ppic_production_planning_order.Remark LIKE ?
		AND ppic_production_planning_order.RefNo LIKE ?
		AND ppic_production_planning_order.DocumentType LIKE ?
		AND ppic_production_planning_order.ApprovalStatus LIKE ?
		AND ppic_production_planning_order.ClosingStatus = 'OPEN'
		AND DATE(ppic_production_planning_order.`TransactionDate`) BETWEEN ? AND ?
		LIMIT ?, ?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName; 
		SET @prmRemark = prmRemark; 
		SET @prmRefNo = prmRefNo; 
		SET @prmDocumentType = prmDocumentType; 
		SET @prmApprovalStatus = prmApprovalStatus; 
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitUpTo = prmLimitUpTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmRemark,@prmRefNo,@prmDocumentType,@prmApprovalStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_production_planning_closing_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_production_planning_closing_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_production_planning_closing_order_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(50),
	IN prmCustomerCode VARCHAR(50),
	IN prmCustomerName VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmDocumentType CHAR(10),
	IN prmClosingStatus VARCHAR(50),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT
			COUNT(ppic_production_planning_order.`Code`)
		FROM ppic_production_planning_order
		INNER JOIN mst_branch ON ppic_production_planning_order.`BranchCode`=mst_branch.`Code`
		INNER JOIN `mst_customer` ON ppic_production_planning_order.`CustomerCode`=mst_customer.`Code`
		WHERE ppic_production_planning_order.`Code` LIKE prmCode
		AND ppic_production_planning_order.`CustomerCode` LIKE prmCustomerCode
		AND mst_customer.`Name` LIKE prmCustomerName
		AND ppic_production_planning_order.Remark LIKE prmRemark
		AND ppic_production_planning_order.RefNo LIKE prmRefNo
		AND ppic_production_planning_order.DocumentType LIKE prmDocumentType
		AND ppic_production_planning_order.ClosingStatus LIKE prmClosingStatus
		AND DATE(ppic_production_planning_order.`TransactionDate`) BETWEEN prmFirstDate AND prmLastDate;
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			ppic_production_planning_order.`Code`,
			ppic_production_planning_order.`BranchCode`,
			mst_branch.`Name` AS BranchName,
			ppic_production_planning_order.`TransactionDate`,
			ppic_production_planning_order.`DocumentType`,
			ppic_production_planning_order.`DocumentCode`,
			ppic_production_planning_order.`TargetDate`,
			ppic_production_planning_order.`CustomerCode`,
			mst_customer.`Name` AS CustomerName,
			ppic_production_planning_order.`RefNo`,
			ppic_production_planning_order.`Remark`,
			ppic_production_planning_order.ApprovalStatus,
			ppic_production_planning_order.ClosingStatus
		FROM ppic_production_planning_order
		INNER JOIN mst_branch ON ppic_production_planning_order.`BranchCode`=mst_branch.`Code`
		INNER JOIN `mst_customer` ON ppic_production_planning_order.`CustomerCode`=mst_customer.`Code`
		WHERE ppic_production_planning_order.`Code` LIKE ?
		AND ppic_production_planning_order.`CustomerCode` LIKE ?
		AND mst_customer.`Name` LIKE ?
		AND ppic_production_planning_order.Remark LIKE ?
		AND ppic_production_planning_order.RefNo LIKE ?
		AND ppic_production_planning_order.DocumentType LIKE ?
		AND ppic_production_planning_order.ClosingStatus LIKE ?
		AND DATE(ppic_production_planning_order.`TransactionDate`) BETWEEN ? AND ?
		LIMIT ?, ?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName; 
		SET @prmRemark = prmRemark; 
		SET @prmRefNo = prmRefNo; 
		SET @prmDocumentType = prmDocumentType; 
		SET @prmClosingStatus = prmClosingStatus; 
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitUpTo = prmLimitUpTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmRemark,@prmRefNo,@prmDocumentType,@prmClosingStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_production_planning_order_item_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_production_planning_order_item_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_production_planning_order_item_detail_list`(
	IN prmHeaderCode VARCHAR(50),
	IN prmDocumentType VARCHAR(50)
    )
BEGIN
	IF prmDocumentType='SO' THEN
		PREPARE STMT FROM 
		"SELECT
			ppic_production_planning_order_item_detail.DocumentSortNo,
			ppic_production_planning_order_item_detail.DocumentDetailCode,
			ppic_production_planning_order_item_detail.ItemFinishGoodsCode,
			sal_sales_quotation_detail.ValveTag, 
			sal_sales_quotation_detail.DataSheet, 
			sal_sales_quotation_detail.Description,
			
			IFNULL(mst_item_finish_goods.ItemBodyConstructionCode,'') AS itemBodyConstructionCode, 
			IFNULL(mst_item_body_construction.Name,'') AS itemBodyConstructionName, 
			IFNULL(mst_item_finish_goods.ItemTypeDesignCode,'') AS itemTypeDesignCode, 
			IFNULL(mst_item_type_design.Name,'') AS itemTypeDesignName, 
			IFNULL(mst_item_finish_goods.ItemSeatDesignCode,'') AS itemSeatDesignCode, 
			IFNULL(mst_item_seat_design.Name,'') AS itemSeatDesignName, 
			IFNULL(mst_item_finish_goods.ItemSizeCode,'') AS itemSizeCode, 
			IFNULL(mst_item_size.Name,'') AS itemSizeName, 
			IFNULL(mst_item_finish_goods.ItemRatingCode,'') AS itemRatingCode, 
			IFNULL(mst_item_rating.Name,'') AS itemRatingName, 
			IFNULL(mst_item_finish_goods.ItemBoreCode,'') AS itemBoreCode, 
			IFNULL(mst_item_bore.Name,'') AS itemBoreName, 

			IFNULL(mst_item_finish_goods.ItemEndConCode,'') AS itemEndConCode, 
			IFNULL(mst_item_end_con.Name,'') AS itemEndConName, 
			IFNULL(mst_item_finish_goods.ItemBodyCode,'') AS itemBodyCode, 
			IFNULL(mst_item_body.Name,'') AS itemBodyName, 
			IFNULL(mst_item_finish_goods.ItemBallCode,'') AS itemBallCode, 
			IFNULL(mst_item_ball.Name,'') AS itemBallName, 
			IFNULL(mst_item_finish_goods.ItemSeatCode,'') AS itemSeatCode, 
			IFNULL(mst_item_seat.Name,'') AS itemSeatName, 
			IFNULL(mst_item_finish_goods.ItemSeatInsertCode,'') AS itemSeatInsertCode, 
			IFNULL(mst_item_seat_insert.Name,'') AS itemSeatInsertName, 
			IFNULL(mst_item_finish_goods.ItemStemCode,'') AS itemStemCode, 
			IFNULL(mst_item_stem.Name,'') AS itemStemName, 

			IFNULL(mst_item_finish_goods.ItemSealCode,'') AS itemSealCode, 
			IFNULL(mst_item_seal.Name,'') AS itemSealName, 
			IFNULL(mst_item_finish_goods.ItemBoltCode,'') AS itemBoltCode, 
			IFNULL(mst_item_bolt.Name,'') AS itemBoltName, 
			IFNULL(mst_item_finish_goods.ItemDiscCode,'') AS itemDiscCode, 
			IFNULL(mst_item_disc.Name,'') AS itemDiscName, 
			IFNULL(mst_item_finish_goods.ItemPlatesCode,'') AS itemPlatesCode, 
			IFNULL(mst_item_plates.Name,'') AS itemPlatesName, 
			IFNULL(mst_item_finish_goods.ItemShaftCode,'') AS itemShaftCode, 
			IFNULL(mst_item_shaft.Name,'') AS itemShaftName, 
			IFNULL(mst_item_finish_goods.ItemSpringCode,'') AS itemSpringCode, 
			IFNULL(mst_item_spring.Name,'') ItemSpringName, 

			IFNULL(mst_item_finish_goods.ItemArmPinCode,'') AS itemArmPinCode, 
			IFNULL(mst_item_arm.Name,'') AS itemArmPinName, 
			IFNULL(mst_item_finish_goods.ItemBackSeatCode,'') AS itemBackSeatCode, 
			IFNULL(mst_item_backseat.Name,'') AS itemBackSeatName, 
			IFNULL(mst_item_finish_goods.ItemArmCode,'') AS itemArmCode, 
			IFNULL(mst_item_arm.Name,'') AS itemArmName, 
			IFNULL(mst_item_finish_goods.ItemHingePinCode,'') AS itemHingePinCode, 
			IFNULL(mst_item_hinge_pin.Name,'') AS itemHingePinName, 
			IFNULL(mst_item_finish_goods.ItemStopPinCode,'') AS itemStopPinCode, 
			IFNULL(mst_item_stop_pin.Name,'') AS itemStopPinName, 
			IFNULL(mst_item_finish_goods.ItemOperatorCode,'') AS itemOperatorCode, 
			IFNULL(mst_item_operator.Name,'') AS itemOperatorName, 
			
			sal_customer_sales_order_item_detail.Quantity AS orderQuantity,
			IFNULL(qr1.processedQty,0) AS processedQty,
			IFNULL(sal_customer_sales_order_item_detail.Quantity- IFNULL(qr1.processedQty,0),0)AS balancedQty,
			ppic_production_planning_order_item_detail.Quantity
			
		FROM ppic_production_planning_order_item_detail
		INNER JOIN sal_customer_sales_order_item_detail ON sal_customer_sales_order_item_detail.Code = ppic_production_planning_order_item_detail.DocumentDetailCode
		INNER JOIN sal_sales_quotation_detail ON sal_sales_quotation_detail.Code = sal_customer_sales_order_item_detail.SalesQuotationDetailCode

		INNER JOIN mst_item_finish_goods ON mst_item_finish_goods.code = sal_customer_sales_order_item_detail.ItemFinishGoodsCode 
		LEFT JOIN mst_item_body_construction ON mst_item_body_construction.Code = mst_item_finish_goods.ItemBodyConstructionCode 
		LEFT JOIN mst_item_type_design ON mst_item_type_design.Code = mst_item_finish_goods.ItemTypeDesignCode 
		LEFT JOIN mst_item_seat_design ON mst_item_seat_design.Code = mst_item_finish_goods.ItemSeatDesignCode 
		LEFT JOIN mst_item_size ON mst_item_size.Code = mst_item_finish_goods.ItemSizeCode 
		LEFT JOIN mst_item_rating ON mst_item_rating.Code = mst_item_finish_goods.ItemRatingCode 
		LEFT JOIN mst_item_bore ON mst_item_bore.Code = mst_item_finish_goods.ItemBoreCode 

		LEFT JOIN mst_item_end_con ON mst_item_end_con.Code = mst_item_finish_goods.ItemEndConCode 
		LEFT JOIN mst_item_body ON mst_item_body.Code = mst_item_finish_goods.ItemBodyCode 
		LEFT JOIN mst_item_ball ON mst_item_ball.Code = mst_item_finish_goods.ItemBallCode 
		LEFT JOIN mst_item_seat ON mst_item_seat.Code = mst_item_finish_goods.ItemSeatCode 
		LEFT JOIN mst_item_seat_insert ON mst_item_seat_insert.Code = mst_item_finish_goods.ItemSeatInsertCode 
		LEFT JOIN mst_item_stem ON mst_item_stem.Code = mst_item_finish_goods.ItemStemCode 

		LEFT JOIN mst_item_seal ON mst_item_seal.Code = mst_item_finish_goods.ItemSealCode 
		LEFT JOIN mst_item_bolt ON mst_item_bolt.Code = mst_item_finish_goods.ItemBoltCode 
		LEFT JOIN mst_item_disc ON mst_item_disc.Code = mst_item_finish_goods.ItemDiscCode 
		LEFT JOIN mst_item_plates ON mst_item_plates.Code = mst_item_finish_goods.ItemPlatesCode 
		LEFT JOIN mst_item_shaft ON mst_item_shaft.Code = mst_item_finish_goods.ItemShaftCode 
		LEFT JOIN mst_item_spring ON mst_item_spring.Code = mst_item_finish_goods.ItemSpringCode 

		LEFT JOIN mst_item_arm_pin ON mst_item_arm_pin.Code = mst_item_finish_goods.ItemArmPinCode 
		LEFT JOIN mst_item_backseat ON mst_item_backseat.Code = mst_item_finish_goods.ItemBackSeatCode 
		LEFT JOIN mst_item_arm ON mst_item_arm.Code = mst_item_finish_goods.ItemArmCode 
		LEFT JOIN mst_item_hinge_pin ON mst_item_hinge_pin.Code = mst_item_finish_goods.ItemHingePinCode 
		LEFT JOIN mst_item_stop_pin ON mst_item_stop_pin.Code = mst_item_finish_goods.ItemStopPinCode 
		LEFT JOIN mst_item_operator ON mst_item_operator.Code = mst_item_finish_goods.ItemOperatorCode 
		LEFT JOIN (
			SELECT 
				ppic_production_planning_order_item_detail.Code,
				ppic_production_planning_order_item_detail.DocumentDetailCode,
				SUM(ppic_production_planning_order_item_detail.Quantity) AS processedQty
			FROM
				ppic_production_planning_order_item_detail
			GROUP BY ppic_production_planning_order_item_detail.DocumentDetailCode,ppic_production_planning_order_item_detail.ItemFinishGoodsCode
		)qr1 ON qr1.DocumentDetailCode = sal_customer_sales_order_item_detail.Code
		WHERE ppic_production_planning_order_item_detail.`HeaderCode`=?";
		SET @prmHeaderCode = prmHeaderCode;  
		EXECUTE STMT USING @prmHeaderCode;
		DEALLOCATE PREPARE STMT;
		
	ELSEIF prmDocumentType='BO' THEN
		PREPARE STMT FROM 
		"SELECT
			ppic_production_planning_order_item_detail.HeaderCode,
			ppic_production_planning_order_item_detail.DocumentSortNo,
			ppic_production_planning_order_item_detail.DocumentDetailCode,
			ppic_production_planning_order_item_detail.ItemFinishGoodsCode,
			sal_sales_quotation_detail.ValveTag, 
			sal_sales_quotation_detail.DataSheet, 
			sal_sales_quotation_detail.Description,
			
			IFNULL(mst_item_finish_goods.ItemBodyConstructionCode,'') AS itemBodyConstructionCode, 
			IFNULL(mst_item_body_construction.Name,'') AS itemBodyConstructionName, 
			IFNULL(mst_item_finish_goods.ItemTypeDesignCode,'') AS itemTypeDesignCode, 
			IFNULL(mst_item_type_design.Name,'') AS itemTypeDesignName, 
			IFNULL(mst_item_finish_goods.ItemSeatDesignCode,'') AS itemSeatDesignCode, 
			IFNULL(mst_item_seat_design.Name,'') AS itemSeatDesignName, 
			IFNULL(mst_item_finish_goods.ItemSizeCode,'') AS itemSizeCode, 
			IFNULL(mst_item_size.Name,'') AS itemSizeName, 
			IFNULL(mst_item_finish_goods.ItemRatingCode,'') AS itemRatingCode, 
			IFNULL(mst_item_rating.Name,'') AS itemRatingName, 
			IFNULL(mst_item_finish_goods.ItemBoreCode,'') AS itemBoreCode, 
			IFNULL(mst_item_bore.Name,'') AS itemBoreName, 

			IFNULL(mst_item_finish_goods.ItemEndConCode,'') AS itemEndConCode, 
			IFNULL(mst_item_end_con.Name,'') AS itemEndConName, 
			IFNULL(mst_item_finish_goods.ItemBodyCode,'') AS itemBodyCode, 
			IFNULL(mst_item_body.Name,'') AS itemBodyName, 
			IFNULL(mst_item_finish_goods.ItemBallCode,'') AS itemBallCode, 
			IFNULL(mst_item_ball.Name,'') AS itemBallName, 
			IFNULL(mst_item_finish_goods.ItemSeatCode,'') AS itemSeatCode, 
			IFNULL(mst_item_seat.Name,'') AS itemSeatName, 
			IFNULL(mst_item_finish_goods.ItemSeatInsertCode,'') AS itemSeatInsertCode, 
			IFNULL(mst_item_seat_insert.Name,'') AS itemSeatInsertName, 
			IFNULL(mst_item_finish_goods.ItemStemCode,'') AS itemStemCode, 
			IFNULL(mst_item_stem.Name,'') AS itemStemName, 

			IFNULL(mst_item_finish_goods.ItemSealCode,'') AS itemSealCode, 
			IFNULL(mst_item_seal.Name,'') AS itemSealName, 
			IFNULL(mst_item_finish_goods.ItemBoltCode,'') AS itemBoltCode, 
			IFNULL(mst_item_bolt.Name,'') AS itemBoltName, 
			IFNULL(mst_item_finish_goods.ItemDiscCode,'') AS itemDiscCode, 
			IFNULL(mst_item_disc.Name,'') AS itemDiscName, 
			IFNULL(mst_item_finish_goods.ItemPlatesCode,'') AS itemPlatesCode, 
			IFNULL(mst_item_plates.Name,'') AS itemPlatesName, 
			IFNULL(mst_item_finish_goods.ItemShaftCode,'') AS itemShaftCode, 
			IFNULL(mst_item_shaft.Name,'') AS itemShaftName, 
			IFNULL(mst_item_finish_goods.ItemSpringCode,'') AS itemSpringCode, 
			IFNULL(mst_item_spring.Name,'') ItemSpringName, 

			IFNULL(mst_item_finish_goods.ItemArmPinCode,'') AS itemArmPinCode, 
			IFNULL(mst_item_arm.Name,'') AS itemArmPinName, 
			IFNULL(mst_item_finish_goods.ItemBackSeatCode,'') AS itemBackSeatCode, 
			IFNULL(mst_item_backseat.Name,'') AS itemBackSeatName, 
			IFNULL(mst_item_finish_goods.ItemArmCode,'') AS itemArmCode, 
			IFNULL(mst_item_arm.Name,'') AS itemArmName, 
			IFNULL(mst_item_finish_goods.ItemHingePinCode,'') AS itemHingePinCode, 
			IFNULL(mst_item_hinge_pin.Name,'') AS itemHingePinName, 
			IFNULL(mst_item_finish_goods.ItemStopPinCode,'') AS itemStopPinCode, 
			IFNULL(mst_item_stop_pin.Name,'') AS itemStopPinName, 
			IFNULL(mst_item_finish_goods.ItemOperatorCode,'') AS itemOperatorCode, 
			IFNULL(mst_item_operator.Name,'') AS itemOperatorName, 
			
			sal_customer_blanket_order_item_detail.Quantity AS orderQuantity,
			IFNULL(qr1.processedQty,0) AS processedQty,
			IFNULL(sal_customer_blanket_order_item_detail.Quantity- IFNULL(qr1.processedQty,0),0)AS balancedQty,
			ppic_production_planning_order_item_detail.Quantity
			
		FROM ppic_production_planning_order_item_detail
		INNER JOIN sal_customer_blanket_order_item_detail ON sal_customer_blanket_order_item_detail.Code = ppic_production_planning_order_item_detail.DocumentDetailCode
		INNER JOIN sal_sales_quotation_detail ON sal_sales_quotation_detail.Code = sal_customer_blanket_order_item_detail.SalesQuotationDetailCode

		INNER JOIN mst_item_finish_goods ON mst_item_finish_goods.code = sal_customer_blanket_order_item_detail.ItemFinishGoodsCode 
		LEFT JOIN mst_item_body_construction ON mst_item_body_construction.Code = mst_item_finish_goods.ItemBodyConstructionCode 
		LEFT JOIN mst_item_type_design ON mst_item_type_design.Code = mst_item_finish_goods.ItemTypeDesignCode 
		LEFT JOIN mst_item_seat_design ON mst_item_seat_design.Code = mst_item_finish_goods.ItemSeatDesignCode 
		LEFT JOIN mst_item_size ON mst_item_size.Code = mst_item_finish_goods.ItemSizeCode 
		LEFT JOIN mst_item_rating ON mst_item_rating.Code = mst_item_finish_goods.ItemRatingCode 
		LEFT JOIN mst_item_bore ON mst_item_bore.Code = mst_item_finish_goods.ItemBoreCode 

		LEFT JOIN mst_item_end_con ON mst_item_end_con.Code = mst_item_finish_goods.ItemEndConCode 
		LEFT JOIN mst_item_body ON mst_item_body.Code = mst_item_finish_goods.ItemBodyCode 
		LEFT JOIN mst_item_ball ON mst_item_ball.Code = mst_item_finish_goods.ItemBallCode 
		LEFT JOIN mst_item_seat ON mst_item_seat.Code = mst_item_finish_goods.ItemSeatCode 
		LEFT JOIN mst_item_seat_insert ON mst_item_seat_insert.Code = mst_item_finish_goods.ItemSeatInsertCode 
		LEFT JOIN mst_item_stem ON mst_item_stem.Code = mst_item_finish_goods.ItemStemCode 

		LEFT JOIN mst_item_seal ON mst_item_seal.Code = mst_item_finish_goods.ItemSealCode 
		LEFT JOIN mst_item_bolt ON mst_item_bolt.Code = mst_item_finish_goods.ItemBoltCode 
		LEFT JOIN mst_item_disc ON mst_item_disc.Code = mst_item_finish_goods.ItemDiscCode 
		LEFT JOIN mst_item_plates ON mst_item_plates.Code = mst_item_finish_goods.ItemPlatesCode 
		LEFT JOIN mst_item_shaft ON mst_item_shaft.Code = mst_item_finish_goods.ItemShaftCode 
		LEFT JOIN mst_item_spring ON mst_item_spring.Code = mst_item_finish_goods.ItemSpringCode 

		LEFT JOIN mst_item_arm_pin ON mst_item_arm_pin.Code = mst_item_finish_goods.ItemArmPinCode 
		LEFT JOIN mst_item_backseat ON mst_item_backseat.Code = mst_item_finish_goods.ItemBackSeatCode 
		LEFT JOIN mst_item_arm ON mst_item_arm.Code = mst_item_finish_goods.ItemArmCode 
		LEFT JOIN mst_item_hinge_pin ON mst_item_hinge_pin.Code = mst_item_finish_goods.ItemHingePinCode 
		LEFT JOIN mst_item_stop_pin ON mst_item_stop_pin.Code = mst_item_finish_goods.ItemStopPinCode 
		LEFT JOIN mst_item_operator ON mst_item_operator.Code = mst_item_finish_goods.ItemOperatorCode 
		LEFT JOIN (
			SELECT 
				ppic_production_planning_order_item_detail.Code,
				ppic_production_planning_order_item_detail.DocumentDetailCode,
				SUM(ppic_production_planning_order_item_detail.Quantity) AS processedQty
			FROM
				ppic_production_planning_order_item_detail
			GROUP BY ppic_production_planning_order_item_detail.DocumentDetailCode,ppic_production_planning_order_item_detail.ItemFinishGoodsCode
		)qr1 ON qr1.DocumentDetailCode = sal_customer_blanket_order_item_detail.Code
		WHERE ppic_production_planning_order_item_detail.`HeaderCode`=?";
		SET @prmHeaderCode = prmHeaderCode;  
		EXECUTE STMT USING @prmHeaderCode;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_production_planning_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_production_planning_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_production_planning_order_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(50),
	IN prmCustomerCode VARCHAR(50),
	IN prmCustomerName VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmDocumentType CHAR(10),
	IN prmApprovalStatus VARCHAR(50),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitUpTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT
			COUNT(ppic_production_planning_order.`Code`)
		FROM ppic_production_planning_order
		INNER JOIN mst_branch ON ppic_production_planning_order.`BranchCode`=mst_branch.`Code`
		INNER JOIN `mst_customer` ON ppic_production_planning_order.`CustomerCode`=mst_customer.`Code`
		WHERE ppic_production_planning_order.`Code` LIKE prmCode
		AND ppic_production_planning_order.`CustomerCode` LIKE prmCustomerCode
		AND mst_customer.`Name` LIKE prmCustomerName
		AND ppic_production_planning_order.Remark LIKE prmRemark
		AND ppic_production_planning_order.RefNo like prmRefNo
		AND ppic_production_planning_order.DocumentType Like prmDocumentType
		AND ppic_production_planning_order.ApprovalStatus LIKE prmApprovalStatus
		and ppic_production_planning_order.ClosingStatus = 'OPEN'
		AND DATE(ppic_production_planning_order.`TransactionDate`) BETWEEN prmFirstDate AND prmLastDate;
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			ppic_production_planning_order.`Code`,
			ppic_production_planning_order.`BranchCode`,
			mst_branch.`Name` AS BranchName,
			ppic_production_planning_order.`TransactionDate`,
			ppic_production_planning_order.`DocumentType`,
			ppic_production_planning_order.`DocumentCode`,
			ppic_production_planning_order.`TargetDate`,
			ppic_production_planning_order.`CustomerCode`,
			mst_customer.`Name` AS CustomerName,
			ppic_production_planning_order.`RefNo`,
			ppic_production_planning_order.`Remark`,
			ppic_production_planning_order.ApprovalStatus
		FROM ppic_production_planning_order
		INNER JOIN mst_branch ON ppic_production_planning_order.`BranchCode`=mst_branch.`Code`
		INNER JOIN `mst_customer` ON ppic_production_planning_order.`CustomerCode`=mst_customer.`Code`
		WHERE ppic_production_planning_order.`Code` LIKE ?
		AND ppic_production_planning_order.`CustomerCode` LIKE ?
		AND mst_customer.`Name` LIKE ?
		AND ppic_production_planning_order.Remark LIKE ?
		AND ppic_production_planning_order.RefNo LIKE ?
		AND ppic_production_planning_order.DocumentType LIKE ?
		AND ppic_production_planning_order.ApprovalStatus LIKE ?
		AND ppic_production_planning_order.ClosingStatus = 'OPEN'
		AND DATE(ppic_production_planning_order.`TransactionDate`) BETWEEN ? AND ?
		LIMIT ?, ?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName; 
		SET @prmRemark = prmRemark; 
		SET @prmRefNo = prmRefNo; 
		SET @prmDocumentType = prmDocumentType; 
		SET @prmApprovalStatus = prmApprovalStatus; 
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitUpTo = prmLimitUpTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmRemark,@prmRefNo,@prmDocumentType,@prmApprovalStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitUpTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_production_planning_order_search_document_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_production_planning_order_search_document_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_production_planning_order_search_document_detail_list`(
	IN prmHeaderCode VARCHAR(50),
	IN prmDocumentType VARCHAR(50)
    )
BEGIN
	IF prmDocumentType='SO' THEN
		PREPARE STMT FROM 
		"SELECT  
			sal_customer_sales_order_item_detail.Code, 
			sal_customer_sales_order_item_detail.CustomerPurchaseOrderSortNo, 
			sal_customer_sales_order_item_detail.ItemFinishGoodsCode, 
			sal_customer_sales_order_item_detail.Quantity, 

			sal_sales_quotation_detail.ValveTag, 
			sal_sales_quotation_detail.DataSheet, 
			sal_sales_quotation_detail.Description, 

			IFNULL(mst_item_finish_goods.ItemBodyConstructionCode,'') AS itemBodyConstructionCode,  
			IFNULL(mst_item_body_construction.Name,'') AS itemBodyConstructionName,  
			IFNULL(mst_item_finish_goods.ItemTypeDesignCode,'') AS itemTypeDesignCode,  
			IFNULL(mst_item_type_design.Name,'') AS itemTypeDesignName,  
			IFNULL(mst_item_finish_goods.ItemSeatDesignCode,'') AS itemSeatDesignCode,  
			IFNULL(mst_item_seat_design.Name,'') AS itemSeatDesignName,  
			IFNULL(mst_item_finish_goods.ItemSizeCode,'') AS itemSizeCode,  
			IFNULL(mst_item_size.Name,'') AS itemSizeName,  
			IFNULL(mst_item_finish_goods.ItemRatingCode,'') AS itemRatingCode,  
			IFNULL(mst_item_rating.Name,'') AS itemRatingName,  
			IFNULL(mst_item_finish_goods.ItemBoreCode,'') AS itemBoreCode,  
			IFNULL(mst_item_bore.Name,'') AS itemBoreName,  

			IFNULL(mst_item_finish_goods.ItemEndConCode,'') AS itemEndConCode,  
			IFNULL(mst_item_end_con.Name,'') AS itemEndConName,  
			IFNULL(mst_item_finish_goods.ItemBodyCode,'') AS itemBodyCode,  
			IFNULL(mst_item_body.Name,'') AS itemBodyName,  
			IFNULL(mst_item_finish_goods.ItemBallCode,'') AS itemBallCode,  
			IFNULL(mst_item_ball.Name,'') AS itemBallName,  
			IFNULL(mst_item_finish_goods.ItemSeatCode,'') AS itemSeatCode,  
			IFNULL(mst_item_seat.Name,'') AS itemSeatName,  
			IFNULL(mst_item_finish_goods.ItemSeatInsertCode,'') AS itemSeatInsertCode,  
			IFNULL(mst_item_seat_insert.Name,'') AS itemSeatInsertName,  
			IFNULL(mst_item_finish_goods.ItemStemCode,'') AS itemStemCode,  
			IFNULL(mst_item_stem.Name,'') AS itemStemName,  

			IFNULL(mst_item_finish_goods.ItemSealCode,'') AS itemSealCode,  
			IFNULL(mst_item_seal.Name,'') AS itemSealName,  
			IFNULL(mst_item_finish_goods.ItemBoltCode,'') AS itemBoltCode,  
			IFNULL(mst_item_bolt.Name,'') AS itemBoltName,  
			IFNULL(mst_item_finish_goods.ItemDiscCode,'') AS itemDiscCode,  
			IFNULL(mst_item_disc.Name,'') AS itemDiscName,  
			IFNULL(mst_item_finish_goods.ItemPlatesCode,'') AS itemPlatesCode,  
			IFNULL(mst_item_plates.Name,'') AS itemPlatesName,  
			IFNULL(mst_item_finish_goods.ItemShaftCode,'') AS itemShaftCode,  
			IFNULL(mst_item_shaft.Name,'') AS itemShaftName,  
			IFNULL(mst_item_finish_goods.ItemSpringCode,'') AS itemSpringCode,  
			IFNULL(mst_item_spring.Name,'') ItemSpringName,  

			IFNULL(mst_item_finish_goods.ItemArmPinCode,'') AS itemArmPinCode,  
			IFNULL(mst_item_arm.Name,'') AS itemArmPinName,  
			IFNULL(mst_item_finish_goods.ItemBackSeatCode,'') AS itemBackSeatCode,  
			IFNULL(mst_item_backseat.Name,'') AS itemBackSeatName,  
			IFNULL(mst_item_finish_goods.ItemArmCode,'') AS itemArmCode,  
			IFNULL(mst_item_arm.Name,'') AS itemArmName,  
			IFNULL(mst_item_finish_goods.ItemHingePinCode,'') AS itemHingePinCode,  
			IFNULL(mst_item_hinge_pin.Name,'') AS itemHingePinName,  
			IFNULL(mst_item_finish_goods.ItemStopPinCode,'') AS itemStopPinCode,  
			IFNULL(mst_item_stop_pin.Name,'') AS itemStopPinName,  
			IFNULL(mst_item_finish_goods.ItemOperatorCode,'') AS itemOperatorCode,  
			IFNULL(mst_item_operator.Name,'') AS itemOperatorName,
			
			IFNULL(qr1.processedQty,0) AS processedQty, 
			IFNULL(sal_customer_sales_order_item_detail.Quantity- IFNULL(qr1.processedQty,0),0)AS balancedQty
			 
		FROM sal_customer_sales_order_item_detail  
			INNER JOIN mst_item_finish_goods ON mst_item_finish_goods.code = sal_customer_sales_order_item_detail.ItemFinishGoodsCode  
			INNER JOIN sal_sales_quotation_detail ON sal_sales_quotation_detail.Code = sal_customer_sales_order_item_detail.SalesQuotationDetailCode  

			LEFT JOIN mst_item_body_construction ON mst_item_body_construction.Code = mst_item_finish_goods.ItemBodyConstructionCode  
			LEFT JOIN mst_item_type_design ON mst_item_type_design.Code = mst_item_finish_goods.ItemTypeDesignCode  
			LEFT JOIN mst_item_seat_design ON mst_item_seat_design.Code = mst_item_finish_goods.ItemSeatDesignCode  
			LEFT JOIN mst_item_size ON mst_item_size.Code = mst_item_finish_goods.ItemSizeCode  
			LEFT JOIN mst_item_rating ON mst_item_rating.Code = mst_item_finish_goods.ItemRatingCode  
			LEFT JOIN mst_item_bore ON mst_item_bore.Code = mst_item_finish_goods.ItemBoreCode  

			LEFT JOIN mst_item_end_con ON mst_item_end_con.Code = mst_item_finish_goods.ItemEndConCode  
			LEFT JOIN mst_item_body ON mst_item_body.Code = mst_item_finish_goods.ItemBodyCode  
			LEFT JOIN mst_item_ball ON mst_item_ball.Code = mst_item_finish_goods.ItemBallCode   
			LEFT JOIN mst_item_seat ON mst_item_seat.Code = mst_item_finish_goods.ItemSeatCode  
			LEFT JOIN mst_item_seat_insert ON mst_item_seat_insert.Code = mst_item_finish_goods.ItemSeatInsertCode  
			LEFT JOIN mst_item_stem ON mst_item_stem.Code = mst_item_finish_goods.ItemStemCode  

			LEFT JOIN mst_item_seal ON mst_item_seal.Code = mst_item_finish_goods.ItemSealCode  
			LEFT JOIN mst_item_bolt ON mst_item_bolt.Code = mst_item_finish_goods.ItemBoltCode  
			LEFT JOIN mst_item_disc ON mst_item_disc.Code = mst_item_finish_goods.ItemDiscCode  
			LEFT JOIN mst_item_plates ON mst_item_plates.Code = mst_item_finish_goods.ItemPlatesCode  
			LEFT JOIN mst_item_shaft ON mst_item_shaft.Code = mst_item_finish_goods.ItemShaftCode  
			LEFT JOIN mst_item_spring ON mst_item_spring.Code = mst_item_finish_goods.ItemSpringCode  

			LEFT JOIN mst_item_arm_pin ON mst_item_arm_pin.Code = mst_item_finish_goods.ItemArmPinCode  
			LEFT JOIN mst_item_backseat ON mst_item_backseat.Code = mst_item_finish_goods.ItemBackSeatCode  
			LEFT JOIN mst_item_arm ON mst_item_arm.Code = mst_item_finish_goods.ItemArmCode  
			LEFT JOIN mst_item_hinge_pin ON mst_item_hinge_pin.Code = mst_item_finish_goods.ItemHingePinCode  
			LEFT JOIN mst_item_stop_pin ON mst_item_stop_pin.Code = mst_item_finish_goods.ItemStopPinCode  
			LEFT JOIN mst_item_operator ON mst_item_operator.Code = mst_item_finish_goods.ItemOperatorCode
			LEFT JOIN (
				SELECT 
					ppic_production_planning_order_item_detail.Code,
					ppic_production_planning_order_item_detail.DocumentDetailCode,
					SUM(ppic_production_planning_order_item_detail.Quantity) AS processedQty
				FROM
					ppic_production_planning_order_item_detail
				GROUP BY ppic_production_planning_order_item_detail.DocumentDetailCode,ppic_production_planning_order_item_detail.ItemFinishGoodsCode
			)qr1 ON qr1.DocumentDetailCode = sal_customer_sales_order_item_detail.Code 
		WHERE sal_customer_sales_order_item_detail.HeaderCode = ?";
		SET @prmHeaderCode = prmHeaderCode;  
		EXECUTE STMT USING @prmHeaderCode;
		DEALLOCATE PREPARE STMT;
		
	ELSEIF prmDocumentType='BO' THEN
		PREPARE STMT FROM 
		"SELECT  
			sal_customer_blanket_order_item_detail.Code, 
			sal_customer_blanket_order_item_detail.CustomerPurchaseOrderSortNo, 
			sal_customer_blanket_order_item_detail.ItemFinishGoodsCode, 
			sal_customer_blanket_order_item_detail.Quantity, 

			sal_sales_quotation_detail.ValveTag, 
			sal_sales_quotation_detail.DataSheet, 
			sal_sales_quotation_detail.Description, 

			IFNULL(mst_item_finish_goods.ItemBodyConstructionCode,'') AS itemBodyConstructionCode,  
			IFNULL(mst_item_body_construction.Name,'') AS itemBodyConstructionName,  
			IFNULL(mst_item_finish_goods.ItemTypeDesignCode,'') AS itemTypeDesignCode,  
			IFNULL(mst_item_type_design.Name,'') AS itemTypeDesignName,  
			IFNULL(mst_item_finish_goods.ItemSeatDesignCode,'') AS itemSeatDesignCode,  
			IFNULL(mst_item_seat_design.Name,'') AS itemSeatDesignName,  
			IFNULL(mst_item_finish_goods.ItemSizeCode,'') AS itemSizeCode,  
			IFNULL(mst_item_size.Name,'') AS itemSizeName,  
			IFNULL(mst_item_finish_goods.ItemRatingCode,'') AS itemRatingCode,  
			IFNULL(mst_item_rating.Name,'') AS itemRatingName,  
			IFNULL(mst_item_finish_goods.ItemBoreCode,'') AS itemBoreCode,  
			IFNULL(mst_item_bore.Name,'') AS itemBoreName,  

			IFNULL(mst_item_finish_goods.ItemEndConCode,'') AS itemEndConCode,  
			IFNULL(mst_item_end_con.Name,'') AS itemEndConName,  
			IFNULL(mst_item_finish_goods.ItemBodyCode,'') AS itemBodyCode,  
			IFNULL(mst_item_body.Name,'') AS itemBodyName,  
			IFNULL(mst_item_finish_goods.ItemBallCode,'') AS itemBallCode,  
			IFNULL(mst_item_ball.Name,'') AS itemBallName,  
			IFNULL(mst_item_finish_goods.ItemSeatCode,'') AS itemSeatCode,  
			IFNULL(mst_item_seat.Name,'') AS itemSeatName,  
			IFNULL(mst_item_finish_goods.ItemSeatInsertCode,'') AS itemSeatInsertCode,  
			IFNULL(mst_item_seat_insert.Name,'') AS itemSeatInsertName,  
			IFNULL(mst_item_finish_goods.ItemStemCode,'') AS itemStemCode,  
			IFNULL(mst_item_stem.Name,'') AS itemStemName,  

			IFNULL(mst_item_finish_goods.ItemSealCode,'') AS itemSealCode,  
			IFNULL(mst_item_seal.Name,'') AS itemSealName,  
			IFNULL(mst_item_finish_goods.ItemBoltCode,'') AS itemBoltCode,  
			IFNULL(mst_item_bolt.Name,'') AS itemBoltName,  
			IFNULL(mst_item_finish_goods.ItemDiscCode,'') AS itemDiscCode,  
			IFNULL(mst_item_disc.Name,'') AS itemDiscName,  
			IFNULL(mst_item_finish_goods.ItemPlatesCode,'') AS itemPlatesCode,  
			IFNULL(mst_item_plates.Name,'') AS itemPlatesName,  
			IFNULL(mst_item_finish_goods.ItemShaftCode,'') AS itemShaftCode,  
			IFNULL(mst_item_shaft.Name,'') AS itemShaftName,  
			IFNULL(mst_item_finish_goods.ItemSpringCode,'') AS itemSpringCode,  
			IFNULL(mst_item_spring.Name,'') ItemSpringName,  

			IFNULL(mst_item_finish_goods.ItemArmPinCode,'') AS itemArmPinCode,  
			IFNULL(mst_item_arm.Name,'') AS itemArmPinName,  
			IFNULL(mst_item_finish_goods.ItemBackSeatCode,'') AS itemBackSeatCode,  
			IFNULL(mst_item_backseat.Name,'') AS itemBackSeatName,  
			IFNULL(mst_item_finish_goods.ItemArmCode,'') AS itemArmCode,  
			IFNULL(mst_item_arm.Name,'') AS itemArmName,  
			IFNULL(mst_item_finish_goods.ItemHingePinCode,'') AS itemHingePinCode,  
			IFNULL(mst_item_hinge_pin.Name,'') AS itemHingePinName,  
			IFNULL(mst_item_finish_goods.ItemStopPinCode,'') AS itemStopPinCode,  
			IFNULL(mst_item_stop_pin.Name,'') AS itemStopPinName,  
			IFNULL(mst_item_finish_goods.ItemOperatorCode,'') AS itemOperatorCode,  
			IFNULL(mst_item_operator.Name,'') AS itemOperatorName,

			IFNULL(qr1.processedQty,0) AS processedQty, 
			IFNULL(sal_customer_blanket_order_item_detail.Quantity- IFNULL(qr1.processedQty,0),0)AS balancedQty
			 
		FROM sal_customer_blanket_order_item_detail  
			INNER JOIN mst_item_finish_goods ON mst_item_finish_goods.code = sal_customer_blanket_order_item_detail.ItemFinishGoodsCode  
			INNER JOIN sal_sales_quotation_detail ON sal_sales_quotation_detail.Code = sal_customer_blanket_order_item_detail.SalesQuotationDetailCode  

			LEFT JOIN mst_item_body_construction ON mst_item_body_construction.Code = mst_item_finish_goods.ItemBodyConstructionCode  
			LEFT JOIN mst_item_type_design ON mst_item_type_design.Code = mst_item_finish_goods.ItemTypeDesignCode  
			LEFT JOIN mst_item_seat_design ON mst_item_seat_design.Code = mst_item_finish_goods.ItemSeatDesignCode  
			LEFT JOIN mst_item_size ON mst_item_size.Code = mst_item_finish_goods.ItemSizeCode  
			LEFT JOIN mst_item_rating ON mst_item_rating.Code = mst_item_finish_goods.ItemRatingCode  
			LEFT JOIN mst_item_bore ON mst_item_bore.Code = mst_item_finish_goods.ItemBoreCode  

			LEFT JOIN mst_item_end_con ON mst_item_end_con.Code = mst_item_finish_goods.ItemEndConCode  
			LEFT JOIN mst_item_body ON mst_item_body.Code = mst_item_finish_goods.ItemBodyCode  
			LEFT JOIN mst_item_ball ON mst_item_ball.Code = mst_item_finish_goods.ItemBallCode   
			LEFT JOIN mst_item_seat ON mst_item_seat.Code = mst_item_finish_goods.ItemSeatCode  
			LEFT JOIN mst_item_seat_insert ON mst_item_seat_insert.Code = mst_item_finish_goods.ItemSeatInsertCode  
			LEFT JOIN mst_item_stem ON mst_item_stem.Code = mst_item_finish_goods.ItemStemCode  

			LEFT JOIN mst_item_seal ON mst_item_seal.Code = mst_item_finish_goods.ItemSealCode  
			LEFT JOIN mst_item_bolt ON mst_item_bolt.Code = mst_item_finish_goods.ItemBoltCode  
			LEFT JOIN mst_item_disc ON mst_item_disc.Code = mst_item_finish_goods.ItemDiscCode  
			LEFT JOIN mst_item_plates ON mst_item_plates.Code = mst_item_finish_goods.ItemPlatesCode  
			LEFT JOIN mst_item_shaft ON mst_item_shaft.Code = mst_item_finish_goods.ItemShaftCode  
			LEFT JOIN mst_item_spring ON mst_item_spring.Code = mst_item_finish_goods.ItemSpringCode  

			LEFT JOIN mst_item_arm_pin ON mst_item_arm_pin.Code = mst_item_finish_goods.ItemArmPinCode  
			LEFT JOIN mst_item_backseat ON mst_item_backseat.Code = mst_item_finish_goods.ItemBackSeatCode  
			LEFT JOIN mst_item_arm ON mst_item_arm.Code = mst_item_finish_goods.ItemArmCode  
			LEFT JOIN mst_item_hinge_pin ON mst_item_hinge_pin.Code = mst_item_finish_goods.ItemHingePinCode  
			LEFT JOIN mst_item_stop_pin ON mst_item_stop_pin.Code = mst_item_finish_goods.ItemStopPinCode  
			LEFT JOIN mst_item_operator ON mst_item_operator.Code = mst_item_finish_goods.ItemOperatorCode
			LEFT JOIN (
				SELECT 
					ppic_production_planning_order_item_detail.Code,
					ppic_production_planning_order_item_detail.DocumentDetailCode,
					SUM(ppic_production_planning_order_item_detail.Quantity) AS processedQty
				FROM
					ppic_production_planning_order_item_detail
				GROUP BY ppic_production_planning_order_item_detail.DocumentDetailCode,ppic_production_planning_order_item_detail.ItemFinishGoodsCode
			)qr1 ON qr1.DocumentDetailCode = sal_customer_blanket_order_item_detail.Code 
			WHERE sal_customer_blanket_order_item_detail.HeaderCode = ?";
		SET @prmHeaderCode = prmHeaderCode;  
		EXECUTE STMT USING @prmHeaderCode;
		DEALLOCATE PREPARE STMT;
		
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_purchase_order` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_purchase_order` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_purchase_order`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmVendorCode VARCHAR(50),
	IN prmVendorName VARCHAR(250),
	IN prmCurrencyCode VARCHAR(50),
	IN prmCurrencyName VARCHAR(250),
	IN prmRefNo VARCHAR(50),
	IN prmRemark VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
)
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT 
		COUNT(pur_purchase_order.Code)
		FROM pur_purchase_order
		INNER JOIN mst_branch ON mst_branch.Code = pur_purchase_order.BranchCode
		INNER JOIN mst_customer_jn_address billTo ON billTo.Code = pur_purchase_order.BillToCode
		INNER JOIN mst_customer_jn_address shipTo ON shipTo.Code = pur_purchase_order.ShipToCode
		INNER JOIN mst_payment_term ON mst_payment_term.Code = pur_purchase_order.PaymentTermCode
		INNER JOIN mst_currency ON mst_currency.Code = pur_purchase_order.CurrencyCode
		INNER JOIN mst_vendor ON mst_vendor.Code = pur_purchase_order.VendorCode
		LEFT JOIN mst_vendor_jn_contact ON mst_vendor.DefaultContactPersonCode = mst_vendor_jn_contact.Code
		INNER JOIN mst_chart_of_account ON mst_chart_of_account.Code = pur_purchase_order.DiscountChartOfAccountCode
		INNER JOIN mst_chart_of_account OtherFeeChartOfAccount ON OtherFeeChartOfAccount.Code = pur_purchase_order.OtherFeeChartOfAccountCode
		WHERE pur_purchase_order.`Code` LIKE prmCode
		AND pur_purchase_order.VendorCode LIKE prmVendorCode
		AND mst_vendor.`Name` LIKE prmVendorName
		AND pur_purchase_order.`CurrencyCode` LIKE prmCurrencyCode
		AND mst_currency.`Name` LIKE prmCurrencyName
		AND pur_purchase_order.RefNo LIKE prmRefNo
		AND pur_purchase_order.Remark LIKE prmRemark
		AND DATE(pur_purchase_order.`TransactionDate`) BETWEEN DATE(prmFirstDate) AND DATE(prmLastDate)
		AND pur_purchase_order.ClosingStatus = 'OPEN'
		ORDER BY DATE(pur_purchase_order.`TransactionDate`) ASC;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
		pur_purchase_order.Code,
		pur_purchase_order.TransactionDate,
		pur_purchase_order.BranchCode,
		mst_branch.name AS BranchName,
		pur_purchase_order.DeliveryDateStart,
		pur_purchase_order.DeliveryDateEnd,
		pur_purchase_order.PaymentTermCode,
		pur_purchase_order.CurrencyCode,
		mst_currency.name AS CurrencyName,
		pur_purchase_order.VendorCode,
		mst_vendor.name AS VendorName,
		mst_vendor.DefaultContactPersonCode AS DefaultContactPersonCode,
		mst_vendor.LocalImport AS vendorLocalImport,
		mst_vendor_jn_contact.Name AS vendorDefaultContactPersonName,
		pur_purchase_order.PenaltyStatus,
		pur_purchase_order.PenaltyPercent,
		pur_purchase_order.MaximumPenaltyPercent,
		pur_purchase_order.BillToCode,
		billTo.Name AS billToName,
		billTo.Address AS billToAddress,
		billTo.ContactPerson AS billToContactPerson,
		billTo.Phone1 AS billToPhone,
		pur_purchase_order.ShipToCode,
		shipTo.Name AS shipToName,
		shipTo.Address AS shipToAddress,
		shipTo.ContactPerson AS shipToContactPerson,
		shipTo.Phone1 AS shipToPhone,
		pur_purchase_order.RefNo,
		pur_purchase_order.Remark,
		pur_purchase_order.TotalTransactionAmount,
		pur_purchase_order.DiscountPercent,
		pur_purchase_order.DiscountAmount,
		pur_purchase_order.DiscountChartOfAccountCode,
		mst_chart_of_account.name AS DiscountChartOfAccountName,
		pur_purchase_order.DiscountDescription,
		pur_purchase_order.TaxBaseSubTotalAmount,
		pur_purchase_order.VATPercent,
		pur_purchase_order.VATAmount,
		pur_purchase_order.OtherFeeAmount,
		pur_purchase_order.OtherFeeChartOfAccountCode,
		OtherFeeChartOfAccount.name AS OtherFeeChartOfAccountName,
		pur_purchase_order.OtherFeeDescription,
		pur_purchase_order.GrandTotalAmount,
		pur_purchase_order.ApprovalStatus,
		pur_purchase_order.ApprovalRemark
		FROM 
		pur_purchase_order
		INNER JOIN mst_branch ON mst_branch.Code = pur_purchase_order.BranchCode
		INNER JOIN mst_customer_jn_address billTo ON billTo.Code = pur_purchase_order.BillToCode
		INNER JOIN mst_customer_jn_address shipTo ON shipTo.Code = pur_purchase_order.ShipToCode
		INNER JOIN mst_payment_term ON mst_payment_term.Code = pur_purchase_order.PaymentTermCode
		INNER JOIN mst_currency ON mst_currency.Code = pur_purchase_order.CurrencyCode
		INNER JOIN mst_vendor ON mst_vendor.Code = pur_purchase_order.VendorCode
		LEFT JOIN mst_vendor_jn_contact ON mst_vendor.DefaultContactPersonCode = mst_vendor_jn_contact.Code
		INNER JOIN mst_chart_of_account ON mst_chart_of_account.Code = pur_purchase_order.DiscountChartOfAccountCode
		INNER JOIN mst_chart_of_account OtherFeeChartOfAccount ON OtherFeeChartOfAccount.Code = pur_purchase_order.OtherFeeChartOfAccountCode
		WHERE pur_purchase_order.`Code` LIKE ?
		AND pur_purchase_order.VendorCode LIKE ?
		AND mst_vendor.`Name` LIKE ?
		AND pur_purchase_order.`CurrencyCode` LIKE ?
		AND mst_currency.`Name` LIKE ?
		AND pur_purchase_order.RefNo LIKE ?
		AND pur_purchase_order.Remark LIKE ?
		AND DATE(pur_purchase_order.`TransactionDate`) BETWEEN DATE(?) AND DATE(?)
		AND pur_purchase_order.ClosingStatus = 'OPEN'
		ORDER BY DATE(pur_purchase_order.`TransactionDate`) ASC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmVendorCode  = prmVendorCode; 
		SET @prmVendorName  = prmVendorName;
		set @prmCurrencyCode = prmCurrencyCode;
		SET @prmCurrencyName = prmCurrencyName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmVendorCode,@prmVendorName,@prmCurrencyCode,@prmCurrencyName,@prmRefNo,@prmRemark,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_purchase_order_additional_fee_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_purchase_order_additional_fee_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_purchase_order_additional_fee_list`(
	IN prmHeaderCode VARCHAR(250)
    )
BEGIN
	PREPARE STMT FROM "
	SELECT
	  pur_purchase_order_additional_fee.Code,
	  pur_purchase_order_additional_fee.HeaderCode,
	  pur_purchase_order_additional_fee.AdditionalFeeCode,
	  mst_additional_fee.Name AS AdditionalFeeName,
	  mst_additional_fee.PurchaseChartOfAccountCode,
	  mst_chart_of_account.Name AS PurchaseChartOfAccountName,
	  pur_purchase_order_additional_fee.Remark,
	  pur_purchase_order_additional_fee.Quantity,
	  pur_purchase_order_additional_fee.UnitCode AS UnitOfMeasureCode,
	  mst_unit_of_measure.Name AS UnitOfMeasureName,
	  pur_purchase_order_additional_fee.Price,
	  pur_purchase_order_additional_fee.Total
	FROM
	  pur_purchase_order_additional_fee
	  INNER JOIN pur_purchase_order ON pur_purchase_order.Code = pur_purchase_order_additional_fee.HeaderCode
	  INNER JOIN mst_additional_fee ON mst_additional_fee.Code = pur_purchase_order_additional_fee.AdditionalFeeCode
	  INNER JOIN mst_unit_of_measure ON mst_unit_of_measure.Code = pur_purchase_order_additional_fee.UnitCode
	  INNER JOIN mst_chart_of_account ON mst_chart_of_account.Code = mst_additional_fee.PurchaseChartOfAccountCode
	WHERE pur_purchase_order_additional_fee.HeaderCode = ? "; 
	
	SET @prmHeaderCode = prmHeaderCode; 
	EXECUTE STMT USING @prmHeaderCode;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_purchase_order_detail_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_purchase_order_detail_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_purchase_order_detail_list`(
	IN prmHeaderCode VARCHAR(250)
    )
BEGIN
	PREPARE STMT FROM "
	SELECT 
		pur_purchase_order_detail.code,
		pur_purchase_order_detail.headerCode,
		purchaseRequest.HeaderCode AS purchaseRequestCode,
		purchaseRequest.transactionDate AS purchaseRequestTransactionDate,
		purchaseRequest.unitOfMeasureCode,
		purchaseRequest.unitOfMeasureName,
		pur_purchase_order_detail.purchaseRequestDetailCode,
		pur_purchase_order_detail.documentDetailCode,
		pur_purchase_order_detail.itemMaterialCode,
		mst_item_material.name AS itemMaterialName,
		CASE 
			WHEN mst_item_material.SerialNoStatus = 1 THEN 'YES'
			WHEN mst_item_material.SerialNoStatus = 0 THEN 'NO'
		END AS itemMaterialSerialStatus,
		pur_purchase_order_detail.itemAlias,
		pur_purchase_order_detail.remark,
		pur_purchase_order_detail.quantity,
		pur_purchase_order_detail.bonusQuantity,
		pur_purchase_order_detail.price,
		pur_purchase_order_detail.discountPercent,
		pur_purchase_order_detail.discountAmount,
		pur_purchase_order_detail.nettPrice,
		pur_purchase_order_detail.totalAmount,
		pur_purchase_order_detail.deliveryDate
	FROM pur_purchase_order_detail
	INNER JOIN pur_purchase_order ON pur_purchase_order.Code = pur_purchase_order_detail.HeaderCode
	LEFT JOIN (
		
		SELECT
			pur_purchase_request_by_imr_detail.Code,
			pur_purchase_request_by_imr_detail.HeaderCode,
			pur_purchase_request_by_imr.transactionDate,
			pur_purchase_request_by_imr_detail.documentDetailCode,
			mst_item_material.Code AS itemMaterialCode,
			mst_item_material.Name AS itemMaterialName,
			mst_item_jn_current_stock.ItemCode,
			mst_item_jn_current_stock.ActualStock AS onHandStock,
			pur_purchase_request_by_imr_detail.Quantity,
			pur_purchase_request_by_imr_detail.Remark,
			mst_unit_of_measure.Code AS unitOfMeasureCode,
			mst_unit_of_measure.Name AS unitOfMeasureName 
		    FROM
			pur_purchase_request_by_imr_detail  
		    INNER JOIN 
			pur_purchase_request_by_imr
			    ON pur_purchase_request_by_imr.Code = pur_purchase_request_by_imr_detail.HeaderCode
		    INNER JOIN
			mst_item_material 
			    ON mst_item_material.Code = pur_purchase_request_by_imr_detail.ItemMaterialCode 
		    INNER JOIN
			mst_item_jn_current_stock 
			    ON mst_item_material.Code =  mst_item_jn_current_stock.ItemCode  
		    INNER JOIN
			mst_unit_of_measure 
			    ON mst_unit_of_measure.Code = mst_item_material.UnitOfMeasureCode 
			    
		    UNION ALL
		    
		    SELECT
			pur_purchase_request_non_imr_detail.Code,
			pur_purchase_request_non_imr_detail.HeaderCode,
			pur_purchase_request_non_imr.transactionDate,
			'No Doc' AS documentDetailCode,
			mst_item_material.Code AS itemMaterialCode,
			mst_item_material.Name AS itemMaterialName,
			mst_item_jn_current_stock.ItemCode,
			mst_item_jn_current_stock.ActualStock AS onHandStock,
			pur_purchase_request_non_imr_detail.Quantity,
			pur_purchase_request_non_imr_detail.Remark,
			mst_unit_of_measure.Code AS unitOfMeasureCode,
			mst_unit_of_measure.Name AS unitOfMeasureName 
		    FROM
			pur_purchase_request_non_imr_detail
		    INNER JOIN 
			pur_purchase_request_non_imr
			    ON pur_purchase_request_non_imr.Code = pur_purchase_request_non_imr_detail.HeaderCode	
		    INNER JOIN
			mst_item_material 
			    ON mst_item_material.Code = pur_purchase_request_non_imr_detail.ItemMaterialCode 
		    INNER JOIN
			mst_item_jn_current_stock 
			    ON mst_item_material.Code =  mst_item_jn_current_stock.ItemCode  
		    INNER JOIN
			mst_unit_of_measure 
			    ON mst_unit_of_measure.Code = mst_item_material.UnitOfMeasureCode) purchaseRequest ON purchaseRequest.code = pur_purchase_order_detail.purchaseRequestDetailCode
	INNER JOIN mst_item_material ON mst_item_material.Code = pur_purchase_order_detail.ItemMaterialCode
	WHERE pur_purchase_order_detail.HeaderCode = ? "; 
	SET @prmHeaderCode = prmHeaderCode; 
	EXECUTE STMT USING @prmHeaderCode;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_purchase_order_item_delivery_date_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_purchase_order_item_delivery_date_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_purchase_order_item_delivery_date_list`(
	IN prmHeaderCode VARCHAR(250)
    )
BEGIN
	PREPARE STMT FROM "
	SELECT 
	pur_purchase_order_item_delivery_date.Code,
	pur_purchase_order_item_delivery_date.HeaderCode,
	pur_purchase_order_item_delivery_date.ItemMaterialCode,
	mst_item_material.name AS itemMaterialName,
	pur_purchase_order_item_delivery_date.Quantity,
	pur_purchase_order_item_delivery_date.DeliveryDate
	FROM pur_purchase_order_item_delivery_date
	INNER JOIN pur_purchase_order ON pur_purchase_order.Code = pur_purchase_order_item_delivery_date.HeaderCode
	INNER JOIN mst_item_material ON mst_item_material.Code = pur_purchase_order_item_delivery_date.ItemMaterialCode
	WHERE pur_purchase_order_item_delivery_date.HeaderCode = ? "; 
	
	SET @prmHeaderCode = prmHeaderCode; 
	EXECUTE STMT USING @prmHeaderCode;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_purchase_order_purchase_request_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_purchase_order_purchase_request_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_purchase_order_purchase_request_list`(
	IN prmHeaderCode VARCHAR(250)
    )
BEGIN
	PREPARE STMT FROM "
	SELECT 
	pur_purchase_order_jn_purchase_request.Code,
	pur_purchase_order_jn_purchase_request.HeaderCode,
	pur_purchase_order_jn_purchase_request.BranchCode,
	mst_branch.name As branchName,
	pur_purchase_order_jn_purchase_request.PurchaseRequestCode,
	documentType.TransactionDate AS purchaseRequestTransactionDate,
	documentType.RefNo AS purchaseRequestRefNo,
	documentType.Remark AS purchaseRequestRemark,
	documentType.RequestBy AS purchaseRequestRequestBy,
	documentType.DocumentType AS purchaseRequestStatus
	FROM 
	pur_purchase_order_jn_purchase_request
	INNER JOIN pur_purchase_order ON pur_purchase_order.Code = pur_purchase_order_jn_purchase_request.HeaderCode
	LEFT JOIN (
		SELECT 
			   pur_purchase_request_non_imr.Code, 
			   'NON IMR' AS documentType,
			   pur_purchase_request_non_imr.TransactionDate,
			   pur_purchase_request_non_imr.branchCode AS branchCode, 
			   mst_branch.Name AS branchName, 
			   pur_purchase_request_non_imr.RequestBy, 
			   pur_purchase_request_non_imr.RefNo, 
			   pur_purchase_request_non_imr.Remark,
			   pur_purchase_request_non_imr.ApprovalStatus,
			   pur_purchase_request_non_imr.ClosingStatus 
			 FROM 
			   pur_purchase_request_non_imr
			 INNER JOIN mst_branch ON  mst_branch.code = pur_purchase_request_non_imr.branchCode
			 
			 UNION ALL
			 
			 SELECT 
			   pur_purchase_request_by_imr.Code, 
			   'IMR' AS documentType,
			   pur_purchase_request_by_imr.TransactionDate,
			   pur_purchase_request_by_imr.branchCode AS branchCode, 
			   mst_branch.Name AS branchName, 
			   pur_purchase_request_by_imr.RequestBy, 
			   pur_purchase_request_by_imr.RefNo, 
			   pur_purchase_request_by_imr.Remark,
			   pur_purchase_request_by_imr.ApprovalStatus,
			   pur_purchase_request_by_imr.ClosingStatus
			 FROM 
			   pur_purchase_request_by_imr
			 INNER JOIN mst_branch ON  mst_branch.code = pur_purchase_request_by_imr.branchCode 
	)documentType ON documentType.Code = pur_purchase_order_jn_purchase_request.PurchaseRequestCode
	INNER JOIN mst_branch ON mst_branch.code = pur_purchase_order_jn_purchase_request.BranchCode
	WHERE pur_purchase_order_jn_purchase_request.HeaderCode = ? "; 
	
	SET @prmHeaderCode = prmHeaderCode; 
	EXECUTE STMT USING @prmHeaderCode;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_purchase_order_sub_item_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_purchase_order_sub_item_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_purchase_order_sub_item_list`(
	IN prmHeaderCode VARCHAR(250)
    )
BEGIN
	PREPARE STMT FROM "
	SELECT 
	pur_purchase_order_sub_item_detail.Code,
	pur_purchase_order_sub_item_detail.HeaderCode,
	pur_purchase_order_sub_item_detail.DocumentDetailCode,
	pur_purchase_order_sub_item_detail.ItemMaterialRequestCode AS imrNo,
	pur_purchase_order_sub_item_detail.PurchaseRequestCode,
	pur_purchase_order_sub_item_detail.PartCode,
	pur_purchase_order_sub_item_detail.DrawingCode,
	pur_purchase_order_sub_item_detail.PurchaseOrderItemMaterialCode,
	mst_item_material.name AS PurchaseOrderItemMaterialName
	FROM 
	pur_purchase_order_sub_item_detail
	INNER JOIN pur_purchase_order ON pur_purchase_order.Code = pur_purchase_order_sub_item_detail.HeaderCode
	INNER JOIN mst_item_material ON mst_item_material.code = pur_purchase_order_sub_item_detail.PurchaseOrderItemMaterialCode
	LEFT JOIN (
		SELECT 
			   pur_purchase_request_non_imr.Code, 
			   'NON IMR' AS documentType,
			   pur_purchase_request_non_imr.TransactionDate,
			   pur_purchase_request_non_imr.branchCode AS branchCode, 
			   mst_branch.Name AS branchName, 
			   pur_purchase_request_non_imr.RequestBy, 
			   pur_purchase_request_non_imr.RefNo, 
			   pur_purchase_request_non_imr.Remark,
			   pur_purchase_request_non_imr.ApprovalStatus,
			   pur_purchase_request_non_imr.ClosingStatus 
			 FROM 
			   pur_purchase_request_non_imr
			 INNER JOIN mst_branch ON  mst_branch.code = pur_purchase_request_non_imr.branchCode
			 
			 UNION ALL
			 
			 SELECT 
			   pur_purchase_request_by_imr.Code, 
			   'IMR' AS documentType,
			   pur_purchase_request_by_imr.TransactionDate,
			   pur_purchase_request_by_imr.branchCode AS branchCode, 
			   mst_branch.Name AS branchName, 
			   pur_purchase_request_by_imr.RequestBy, 
			   pur_purchase_request_by_imr.RefNo, 
			   pur_purchase_request_by_imr.Remark,
			   pur_purchase_request_by_imr.ApprovalStatus,
			   pur_purchase_request_by_imr.ClosingStatus
			 FROM 
			   pur_purchase_request_by_imr
			 INNER JOIN mst_branch ON  mst_branch.code = pur_purchase_request_by_imr.branchCode 
	)documentType ON documentType.Code = pur_purchase_order_sub_item_detail.PurchaseRequestCode
	WHERE pur_purchase_order_sub_item_detail.HeaderCode = ? "; 
	
	SET @prmHeaderCode = prmHeaderCode; 
	EXECUTE STMT USING @prmHeaderCode;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_purchase_request_search_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_purchase_request_search_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_purchase_request_search_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
)
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT 
                COUNT(*)  
                FROM (SELECT 
			   pur_purchase_request_non_imr.Code, 
			   'NO IMR' AS documentType,
			   pur_purchase_request_non_imr.TransactionDate,
			   pur_purchase_request_non_imr.branchCode AS branchCode, 
			   mst_branch.Name AS branchName, 
			   pur_purchase_request_non_imr.RequestBy, 
			   pur_purchase_request_non_imr.RefNo, 
			   pur_purchase_request_non_imr.Remark,
			   pur_purchase_request_non_imr.ApprovalStatus,
			   pur_purchase_request_non_imr.ClosingStatus 
			 FROM 
			   pur_purchase_request_non_imr
			 INNER JOIN mst_branch ON  mst_branch.code = pur_purchase_request_non_imr.branchCode
			 
			 UNION ALL
			 
			 SELECT 
			   pur_purchase_request_by_imr.Code, 
			   'IMR' AS documentType,
			   pur_purchase_request_by_imr.TransactionDate,
			   pur_purchase_request_by_imr.branchCode AS branchCode, 
			   mst_branch.Name AS branchName, 
			   pur_purchase_request_by_imr.RequestBy, 
			   pur_purchase_request_by_imr.RefNo, 
			   pur_purchase_request_by_imr.Remark,
			   pur_purchase_request_by_imr.ApprovalStatus,
			   pur_purchase_request_by_imr.ClosingStatus
			 FROM 
			   pur_purchase_request_by_imr
			 INNER JOIN mst_branch ON  mst_branch.code = pur_purchase_request_by_imr.branchCode) purchaseRequest 
                WHERE purchaseRequest.code LIKE prmCode
                AND DATE(purchaseRequest.TransactionDate) BETWEEN prmFirstDate and prmLastDate
                and purchaseRequest.ClosingStatus='OPEN';
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		 "SELECT *
		  FROM(
			SELECT 
			   pur_purchase_request_non_imr.Code, 
			   'NON IMR' AS documentType,
			   pur_purchase_request_non_imr.TransactionDate,
			   pur_purchase_request_non_imr.branchCode AS branchCode, 
			   mst_branch.Name AS branchName, 
			   pur_purchase_request_non_imr.RequestBy, 
			   pur_purchase_request_non_imr.RefNo, 
			   pur_purchase_request_non_imr.Remark,
			   pur_purchase_request_non_imr.ApprovalStatus,
			   pur_purchase_request_non_imr.ClosingStatus 
			 FROM 
			   pur_purchase_request_non_imr
			 INNER JOIN mst_branch ON  mst_branch.code = pur_purchase_request_non_imr.branchCode
			 
			 UNION ALL
			 
			 SELECT 
			   pur_purchase_request_by_imr.Code, 
			   'IMR' AS documentType,
			   pur_purchase_request_by_imr.TransactionDate,
			   pur_purchase_request_by_imr.branchCode AS branchCode, 
			   mst_branch.Name AS branchName, 
			   pur_purchase_request_by_imr.RequestBy, 
			   pur_purchase_request_by_imr.RefNo, 
			   pur_purchase_request_by_imr.Remark,
			   pur_purchase_request_by_imr.ApprovalStatus,
			   pur_purchase_request_by_imr.ClosingStatus
			 FROM 
			   pur_purchase_request_by_imr
			 INNER JOIN mst_branch ON  mst_branch.code = pur_purchase_request_by_imr.branchCode) purchaseRequest
                  WHERE purchaseRequest.code LIKE ?
                  AND purchaseRequest.ClosingStatus='OPEN'
                  AND DATE(purchaseRequest.TransactionDate) BETWEEN ? AND ?
                  LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_sales_order_by_blanket_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_sales_order_by_blanket_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_sales_order_by_blanket_order_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmApprovalStatus VARCHAR(50),
	IN prmClosingStatus VARCHAR(10),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT COUNT(sal_customer_sales_order_by_blanket_order.Code)
		FROM sal_customer_sales_order_by_blanket_order
		INNER JOIN mst_currency ON sal_customer_sales_order_by_blanket_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_sales_order_by_blanket_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_sales_order_by_blanket_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_sales_order_by_blanket_order.SalesPersonCode=mst_sales_person.Code
		INNER JOIN mst_project ON sal_customer_sales_order_by_blanket_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_sales_order_by_blanket_order.BranchCode
		LEFT JOIN mst_reason ON sal_customer_sales_order_by_blanket_order.ApprovalReasonCode=mst_reason.Code
		WHERE sal_customer_sales_order_by_blanket_order.ValidStatus=1
			AND sal_customer_sales_order_by_blanket_order.Code LIKE prmCode
			AND sal_customer_sales_order_by_blanket_order.CustomerCode LIKE prmCustomerCode
			AND mst_customer.Name LIKE prmCustomerName
			AND sal_customer_sales_order_by_blanket_order.RefNo LIKE prmRefNo
			AND sal_customer_sales_order_by_blanket_order.Remark LIKE prmRemark
			AND sal_customer_sales_order_by_blanket_order.ApprovalStatus LIKE prmApprovalStatus  
			AND sal_customer_sales_order_by_blanket_order.ClosingStatus LIKE prmClosingStatus
			AND DATE(sal_customer_sales_order_by_blanket_order.TransactionDate) BETWEEN prmFirstDate AND prmLastDate;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_sales_order_by_blanket_order.Code,
			sal_customer_sales_order_by_blanket_order.CUSTSONo,
			sal_customer_sales_order_by_blanket_order.Revision,
			sal_customer_sales_order_by_blanket_order.RevisionRemark,
			sal_customer_sales_order_by_blanket_order.RefCUSTSOCode,
			sal_customer_sales_order_by_blanket_order.TransactionDate,
			sal_customer_sales_order_by_blanket_order.BlanketOrderCode,
			sal_customer_sales_order_by_blanket_order.BranchCode AS branchCode,
			mst_branch.Name AS branchName,
			sal_customer_sales_order_by_blanket_order.RequestDeliveryDate,
			sal_customer_sales_order_by_blanket_order.ExpiredDate,
			sal_customer_sales_order_by_blanket_order.CustomerCode,
			mst_customer.Name AS CustomerName,
			sal_customer_sales_order_by_blanket_order.EndUserCode,
			EndUser.Name AS EndUserName,
			sal_customer_sales_order_by_blanket_order.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			sal_customer_sales_order_by_blanket_order.SalesPersonCode,
			mst_sales_person.Name AS SalesPersonName,
			sal_customer_sales_order_by_blanket_order.ProjectCode,
			mst_project.Name AS ProjectName,
			sal_customer_sales_order_by_blanket_order.RefNo,
			sal_customer_sales_order_by_blanket_order.Remark,
			sal_customer_sales_order_by_blanket_order.TotalTransactionAmount,
			sal_customer_sales_order_by_blanket_order.DiscountPercent,
			sal_customer_sales_order_by_blanket_order.DiscountAmount,
			(SELECT fn_getAdditionalFee(sal_customer_sales_order_by_blanket_order.Code,'SODBOD'))AS TotalAdditionalFeeAmount,
			sal_customer_sales_order_by_blanket_order.TaxBaseAmount,
			sal_customer_sales_order_by_blanket_order.Vatpercent,
			sal_customer_sales_order_by_blanket_order.Vatamount,
			sal_customer_sales_order_by_blanket_order.GrandTotalAmount,
			sal_customer_sales_order_by_blanket_order.ApprovalStatus,
			sal_customer_sales_order_by_blanket_order.ApprovalBy,
			sal_customer_sales_order_by_blanket_order.ApprovalDate,
			sal_customer_sales_order_by_blanket_order.ApprovalRemark,
			sal_customer_sales_order_by_blanket_order.ApprovalReasonCode,
			mst_reason.Name AS ApprovalReasonName,
			sal_customer_sales_order_by_blanket_order.ClosingStatus,
			sal_customer_sales_order_by_blanket_order.ClosingBy,
			sal_customer_sales_order_by_blanket_order.ClosingDate
		FROM sal_customer_sales_order_by_blanket_order
		INNER JOIN mst_currency ON sal_customer_sales_order_by_blanket_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_sales_order_by_blanket_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_sales_order_by_blanket_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_sales_order_by_blanket_order.SalesPersonCode=mst_sales_person.Code
		INNER JOIN mst_project ON sal_customer_sales_order_by_blanket_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_sales_order_by_blanket_order.BranchCode
		LEFT JOIN mst_reason ON sal_customer_sales_order_by_blanket_order.ApprovalReasonCode=mst_reason.Code
		WHERE sal_customer_sales_order_by_blanket_order.ValidStatus=1
			AND sal_customer_sales_order_by_blanket_order.Code LIKE ?
			AND sal_customer_sales_order_by_blanket_order.CustomerCode LIKE ?
			AND mst_customer.Name LIKE ?
			AND sal_customer_sales_order_by_blanket_order.RefNo LIKE ?
			AND sal_customer_sales_order_by_blanket_order.Remark LIKE ?
			AND sal_customer_sales_order_by_blanket_order.ApprovalStatus LIKE ?
			AND sal_customer_sales_order_by_blanket_order.ClosingStatus LIKE ?
			AND DATE(sal_customer_sales_order_by_blanket_order.TransactionDate) BETWEEN ? AND ?
		ORDER BY sal_customer_sales_order_by_blanket_order.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		SET @prmApprovalStatus = prmApprovalStatus;
		SET @prmClosingStatus=prmClosingStatus;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmRefNo,@prmRemark,@prmApprovalStatus,@prmClosingStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_sales_order_by_customer_purchase_order_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_sales_order_by_customer_purchase_order_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_sales_order_by_customer_purchase_order_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmApprovalStatus VARCHAR(50),
	IN prmClosingStatus VARCHAR(10),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT COUNT(sal_customer_sales_order.Code)
		FROM sal_customer_sales_order
		INNER JOIN mst_currency ON sal_customer_sales_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_sales_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_sales_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_sales_order.SalesPersonCode=mst_sales_person.Code
		left JOIN mst_project ON sal_customer_sales_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_sales_order.BranchCode
		LEFT JOIN mst_reason ON sal_customer_sales_order.ApprovalReasonCode=mst_reason.Code
		WHERE sal_customer_sales_order.ValidStatus=1
			AND sal_customer_sales_order.Code LIKE prmCode
			AND sal_customer_sales_order.CustomerCode LIKE prmCustomerCode
			AND mst_customer.Name LIKE prmCustomerName
			AND sal_customer_sales_order.RefNo LIKE prmRefNo
			AND sal_customer_sales_order.Remark LIKE prmRemark
			AND sal_customer_sales_order.ApprovalStatus LIKE prmApprovalStatus  
			AND sal_customer_sales_order.ClosingStatus LIKE prmClosingStatus
			AND DATE(sal_customer_sales_order.TransactionDate) BETWEEN prmFirstDate AND prmLastDate;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT
			sal_customer_sales_order.Code,
			sal_customer_sales_order.CUSTSONo,
			sal_customer_sales_order.Revision,
			sal_customer_sales_order.RevisionRemark,
			sal_customer_sales_order.RefCUSTSOCode,
			sal_customer_sales_order.TransactionDate,
			sal_customer_sales_order.CustomerPurchaseOrderCode,
			sal_customer_sales_order.BranchCode AS branchCode,
			mst_branch.Name AS branchName,
			sal_customer_sales_order.RequestDeliveryDate,
			sal_customer_sales_order.ExpiredDate,
			sal_customer_sales_order.CustomerCode,
			mst_customer.Name AS CustomerName,
			sal_customer_sales_order.EndUserCode,
			EndUser.Name AS EndUserName,
			sal_customer_sales_order.CurrencyCode,
			mst_currency.Name AS CurrencyName,
			sal_customer_sales_order.SalesPersonCode,
			mst_sales_person.Name AS SalesPersonName,
			sal_customer_sales_order.ProjectCode,
			mst_project.Name AS ProjectName,
			sal_customer_sales_order.RefNo,
			sal_customer_sales_order.Remark,
			sal_customer_sales_order.TotalTransactionAmount,
			sal_customer_sales_order.DiscountPercent,
			sal_customer_sales_order.DiscountAmount,
			(SELECT fn_getAdditionalFee(sal_customer_sales_order.Code,'SOD'))AS TotalAdditionalFeeAmount,
			sal_customer_sales_order.TaxBaseAmount,
			sal_customer_sales_order.Vatpercent,
			sal_customer_sales_order.Vatamount,
			sal_customer_sales_order.GrandTotalAmount,
			sal_customer_sales_order.ApprovalStatus,
			sal_customer_sales_order.ApprovalBy,
			sal_customer_sales_order.ApprovalDate,
			sal_customer_sales_order.ApprovalRemark,
			sal_customer_sales_order.ApprovalReasonCode,
			mst_reason.Name AS ApprovalReasonName,
			sal_customer_sales_order.ClosingStatus,
			sal_customer_sales_order.ClosingBy,
			sal_customer_sales_order.ClosingDate
		FROM sal_customer_sales_order
		INNER JOIN mst_currency ON sal_customer_sales_order.CurrencyCode=mst_currency.Code
		INNER JOIN mst_customer ON sal_customer_sales_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_customer EndUser ON sal_customer_sales_order.EndUserCode=EndUser.Code
		INNER JOIN mst_sales_person ON sal_customer_sales_order.SalesPersonCode=mst_sales_person.Code
		LEFT JOIN mst_project ON sal_customer_sales_order.ProjectCode=mst_project.Code
		INNER JOIN mst_branch ON mst_branch.Code= sal_customer_sales_order.BranchCode
		LEFT JOIN mst_reason ON sal_customer_sales_order.ApprovalReasonCode=mst_reason.Code
		WHERE sal_customer_sales_order.ValidStatus=1
			AND sal_customer_sales_order.Code LIKE ?
			AND sal_customer_sales_order.CustomerCode LIKE ?
			AND mst_customer.Name LIKE ?
			AND sal_customer_sales_order.RefNo LIKE ?
			AND sal_customer_sales_order.Remark LIKE ?
			AND sal_customer_sales_order.ApprovalStatus LIKE ?
			AND sal_customer_sales_order.ClosingStatus LIKE ?
			AND DATE(sal_customer_sales_order.TransactionDate) BETWEEN ? AND ?
		ORDER BY sal_customer_sales_order.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		SET @prmRefNo = prmRefNo;
		SET @prmRemark = prmRemark;
		SET @prmApprovalStatus = prmApprovalStatus;
		SET @prmClosingStatus=prmClosingStatus;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmRefNo,@prmRemark,@prmApprovalStatus,@prmClosingStatus,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_sales_order_search_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_sales_order_search_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_sales_order_search_list`(
	IN prmFlag CHAR(5),
	IN prmCode VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmSalesOrderSource VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
)
BEGIN
	IF prmFlag='COUNT' THEN
		SELECT count(customer_sales_order.Code)
		FROM(
			SELECT
				sal_customer_sales_order_by_purchase_order.Code,
				'PURCHASE_ORDER' AS SalesOrderSource,
				sal_customer_sales_order_by_purchase_order.BranchCode,
				sal_customer_sales_order_by_purchase_order.TransactionDate,
				sal_customer_sales_order_by_purchase_order.CustomerPurchaseOrderCode,
				sal_customer_sales_order_by_purchase_order.CustomerCode,
				sal_customer_sales_order_by_purchase_order.SalesPersonCode
			FROM sal_customer_sales_order_by_purchase_order 
			UNION ALL
				
			SELECT
				sal_customer_sales_order_by_blanket_order.Code,
				'BLANKET_ORDER' AS SalesOrderSource,
				sal_customer_sales_order_by_blanket_order.BranchCode,
				sal_customer_sales_order_by_blanket_order.TransactionDate,
				'' AS CustomerPurchaseOrderCode,
				sal_customer_sales_order_by_blanket_order.CustomerCode,
				sal_customer_sales_order_by_blanket_order.SalesPersonCode
			FROM sal_customer_sales_order_by_blanket_order
		)AS customer_sales_order
		INNER JOIN mst_customer ON customer_sales_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_sales_person ON customer_sales_order.SalesPersonCode=mst_sales_person.Code
		WHERE customer_sales_order.Code LIKE prmCode
		AND customer_sales_order.CustomerCode LIKE prmCustomerCode
		AND mst_customer.Name LIKE prmCustomerName
		AND customer_sales_order.SalesOrderSource LIKE prmSalesOrderSource
		AND DATE(customer_sales_order.TransactionDate) BETWEEN prmFirstDate AND prmLastDate;
			
	ELSEIF prmFlag='LISTS' THEN
		PREPARE STMT FROM 
		"SELECT 
			customer_sales_order.Code,
			customer_sales_order.SalesOrderSource,
			customer_sales_order.BranchCode,
			customer_sales_order.TransactionDate,
			customer_sales_order.CustomerPurchaseOrderCode,
			customer_sales_order.CustomerCode,
			mst_customer.Name AS CustomerName,
			customer_sales_order.SalesPersonCode,
			mst_sales_person.Name AS SalesPersonName
		FROM(
			SELECT
				sal_customer_sales_order_by_purchase_order.Code,
				'PURCHASE_ORDER' AS SalesOrderSource,
				sal_customer_sales_order_by_purchase_order.BranchCode,
				sal_customer_sales_order_by_purchase_order.TransactionDate,
				sal_customer_sales_order_by_purchase_order.CustomerPurchaseOrderCode,
				sal_customer_sales_order_by_purchase_order.CustomerCode,
				sal_customer_sales_order_by_purchase_order.SalesPersonCode
			FROM sal_customer_sales_order_by_purchase_order 
			UNION ALL
				
			SELECT
				sal_customer_sales_order_by_blanket_order.Code,
				'BLANKET_ORDER' AS SalesOrderSource,
				sal_customer_sales_order_by_blanket_order.BranchCode,
				sal_customer_sales_order_by_blanket_order.TransactionDate,
				'' AS CustomerPurchaseOrderCode,
				sal_customer_sales_order_by_blanket_order.CustomerCode,
				sal_customer_sales_order_by_blanket_order.SalesPersonCode
			FROM sal_customer_sales_order_by_blanket_order
		)AS customer_sales_order
		INNER JOIN mst_customer ON customer_sales_order.CustomerCode=mst_customer.Code
		INNER JOIN mst_sales_person ON customer_sales_order.SalesPersonCode=mst_sales_person.Code
		WHERE customer_sales_order.Code LIKE ?
		AND customer_sales_order.CustomerCode LIKE ?
		AND mst_customer.Name LIKE ?
		AND customer_sales_order.SalesOrderSource LIKE ?
		AND DATE(customer_sales_order.TransactionDate) BETWEEN ? AND ?
		ORDER BY customer_sales_order.TransactionDate DESC
		LIMIT ?,?";
		SET @prmCode = prmCode; 
		SET @prmCustomerCode = prmCustomerCode; 
		SET @prmCustomerName = prmCustomerName;
		set @prmSalesOrderSource=prmSalesOrderSource;
		SET @prmFirstDate = prmFirstDate; 
		SET @prmLastDate = prmLastDate;
		SET @prmLimitFrom = prmLimitFrom; 
		SET @prmLimitTo = prmLimitTo; 
		EXECUTE STMT USING @prmCode,@prmCustomerCode,@prmCustomerName,@prmSalesOrderSource,@prmFirstDate,@prmLastDate,@prmLimitFrom,@prmLimitTo;
		DEALLOCATE PREPARE STMT;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_sales_request_for_quotation_approval_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_sales_request_for_quotation_approval_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_sales_request_for_quotation_approval_list`(
	IN prmCode VARCHAR(250),
	IN prmTenderNo VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmProjectCode VARCHAR(250),
	IN prmSubject VARCHAR(250),
	IN prmApprovalStatus VARCHAR(50),
	IN prmEndUserCode VARCHAR(250),
	IN prmEndUserName VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	PREPARE STMT FROM 
		"SELECT
			sal_request_for_quotation.Code,
			sal_request_for_quotation.RFQNo,
			sal_request_for_quotation.Revision,
			sal_request_for_quotation.RefRFQCode,
			sal_request_for_quotation.TenderNo,
			sal_request_for_quotation.OrderStatus,
			sal_request_for_quotation.BranchCode,
			mst_branch.name AS branchName,
			sal_request_for_quotation.TransactionDate,
			sal_request_for_quotation.RegisteredDate,
			CASE 
                        WHEN sal_request_for_quotation.ReviewedStatus = 1 THEN 'YES'  
                        WHEN sal_request_for_quotation.ReviewedStatus = 0 THEN 'NO' 
			END AS ReviewedStatus,
			sal_request_for_quotation.PreBidMeetingDate,
			sal_request_for_quotation.SendToFactoryDate,
			sal_request_for_quotation.SubmittedDate AS submittedDateToCustomer,
			sal_request_for_quotation.ScopeOfSupply,
			sal_request_for_quotation.currencyCode,
			mst_currency.name AS currencyName,
			sal_request_for_quotation.customerCode,
			mst_customer.name AS customerName,
			sal_request_for_quotation.endUserCode,
			EndUser.name AS endUserName,
			sal_request_for_quotation.Attn,
			sal_request_for_quotation.SalesPersonCode,
			mst_sales_person.name AS SalesPersonName,
			sal_request_for_quotation.ProjectCode,
			mst_project.name AS projectName,
			sal_request_for_quotation.Subject,
			sal_request_for_quotation.RefNo,
			sal_request_for_quotation.ValidStatus,
			sal_request_for_quotation.Remark,
			sal_request_for_quotation.ApprovalStatus,
			sal_request_for_quotation.ApprovalReasonCode AS approvalReasonCode,
			mst_reason.Name AS approvalReasonName,
			sal_request_for_quotation.ApprovalRemark,
			sal_request_for_quotation.ClosingStatus
		    FROM
			sal_request_for_quotation 
		    INNER JOIN
			mst_customer 
			    ON sal_request_for_quotation.customerCode = mst_customer.Code 
		    INNER JOIN
			mst_customer EndUser 
			    ON sal_request_for_quotation.EndUserCode = EndUser.Code 
		    INNER JOIN
			mst_currency 
			    ON sal_request_for_quotation.CurrencyCode = mst_currency.Code 
		    INNER JOIN
			mst_branch 
			    ON sal_request_for_quotation.branchCode = mst_branch.Code 
		    INNER JOIN
			mst_sales_person 
			    ON sal_request_for_quotation.salesPersonCode = mst_sales_person.Code 
		    LEFT JOIN
			mst_project 
			    ON sal_request_for_quotation.ProjectCode = mst_project.Code 
		    LEFT JOIN
			mst_reason 
			    ON sal_request_for_quotation.ApprovalReasonCode = mst_reason.Code 
		    WHERE
			sal_request_for_quotation.Code LIKE ?
			AND sal_request_for_quotation.TenderNo LIKE ?
			AND sal_request_for_quotation.CustomerCode LIKE ?
			AND mst_customer.name LIKE ?
			AND sal_request_for_quotation.ProjectCode LIKE ? 
			AND sal_request_for_quotation.Subject LIKE ? 
			AND sal_request_for_quotation.ApprovalStatus LIKE ? 
			AND sal_request_for_quotation.ValidStatus = TRUE 
			AND sal_request_for_quotation.endUserCode LIKE ? 
			AND EndUser.name LIKE ?
			AND DATE(sal_request_for_quotation.TransactionDate) BETWEEN ? AND ?
		    ORDER BY
			sal_request_for_quotation.Code ASC LIMIT ?,?"; 
	SET @prmCode = prmCode; 
	SET @prmTenderNo = prmTenderNo; 
	SET @prmCustomerCode = prmCustomerCode; 
	SET @prmCustomerName = prmCustomerName; 
	SET @prmProjectCode = prmProjectCode;
	set @prmSubject = prmSubject;
	SET @prmApprovalStatus = prmApprovalStatus; 
	SET @prmEndUserCode = prmEndUserCode; 
	SET @prmEndUserName = prmEndUserName; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	SET @prmLimitFrom = prmLimitFrom; 
	SET @prmLimitTo = prmLimitTo; 
	EXECUTE STMT USING @prmCode,@prmTenderNo,@prmCustomerCode,@prmCustomerName,@prmProjectCode,@prmSubject,@prmApprovalStatus,@prmEndUserCode,@prmEndUserName,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitTo;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_sales_request_for_quotation_approval_list_count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_sales_request_for_quotation_approval_list_count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_sales_request_for_quotation_approval_list_count`(
	IN prmCode VARCHAR(250),
	IN prmTenderNo VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmProjectCode VARCHAR(250),
	IN prmSubject VARCHAR(250),
	IN prmApprovalStatus VARCHAR(50),
	IN prmEndUserCode VARCHAR(250),
	IN prmEndUserName VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME
    )
BEGIN
	
	SELECT COUNT(*) 
        FROM sal_request_for_quotation 
        INNER JOIN mst_customer ON sal_request_for_quotation.customerCode = mst_customer.Code 
        INNER JOIN mst_sales_person ON sal_request_for_quotation.salesPersonCode = mst_sales_person.Code 
        left JOIN mst_project ON sal_request_for_quotation.ProjectCode = mst_project.Code 
        INNER JOIN mst_customer EndUser ON sal_request_for_quotation.EndUserCode = EndUser.Code
        LEFT JOIN mst_reason ON sal_request_for_quotation.ApprovalReasonCode = mst_reason.Code 
        WHERE sal_request_for_quotation.Code LIKE prmCode 
        AND sal_request_for_quotation.TenderNo LIKE prmTenderNo 
        AND sal_request_for_quotation.CustomerCode LIKE prmCustomerCode
        AND mst_customer.name LIKE prmCustomerName
        AND sal_request_for_quotation.ProjectCode LIKE prmProjectCode 
        AND sal_request_for_quotation.Subject LIKE prmSubject
        AND sal_request_for_quotation.ApprovalStatus LIKE prmApprovalStatus
        AND sal_request_for_quotation.ValidStatus = TRUE  
        AND sal_request_for_quotation.endUserCode LIKE prmEndUserCode 
	AND EndUser.name LIKE prmEndUserName
        AND DATE(sal_request_for_quotation.TransactionDate) BETWEEN DATE(prmFirstDate) AND DATE(prmLastDate);	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_sales_request_for_quotation_closing_list` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_sales_request_for_quotation_closing_list` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_sales_request_for_quotation_closing_list`(
	IN prmCode VARCHAR(250),
	IN prmTenderNo VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmProjectCode VARCHAR(250),
	IN prmSubject VARCHAR(250),
	IN prmClosingStatus VARCHAR(50),
	IN prmEndUserCode VARCHAR(250),
	IN prmEndUserName VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME,
	IN prmLimitFrom INT,
	IN prmLimitTo INT
    )
BEGIN
	PREPARE STMT FROM 
		"SELECT
			sal_request_for_quotation.Code,
			sal_request_for_quotation.RFQNo,
			sal_request_for_quotation.Revision,
			sal_request_for_quotation.RefRFQCode,
			sal_request_for_quotation.TenderNo,
			sal_request_for_quotation.OrderStatus,
			sal_request_for_quotation.BranchCode,
			mst_branch.name AS branchName,
			sal_request_for_quotation.TransactionDate,
			sal_request_for_quotation.RegisteredDate,
			sal_request_for_quotation.ReviewedStatus,
			sal_request_for_quotation.PreBidMeetingDate,
			sal_request_for_quotation.SendToFactoryDate,
			sal_request_for_quotation.SubmittedDate AS submittedDateToCustomer,
			sal_request_for_quotation.ScopeOfSupply,
			sal_request_for_quotation.currencyCode,
			mst_currency.name AS currencyName,
			sal_request_for_quotation.customerCode,
			mst_customer.name AS customerName,
			sal_request_for_quotation.endUserCode,
			EndUser.name AS endUserName,
			sal_request_for_quotation.Attn,
			sal_request_for_quotation.SalesPersonCode,
			mst_sales_person.name AS SalesPersonName,
			sal_request_for_quotation.ProjectCode,
			mst_project.name AS projectName,
			sal_request_for_quotation.Subject,
			sal_request_for_quotation.RefNo,
			sal_request_for_quotation.ValidStatus,
			sal_request_for_quotation.Remark,
			sal_request_for_quotation.ClosingStatus
		    FROM
			sal_request_for_quotation 
		    INNER JOIN
			mst_customer 
			    ON sal_request_for_quotation.customerCode = mst_customer.Code 
		    INNER JOIN
			mst_customer EndUser 
			    ON sal_request_for_quotation.EndUserCode = EndUser.Code 
		    INNER JOIN
			mst_currency 
			    ON sal_request_for_quotation.CurrencyCode = mst_currency.Code 
		    INNER JOIN
			mst_branch 
			    ON sal_request_for_quotation.branchCode = mst_branch.Code 
		    INNER JOIN
			mst_sales_person 
			    ON sal_request_for_quotation.salesPersonCode = mst_sales_person.Code 
		    LEFT JOIN
			mst_project 
			    ON sal_request_for_quotation.ProjectCode = mst_project.Code 
		    LEFT JOIN
			mst_reason 
			    ON sal_request_for_quotation.ApprovalReasonCode = mst_reason.Code 
		    WHERE
			sal_request_for_quotation.Code LIKE ?
			AND sal_request_for_quotation.CustomerCode LIKE ?
			AND mst_customer.name LIKE ? 
			AND sal_request_for_quotation.tenderNo LIKE ? 
			AND sal_request_for_quotation.ProjectCode LIKE ? 
			AND sal_request_for_quotation.Subject LIKE ? 
			AND sal_request_for_quotation.ClosingStatus LIKE ?
			AND sal_request_for_quotation.ValidStatus = TRUE 
			AND sal_request_for_quotation.endUserCode LIKE ? 
			AND EndUser.name LIKE ? 
			AND DATE(sal_request_for_quotation.TransactionDate) BETWEEN ? AND ?
		    ORDER BY
			sal_request_for_quotation.Code ASC LIMIT ?,?"; 
	SET @prmCode = prmCode; 
	SET @prmTenderNo = prmTenderNo; 
	SET @prmCustomerCode = prmCustomerCode; 
	SET @prmCustomerName = prmCustomerName; 
	SET @prmProjectCode = prmProjectCode;
	SET @prmSubject = prmSubject;
	SET @prmClosingStatus = prmClosingStatus; 
	SET @prmEndUserCode = prmEndUserCode; 
	SET @prmEndUserName = prmEndUserName; 
	SET @prmFirstDate = prmFirstDate; 
	SET @prmLastDate = prmLastDate;
	SET @prmLimitFrom = prmLimitFrom; 
	SET @prmLimitTo = prmLimitTo; 
	EXECUTE STMT USING @prmCode,@prmTenderNo,@prmCustomerCode,@prmCustomerName,@prmProjectCode,@prmSubject,@prmClosingStatus,@prmEndUserCode,@prmEndUserName,@prmFirstDate,@prmLastDate,@prmLimitFrom, @prmLimitTo;
	DEALLOCATE PREPARE STMT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_sales_request_for_quotation_closing_list_count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_sales_request_for_quotation_closing_list_count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_sales_request_for_quotation_closing_list_count`(
	IN prmCode VARCHAR(250),
	IN prmTenderNo VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmProjectCode VARCHAR(250),
	IN prmSubject VARCHAR(250),
	IN prmClosingStatus VARCHAR(50),
	IN prmEndUserCode VARCHAR(250),
	IN prmEndUserName VARCHAR(250),
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME
    )
BEGIN
	
	SELECT COUNT(*) 
        FROM sal_request_for_quotation 
        INNER JOIN mst_customer ON sal_request_for_quotation.customerCode = mst_customer.Code 
        INNER JOIN mst_sales_person ON sal_request_for_quotation.salesPersonCode = mst_sales_person.Code 
        left JOIN mst_project ON sal_request_for_quotation.ProjectCode = mst_project.Code 
        INNER JOIN mst_customer EndUser ON sal_request_for_quotation.EndUserCode = EndUser.Code
        WHERE sal_request_for_quotation.Code LIKE prmCode 
        AND sal_request_for_quotation.tenderNo LIKE prmTenderNo 
        AND sal_request_for_quotation.CustomerCode LIKE prmCustomerCode
        AND mst_customer.name LIKE prmCustomerName
        AND sal_request_for_quotation.ProjectCode LIKE prmProjectCode 
        AND sal_request_for_quotation.Subject LIKE prmSubject
        AND sal_request_for_quotation.ClosingStatus LIKE prmClosingStatus
        AND sal_request_for_quotation.ValidStatus = TRUE  
        AND sal_request_for_quotation.endUserCode LIKE prmEndUserCode 
	AND EndUser.name LIKE prmEndUserName
        AND DATE(sal_request_for_quotation.TransactionDate) BETWEEN DATE(prmFirstDate) AND DATE(prmLastDate);	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `usp_sal_sales_quotation_approval_list_count` */

/*!50003 DROP PROCEDURE IF EXISTS  `usp_sal_sales_quotation_approval_list_count` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`mrpuser`@`%` PROCEDURE `usp_sal_sales_quotation_approval_list_count`(
	IN prmCode VARCHAR(250),
	IN prmRemark VARCHAR(250),
	IN prmRefNo VARCHAR(250),
	IN prmCustomerCode VARCHAR(250),
	IN prmCustomerName VARCHAR(250),
	IN prmSALQUOStatus VARCHAR(250),
	in prmValidStatus boolean,
	IN prmFirstDate DATETIME,
	IN prmLastDate DATETIME
    )
BEGIN
	SELECT COUNT(sal_sales_quotation.Code)  
                 FROM sal_sales_quotation 
                 INNER JOIN mst_city ON sal_sales_quotation.ShipToCode=mst_city.Code 
                 INNER JOIN mst_term_of_delivery ON sal_sales_quotation.termOfDeliveryCode=mst_term_of_delivery.Code 
                 INNER JOIN sal_request_for_quotation ON  sal_sales_quotation.`RFQNo` = sal_request_for_quotation.`code` 
                 INNER JOIN mst_project ON sal_request_for_quotation.projectCode = mst_project.Code 
                 INNER JOIN mst_branch ON sal_request_for_quotation.BranchCode = mst_branch.Code 
                 INNER JOIN mst_customer ON sal_sales_quotation.`CustomerCode` = mst_customer.Code 
                 INNER JOIN mst_sales_person ON sal_request_for_quotation.salesPersonCode = mst_sales_person.Code 
                 WHERE sal_sales_quotation.code LIKE prmCode 
                 AND sal_sales_quotation.Remark LIKE prmRemark         
                 AND sal_sales_quotation.refNo LIKE prmRefNo       
                 AND sal_sales_quotation.CustomerCode LIKE prmCustomerCode        
                 AND mst_customer.name LIKE prmCustomerName  
                 AND sal_sales_quotation.SALQUOStatus LIKE prmSALQUOStatus 
                 AND sal_sales_quotation.ValidStatus like prmValidStatus             
                 AND DATE(sal_sales_quotation.TransactionDate) BETWEEN date(prmFirstDate) AND date(prmLastDate);	
    END */$$
DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
